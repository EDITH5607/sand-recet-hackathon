[0.16 - 5.24] hi everyone in this video I&#39;m going to
[2.76 - 7.68] build a really useful tool for Reddit
[5.24 - 10.60] User it&#39;s a Chrome extension powered by
[7.68 - 13.56] AI which will allow you to prompt with
[10.60 - 16.28] subreddit post as well as any individual
[13.56 - 19.56] post and it comment sounds amazing right
[16.28 - 22.00] yeah it is so the story started when I
[19.56 - 24.40] encounter a problem so my time schedule
[22.00 - 26.36] is very tight but I&#39;m also interested in
[24.40 - 28.76] engaging with various communities on
[26.36 - 30.88] Reddit and other social media platform
[28.76 - 33.44] however I don&#39;t have the time to
[30.88 - 35.56] actually shift through all the post and
[33.44 - 38.44] find the one that actually genuinely
[35.56 - 41.64] interest me so if you have used Reddit
[38.44 - 44.80] or X or any social media platform for
[41.64 - 46.72] specific interest or engagement then you
[44.80 - 49.20] have noticed that there are tons of
[46.72 - 51.04] posts are published daily basis with
[49.20 - 53.52] each communities and if you are
[51.04 - 55.72] interested in a specific or micro area
[53.52 - 58.56] it&#39;s really difficult to find relevant
[55.72 - 61.72] post to engage with and I also face a
[58.56 - 64.56] similar issue when I was using Reddit
[61.72 - 66.80] and specifically all the subreddit I am
[64.56 - 69.04] interested in let&#39;s say in the
[66.80 - 71.88] JavaScript so this is a subredit for
[69.04 - 73.64] JavaScript communities and if I go and
[71.88 - 76.80] scroll through then you can see there
[73.64 - 79.72] are tons of post and there are tons of
[76.80 - 81.84] post that I&#39;m not interested in so if I
[79.72 - 84.96] am looking for a particular or a
[81.84 - 87.56] specific area of post then how I will
[84.96 - 90.04] able to actually find them I have to
[87.56 - 92.48] scroll then I have to read those title
[90.04 - 94.24] or the description to identify the
[92.48 - 96.56] context of that post to understand
[94.24 - 98.84] that&#39;s what&#39;s going on on that post and
[96.56 - 101.20] which is really really timec consuming
[98.84 - 103.56] and that&#39;s not productive for programmer
[101.20 - 106.24] or developer who have a full-time job
[103.56 - 109.92] who do a lot of stuff so then I think
[106.24 - 112.28] okay how we can solve this and in 2025
[109.92 - 114.28] we have ai so why not just use it to
[112.28 - 116.68] actually solve this problem so if I just
[114.28 - 119.28] scroll more then you can see that I am
[116.68 - 120.96] just fetching all the data for almost 2
[119.28 - 123.76] weeks and and you can see that is 15
[120.96 - 125.52] days ago or if I just go below more then
[123.76 - 128.32] it will come like almost 1 month ago
[125.52 - 131.60] post and which is not easier for anybody
[128.32 - 133.80] to read one by one post and find out the
[131.60 - 135.76] interested post that anybody looking for
[133.80 - 138.04] so this Chrome extension will help to
[135.76 - 140.56] prompt with those post that you are
[138.04 - 143.52] looking for so if I just right click on
[140.56 - 145.16] the subedit page and I can see a menu
[143.52 - 147.40] which is called RIT assistant yeah I
[145.16 - 149.52] didn&#39;t give any name yet and I have two
[147.40 - 151.20] menu one is post inside another is
[149.52 - 153.32] comment inside so if I just click on the
[151.20 - 157.00] post inside then you can see that I have
[153.32 - 159.40] total 128 post that I have feted or
[157.00 - 161.44] scroll through and all the post I can
[159.40 - 164.44] see in the list and you can see there
[161.44 - 166.12] are a search input and a search button
[164.44 - 168.04] of course it&#39;s not the search that we
[166.12 - 170.32] have by default in the Reddit which work
[168.04 - 172.40] with keyword but this search actually
[170.32 - 176.72] work with prompt let&#39;s say when we
[172.40 - 178.64] prompt on any llm like gm9 GPT we talk
[176.72 - 180.88] with it so the same scenario will happen
[178.64 - 184.76] here we can talk with all the subredit
[180.88 - 186.96] post for example in 128 post I want to
[184.76 - 189.00] look into the post that related to
[186.96 - 191.68] someone who is actually seeking help in
[189.00 - 194.16] JavaScript or maybe I want to find the
[191.68 - 196.28] post that related to JavaScript Advanced
[194.16 - 198.64] concept so let&#39;s just search this is the
[196.28 - 201.32] prompt so give me the post related to
[198.64 - 203.44] JavaScript Advan concept so the thing is
[201.32 - 206.04] if we just search these things in the
[203.44 - 208.04] Reddit search bar redit doesn&#39;t give you
[206.04 - 210.16] all the post that related to JavaScript
[208.04 - 211.96] advant concept it will take your keyword
[210.16 - 214.56] and it will match those keyword with
[211.96 - 216.12] those post title or the description and
[214.56 - 218.88] because these things requir
[216.12 - 221.16] brainstorming as a human perspective or
[218.88 - 223.32] AI perspective so basic General search
[221.16 - 226.52] will not help here so you need some sort
[223.32 - 228.04] of brainstorming to identify those ports
[226.52 - 229.88] that&#39;s actually related to JavaScript
[228.04 - 232.60] Advanced concept so that&#39;s why what I&#39;m
[229.88 - 235.56] doing here I will take that prompt and
[232.60 - 237.72] we already have 128 post all the title
[235.56 - 240.20] and the short description now I can just
[237.72 - 242.80] put all the thing to the AI to give me
[240.20 - 245.68] the result if I now just just search
[242.80 - 249.04] with that promt then I should get all
[245.68 - 252.36] the related post and as you can see that
[249.04 - 255.40] it give me 10 post there was 128 post
[252.36 - 257.28] earlier but now I have only 10 post and
[255.40 - 259.36] what are the post the post are related
[257.28 - 261.48] to my prompt I asked to give me
[259.36 - 263.52] JavaScript Advanced concept and you can
[261.48 - 265.36] see that all the post is kind of like
[263.52 - 267.48] similar the advanced concept the first
[265.36 - 270.16] one is could JavaScript have synchronous
[267.48 - 271.48] await isn&#39;t that sound Advan Advance or
[270.16 - 274.12] something like that then we have
[271.48 - 276.44] debouncing bases throttling then event
[274.12 - 279.72] Loop virtualized JavaScript yeah that&#39;s
[276.44 - 283.00] a advanced concept then web workers then
[279.72 - 285.92] we have pattern for memory efficient to
[283.00 - 288.96] manipulation then there is a store
[285.92 - 291.64] selector restructuring then we have uh
[288.96 - 293.84] perplexing JavaScript parsing puzzle
[291.64 - 296.08] these are like super Advanced things I
[293.84 - 298.20] didn&#39;t even know some of the word so if
[296.08 - 300.60] you think like a general perspective if
[298.20 - 302.84] we just scroll to all the post and try
[300.60 - 305.24] to find out what are the advanced
[302.84 - 307.44] concept that people are posting or
[305.24 - 309.76] people are seeking help on then it will
[307.44 - 311.96] be really hard but now with this Chrome
[309.76 - 314.72] extension it become super easy we will
[311.96 - 316.60] just add any prompt we want to match
[314.72 - 318.32] with our post title and the description
[316.60 - 320.24] then we&#39;re going to just search and then
[318.32 - 322.48] we can see all the posts there are only
[320.24 - 324.76] 10 posts let&#39;s say I want to engage or I
[322.48 - 327.08] want to seek knowledge on the post
[324.76 - 329.84] related to event Loop you can see that
[327.08 - 332.12] we have event Loop or maybe I can engage
[329.84 - 334.84] with web workers or maybe I will go with
[332.12 - 337.76] the pattern because it seems like the
[334.84 - 340.00] the score is used like 59 score we have
[337.76 - 341.68] uh 15 comments or I think I should go
[340.00 - 343.96] with the event Loop because it have more
[341.68 - 346.52] comments so what I am going to show you
[343.96 - 350.04] that I can also use this extension to
[346.52 - 352.28] analyze the comment and get took out all
[350.04 - 354.32] the related information from all the
[352.28 - 356.68] comment which also need to be done as
[354.32 - 359.52] well as so let&#39;s just find okay I I find
[356.68 - 361.52] one this one is like almost 71 comments
[359.52 - 363.60] I I think this one I&#39;m looking for
[361.52 - 365.36] because there are tons of comments now I
[363.60 - 368.20] have to analyze all the comment and I
[365.36 - 369.92] have to find out uh those summarized
[368.20 - 371.52] version of all the comment or the
[369.92 - 374.16] information that I&#39;m seeking from the
[371.52 - 376.88] comment so the post is about a 10x
[374.16 - 378.84] faster type script and if you go down
[376.88 - 380.68] then you can see there are tons of
[378.84 - 382.72] comments and some of the comments are
[380.68 - 385.60] too big and if you just start reading
[382.72 - 387.40] one by one or maybe five or maybe 10 it
[385.60 - 389.36] will take like hours to read all the
[387.40 - 391.96] comments to understand all the context
[389.36 - 394.44] and which always will be not productive
[391.96 - 396.76] for everyone and people like someone who
[394.44 - 398.52] have PC schedule is of course going to
[396.76 - 400.68] be like terrible to read all those
[398.52 - 402.64] things so now you can see that we have
[400.68 - 404.32] the menu and there are another one which
[402.64 - 405.96] is called comment inside so if I just
[404.32 - 408.08] click on the comment inside then you can
[405.96 - 409.92] see there are 69 comments and all the
[408.08 - 411.84] comments you can see here and here the
[409.92 - 414.60] same thing we have the input now we can
[411.84 - 416.96] just search on the comment or we can ask
[414.60 - 418.92] something that we want to know from all
[416.96 - 420.72] these comment so first just search about
[418.92 - 423.68] the summarized version of the comments
[420.72 - 425.08] so give me summary of all the comment so
[423.68 - 427.20] I don&#39;t have time to read all the
[425.08 - 429.36] comments so I just want the kind of like
[427.20 - 431.24] a summary version of all the comments so
[429.36 - 433.48] let&#39;s ask and see what it actually give
[431.24 - 436.44] me and as you can see that it gives me a
[433.48 - 439.20] quite response as like as um the chat GB
[436.44 - 443.04] or gini I give so people are actually
[439.20 - 445.92] discussing about R/C then performance
[443.04 - 448.40] amplification web assembly runtime so on
[445.92 - 451.64] so on but uh let&#39;s see let&#39;s ask
[448.40 - 454.96] something else let&#39;s say um what are the
[451.64 - 457.64] things people talking about most so
[454.96 - 460.36] let&#39;s start with this one so it is
[457.64 - 462.92] saying the go Port of typescript
[460.36 - 465.20] compiler performance Improvement impact
[462.92 - 467.60] on the typescript ecosystem then web
[465.20 - 470.32] assembly the role of original typescript
[467.60 - 472.68] codebase alternative language then use
[470.32 - 475.20] of generative Ai and so on so it&#39;s kind
[472.68 - 477.40] of like the summarized version of all
[475.20 - 480.00] the comments so now let&#39;s try with
[477.40 - 482.36] something different let&#39;s say let&#39;s just
[480.00 - 484.32] visit some of the comment and try to
[482.36 - 487.00] seek information so I think I should
[484.32 - 489.48] search like what are the new idea people
[487.00 - 491.96] are mentioning because uh the ideas are
[489.48 - 495.48] important because typescript recently uh
[491.96 - 497.44] using go as behind the scenes so I think
[495.48 - 500.56] that&#39;s why this is the post about so
[497.44 - 503.60] let&#39;s just ask the what are the new idea
[500.56 - 506.48] people sharing so with that question I
[503.60 - 508.96] maybe will know all the things like new
[506.48 - 510.64] to me so yeah let&#39;s just search it and
[508.96 - 512.84] you can see that what are the idea
[510.64 - 514.84] people are sharing so excitement about
[512.84 - 517.12] performance Improvement yes the most
[514.84 - 519.48] people are sharing that the excitement
[517.12 - 521.28] because now it&#39;s ported with go that&#39;s
[519.48 - 523.16] mean the performance will be increased
[521.28 - 524.68] that&#39;s why we can say 10x faster types
[523.16 - 527.76] script or something like that then
[524.68 - 529.80] choice of go verus rust and because uh
[527.76 - 532.28] we have another alternative Choice like
[529.80 - 534.88] rust we can also use that for the
[532.28 - 537.52] typescript Cod but it doesn&#39;t use rust
[534.88 - 539.44] instead it use go so why that used so
[537.52 - 541.80] that means the question is on the choice
[539.44 - 543.76] chice so that&#39;s also a part of the
[541.80 - 545.88] discussion so that&#39;s why it gives me
[543.76 - 547.60] like choice of Go versus rust then we
[545.88 - 549.92] have impact on typescript developers
[547.60 - 552.52] workflow so people are also concerning
[549.92 - 555.12] that okay is that going to uh impact on
[552.52 - 557.72] our development workflow or not then we
[555.12 - 559.28] have uh breaking changes things or not
[557.72 - 562.24] then of course web assembly support
[559.28 - 564.32] because now is uh supporting a um really
[562.24 - 566.00] super fast programming language so is
[564.32 - 568.76] that going to support web assembly or
[566.00 - 571.00] not uh then we have the integration with
[568.76 - 572.88] runtime like ban Dino or something like
[571.00 - 575.56] that and there is another topic which
[572.88 - 577.52] called like LSP language server protocol
[575.56 - 580.56] I don&#39;t even know about that so it says
[577.52 - 583.24] that the the mention of an actual LSP
[580.56 - 585.36] implementation is seen as good news so
[583.24 - 588.04] I&#39;m not I don&#39;t know about this maybe I
[585.36 - 590.24] can ask or study these things but the
[588.04 - 592.40] key point is if I try to read all the
[590.24 - 595.12] comments and try to find out any single
[592.40 - 597.20] informations like new one it it was
[595.12 - 599.64] really time time consuming now I can
[597.20 - 601.20] just easily grab those information with
[599.64 - 603.28] like a minute you can see that this
[601.20 - 605.32] keyword is like new to me now I learned
[603.28 - 607.88] a new idea or like new things or new
[605.32 - 610.44] topic and then there is a like impa
[607.88 - 613.48] impact of s swc so I don&#39;t even know
[610.44 - 615.52] that what s swc is so this is like two
[613.48 - 618.60] or three thing I just directly get the
[615.52 - 620.72] idea without just spending hours to read
[618.60 - 622.64] those comments and now I can just search
[620.72 - 624.88] uh those keyword in Google to understand
[622.64 - 627.88] what&#39;s happening what are the new idea
[624.88 - 629.96] and if I try to let&#39;s say fetch more
[627.88 - 631.88] specific let&#39;s say give me all the
[629.96 - 636.12] comment that&#39;s related to this so give
[631.88 - 638.40] me comments that related to LSP so let&#39;s
[636.12 - 640.56] see what actually people sharing about
[638.40 - 642.20] LSP and you can see that all the
[640.56 - 644.72] comments so this one is the first one
[642.20 - 647.28] right now our focus is on where we can
[644.72 - 649.36] provide the most value blah blah blah so
[647.28 - 651.88] it&#39;s all about like LSP I think this one
[649.36 - 654.96] is like a bit hidden but they will also
[651.88 - 657.20] do an actual LSP now great news so there
[654.96 - 659.32] might be some behind the scenes uh
[657.20 - 661.60] things happening with LSP I don&#39;t know
[659.32 - 664.12] about this keyword so but the main
[661.60 - 667.44] perspective is that with this tool you
[664.12 - 670.08] can just now research a lot while you
[667.44 - 672.44] research by reading those comment and
[670.08 - 673.96] all that stuff so I think this tool is
[672.44 - 676.36] going to be like really really helpful
[673.96 - 679.40] if you are a CO Reddit user as like as
[676.36 - 681.76] mine because I&#39;m using Reddit uh often
[679.40 - 684.52] and it&#39;s really timec consuming when I
[681.76 - 687.04] have a lot of post need to be find out
[684.52 - 689.48] any information or seeking help or
[687.04 - 691.48] whatever so I think at least this two
[689.48 - 693.12] going to solve my problem as well as if
[691.48 - 695.40] you are the same then you can also use
[693.12 - 698.40] this tool to improve your productivity
[695.40 - 701.56] and you can use at least R it with more
[698.40 - 703.76] efficient way so I think that&#39;s it for
[701.56 - 705.56] about the whole demo of the Chrome
[703.76 - 707.68] extension that we are going to build by
[705.56 - 710.04] watching this video you will gain a
[707.68 - 712.72] wealth of knowledge specifically on how
[710.04 - 714.52] to use typescript or react to build
[712.72 - 717.16] Chrome extension using the framework
[714.52 - 719.52] called wxt and this is a truly
[717.16 - 722.08] impressive framework enabling you to to
[719.52 - 724.64] use frontend framework like react View
[722.08 - 727.08] iselt and solid to develop Chrome
[724.64 - 728.80] extension and of course production ready
[727.08 - 731.20] and I will demonstrate how
[728.80 - 733.80] straightforward it is to use react or
[731.20 - 735.68] types script for this purpose and I will
[733.80 - 737.56] guide you through the entire project
[735.68 - 740.24] from installation to competation
[737.56 - 742.52] covering some of the essential concept
[740.24 - 745.44] like Chrome extension storage where you
[742.52 - 747.72] can store important information and
[745.44 - 749.80] later you can use those information in
[747.72 - 751.72] your Chrome extension then we are going
[749.80 - 754.16] to learn about Chrome extension
[751.72 - 756.28] messaging how you can send message to
[754.16 - 758.48] content script to background script
[756.28 - 760.88] let&#39;s say background script to content
[758.48 - 763.00] script or maybe popup to background or
[760.88 - 765.04] maybe content so all the messaging stuff
[763.00 - 766.60] if you are not clear then you can
[765.04 - 768.84] understand them properly by watching
[766.60 - 771.32] this video you&#39;re going to learn the
[768.84 - 773.60] background script and the menu how all
[771.32 - 776.52] together work and additionally towards
[773.60 - 779.32] the end of the video I will attempt to
[776.52 - 781.52] incorporate unit testing with v test I
[779.32 - 783.44] will try to Showcase how to integrate
[781.52 - 785.92] unit testing in your Chrome extension
[783.44 - 788.16] development process for enhance
[785.92 - 790.04] stability and by the end of this video
[788.16 - 792.88] you will not only learn the development
[790.04 - 795.84] process but also understand how building
[792.88 - 798.72] a Chrome extension can solve your own
[795.84 - 801.56] unique problems overall it will be very
[798.72 - 804.32] very worthwh learning experience so
[801.56 - 807.40] let&#39;s dive into the video so let&#39;s
[804.32 - 810.04] install wxt framework in our desktop
[807.40 - 812.76] with typescript and react and later we
[810.04 - 816.28] are going to install tail wi CSS for
[812.76 - 818.00] styling so you have to go to wxt DOD and
[816.28 - 820.40] in the documentation you will find the
[818.00 - 824.16] installation process you can use npm
[820.40 - 826.92] pnpm B yarn anything I&#39;m using pnpm and
[824.16 - 829.76] this is the command to install so I am
[826.92 - 831.92] in the desktop folder in the terminal so
[829.76 - 834.20] let&#39;s just hit the command you can use
[831.92 - 836.96] any IDE you prefer I&#39;m using visual
[834.20 - 839.12] studio code and it will ask you the
[836.96 - 841.64] project directory so I&#39;m going to give
[839.12 - 843.96] with like Reddit assistant I&#39;m going to
[841.64 - 847.24] give the name of the project Reddit
[843.96 - 850.64] assistant and I want it to start with
[847.24 - 853.12] react and pnpm and that&#39;s it so let&#39;s
[850.64 - 855.64] move into Reddit assistant folder and
[853.12 - 858.16] open that folder into vs code so this is
[855.64 - 860.44] our project so we have to install all
[858.16 - 863.68] the dependency first so I&#39;m going to use
[860.44 - 866.04] npm install and it will install all the
[863.68 - 867.84] dependency from the package.json file
[866.04 - 869.88] and if I show you the file then you can
[867.84 - 872.32] see we have dependency of react and
[869.88 - 875.16] react Dom and for the dep dependency we
[872.32 - 878.68] have the react type react Dom type and
[875.16 - 881.00] we have wxt Deb which is also helped to
[878.68 - 883.80] fill Chrome extension with react then we
[881.00 - 886.64] have typescript as well as wxt now the
[883.80 - 888.64] installation has finished so let&#39;s start
[886.64 - 891.88] the project so for doing that you will
[888.64 - 893.60] find the script in the package.json de
[891.88 - 895.44] and you will also find the build script
[893.60 - 899.12] as well as for different browser like
[895.44 - 902.24] Firefox and for Chrome you can just use
[899.12 - 904.92] bued so I&#39;m going to start like pnpm T
[902.24 - 907.12] and it&#39;s going to open a Chrome browser
[904.92 - 909.76] and in the top of that browser you can
[907.12 - 911.88] see that extension as well as your
[909.76 - 914.16] extension that we have so if you click
[911.88 - 916.12] on that then you can see that&#39;s the
[914.16 - 919.12] extension which is using react
[916.12 - 922.04] typescript and wxt as the framework so
[919.12 - 924.72] when you close the browser then it will
[922.04 - 927.32] be gone and for open the browser again
[924.72 - 930.56] you can open the terminal and you can
[927.32 - 932.28] press o and enter then it will again
[930.56 - 935.40] open the browser with the extension
[932.28 - 938.56] install itself so when we develop Chrome
[935.40 - 941.64] extension with vanilla JS we have to
[938.56 - 944.28] write the code in JS then we have to add
[941.64 - 946.56] the extension manually from our manage
[944.28 - 949.52] extension seting in the Chrome browser
[946.56 - 951.76] then also we have to load that local
[949.52 - 954.52] file into the Chrome extension and every
[951.76 - 957.36] time we change any code we always have
[954.52 - 959.60] to refresh the extension like this but
[957.36 - 962.60] the cool thing is when we use any
[959.60 - 965.16] framework like wxt or plasmo then we
[962.60 - 967.00] don&#39;t have to do all the task by ourself
[965.16 - 969.52] so it actually wrapped with the
[967.00 - 971.76] framework itself so we just have to
[969.52 - 974.36] develop and it will auto refresh that&#39;s
[971.76 - 976.72] mean we have the hot reload support and
[974.36 - 979.36] it will gives you bundling and other
[976.72 - 982.08] feature out of the box so now let&#39;s see
[979.36 - 984.68] the documentation that what&#39;s in there
[982.08 - 986.96] about creating the project so you can
[984.68 - 988.92] create the project with this command and
[986.96 - 992.32] then also you can create project from
[988.92 - 995.04] scratch so you have to use p pnpm in it
[992.32 - 997.88] then you have to install wxt into your
[995.04 - 1000.40] desktop and then all the other procedure
[997.88 - 1002.16] manually but I prefer to use just single
[1000.40 - 1003.72] command to actually install all the
[1002.16 - 1005.84] stuff so now let&#39;s talk about the
[1003.72 - 1008.44] project structure when we installed
[1005.84 - 1011.36] initially the project so if you look
[1008.44 - 1014.12] into the folder structure you have a do
[1011.36 - 1016.12] output directory which is basically the
[1014.12 - 1018.16] output folder when we build the Chrome
[1016.12 - 1020.16] extension right now all the build
[1018.16 - 1023.24] process happening in our terminal when
[1020.16 - 1025.48] we run our project and when we press o
[1023.24 - 1027.44] and enter Then it actually open the
[1025.48 - 1029.28] browser it actually install the Chrome
[1027.44 - 1031.80] extension in that browser and we can
[1029.28 - 1033.88] debug all the stuff that mean the
[1031.80 - 1036.56] building process happen on the runtime
[1033.88 - 1038.60] but when it required to make it
[1036.56 - 1040.88] production ready then we have to build
[1038.60 - 1043.52] the whole extension so that time we have
[1040.88 - 1046.72] to use the build command like npm build
[1043.52 - 1049.60] or pnpm build and when we do so then it
[1046.72 - 1052.64] actually bundle all the code and create
[1049.60 - 1055.64] a production ready Chrome extension file
[1052.64 - 1058.52] and that file or folder actually appear
[1055.64 - 1062.08] in your output folder and you can see
[1058.52 - 1065.12] that output SL Chrome dm3 that&#39;s mean
[1062.08 - 1067.40] it&#39;s uh manifest version three and all
[1065.12 - 1069.64] of the asset you can see on that
[1067.40 - 1072.16] particular folder so if you want to use
[1069.64 - 1074.56] the production ready extension in your
[1072.16 - 1077.16] local browser then you can just simply
[1074.56 - 1078.88] move this folder into anywhere or you
[1077.16 - 1081.24] can just simply open your Chrome
[1078.88 - 1083.36] extension manager and where you can just
[1081.24 - 1085.72] choose this folder to load that
[1083.36 - 1087.80] particular extension so make sure you
[1085.72 - 1090.48] find the manifest.json file in the root
[1087.80 - 1092.40] directory and then load the extension
[1090.48 - 1093.92] and then it will work as expected so
[1092.40 - 1096.16] that&#39;s how the build process actually
[1093.92 - 1099.40] work and about the folder structure or
[1096.16 - 1101.40] the project structure we have wxt folder
[1099.40 - 1105.48] as well as which actually holds some of
[1101.40 - 1108.00] the types that necessary for WX XT to
[1105.48 - 1110.44] manage the project in typescript as well
[1108.00 - 1112.60] as in react sometimes and then we have
[1110.44 - 1115.60] the asset folder where you can put all
[1112.60 - 1117.88] the asset including CSS images all that
[1115.60 - 1120.60] stuff and then we have the entry point
[1117.88 - 1122.80] folder and which is one of the important
[1120.60 - 1124.76] folder we&#39;re going to use it a lot and
[1122.80 - 1127.48] the public folder where you can also put
[1124.76 - 1130.40] some icons that related in your
[1127.48 - 1133.64] manifest.json file and also we will get
[1130.40 - 1133.64] a wxt doc
[1134.64 - 1141.60] config.txt denion plugins related to wxt
[1139.04 - 1144.56] and so on so now let&#39;s talk about entry
[1141.60 - 1146.48] points folder so if you explore the
[1144.56 - 1148.52] documentation then you can see the
[1146.48 - 1150.80] similar kind of a structure as I
[1148.52 - 1152.80] discussed and you will get a brief
[1150.80 - 1155.20] summary of all the folder and I think
[1152.80 - 1157.40] the documentation is really good anybody
[1155.20 - 1159.48] can understand by reading it so as you
[1157.40 - 1162.12] can see in the entry points folder it
[1159.48 - 1164.32] will contains all the entry point that
[1162.12 - 1167.24] get bundle into your extension that&#39;s
[1164.32 - 1170.28] mean let&#39;s say in your extension you
[1167.24 - 1172.00] have popup so if I if I just open the
[1170.28 - 1174.80] existing one then you can see this one
[1172.00 - 1177.12] is the popup and when we do any perform
[1174.80 - 1179.76] in action then we need JavaScript and
[1177.12 - 1182.08] for the popup related action that we
[1179.76 - 1185.04] write code on JavaScript which we can
[1182.08 - 1187.32] say popup script so that&#39;s mean we need
[1185.04 - 1189.72] some sort of uh files for handling those
[1187.32 - 1192.32] script so that&#39;s we can call popup and
[1189.72 - 1195.16] it&#39;s script then also we have let&#39;s say
[1192.32 - 1197.08] menu background so if I just open or
[1195.16 - 1199.68] right click on any page then you can see
[1197.08 - 1202.60] the menu and there our submenu as well
[1199.68 - 1204.56] as so this is also handled in the in a
[1202.60 - 1207.20] file in a Chrome extension which is
[1204.56 - 1209.48] called background.js or you can call it
[1207.20 - 1212.96] like background script and another thing
[1209.48 - 1216.04] is when we click click on any menu then
[1212.96 - 1218.32] you can see there are UI rendered on any
[1216.04 - 1220.84] page for any Chrome extension that&#39;s
[1218.32 - 1223.32] actually rendered from the content so
[1220.84 - 1226.12] there is a file where we write code
[1223.32 - 1228.96] where we can inject any sort of HTML
[1226.12 - 1231.40] element into the any web page so that&#39;s
[1228.96 - 1233.76] uh we called like content script so in
[1231.40 - 1237.00] general in the entry point folder we
[1233.76 - 1239.20] actually put all the file related to the
[1237.00 - 1241.56] Chrome extensions let&#39;s say we have
[1239.20 - 1243.52] popup script and as you can see in this
[1241.56 - 1245.80] entry folder entry point folder we
[1243.52 - 1249.20] already have popup folder and this popup
[1245.80 - 1251.84] folder is the popup if I just uh open
[1249.20 - 1254.28] the browser again then you can see this
[1251.84 - 1256.72] is the popup and this is the screen or
[1254.28 - 1258.92] the uh code that actually rendered here
[1256.72 - 1261.20] this is also an UI and also so this
[1258.92 - 1263.48] functionality is coming from that code
[1261.20 - 1265.64] so this is about the popup so it&#39;s
[1263.48 - 1268.20] actually contained in the popup folder
[1265.64 - 1271.12] and it&#39;s a react project as well as as I
[1268.20 - 1273.20] discussed we have background script and
[1271.12 - 1276.08] this is the script which actually run in
[1273.20 - 1278.88] the background and if I just show you
[1276.08 - 1281.20] from the manage extension and here you
[1278.88 - 1283.24] can see there is a term called service
[1281.20 - 1285.56] worker and if you click on that then you
[1283.24 - 1287.20] will see a dep tools and this is the dep
[1285.56 - 1289.28] tools that actually running on the
[1287.20 - 1291.60] background and you can see the console
[1289.28 - 1293.96] log that we we have done here and you
[1291.60 - 1296.92] can see the browser runtime ID in this
[1293.96 - 1299.56] object this is the ID of browser runtime
[1296.92 - 1302.32] so that&#39;s about the background script
[1299.56 - 1305.32] and also we have content script and as I
[1302.32 - 1307.80] said this script will run in any web
[1305.32 - 1310.92] page let&#39;s say if I go to visit
[1307.80 - 1313.44] google.com then if I just open the
[1310.92 - 1315.36] console then you can see there is a log
[1313.44 - 1318.76] which is hello content and it is coming
[1315.36 - 1320.84] from content JS line number one and if I
[1318.76 - 1323.76] show you the content JS this is the
[1320.84 - 1326.60] content script and this is the console
[1323.76 - 1329.24] log that actually appearing on any web
[1326.60 - 1331.52] page so if I visit any web page right
[1329.24 - 1334.60] now I am in google.com so let&#39;s say I
[1331.52 - 1337.56] want to visit reddit.com so whenever I
[1334.60 - 1339.88] visit any web page then you should see
[1337.56 - 1341.68] that content script is running right now
[1339.88 - 1343.36] you can see that the content script is
[1341.68 - 1346.04] only matching with google.com that&#39;s
[1343.36 - 1348.52] mean this script will only run on the
[1346.04 - 1351.88] google.com website that&#39;s have the
[1348.52 - 1354.00] domain google.com so if I just make it
[1351.88 - 1358.56] something like this that mean it will
[1354.00 - 1361.48] run on any website so if I just add a
[1358.56 - 1363.92] string like this that mean it will the
[1361.48 - 1366.12] content script will run or execute on
[1363.92 - 1369.72] any particular website so let&#39;s just
[1366.12 - 1372.88] save and try to check so let&#39;s just add
[1369.72 - 1375.84] this and save it and try to now let&#39;s
[1372.88 - 1379.92] visit reddit.com and before that let&#39;s
[1375.84 - 1382.68] open the console and visit that website
[1379.92 - 1385.36] then you can see that it actually logged
[1382.68 - 1388.40] our content script log hello content
[1385.36 - 1390.68] because we use this particular string
[1388.40 - 1393.68] for the match and this mean that this
[1390.68 - 1396.24] script will allow to render on any to
[1393.68 - 1399.24] execute on any particular website so
[1396.24 - 1401.48] that mean we can also restricted any
[1399.24 - 1404.52] kind of website here so that was the
[1401.48 - 1407.76] purpose of entry points folder where we
[1404.52 - 1410.28] can put all the related Chrome extension
[1407.76 - 1413.56] script or code inside of this folder and
[1410.28 - 1416.16] later when we hit pnpm build it actually
[1413.56 - 1418.92] took all the file and folder code and it
[1416.16 - 1421.40] actually build into the raw JavaScript
[1418.92 - 1424.04] code so that we can execute that into
[1421.40 - 1427.12] the Chrome extension uh on any browser
[1424.04 - 1429.92] so now you might ask that is it like a
[1427.12 - 1432.84] convention from wxt framework I would
[1429.92 - 1434.68] say yeah kind of convention but there is
[1432.84 - 1437.68] out of the box feature as well as you
[1434.68 - 1441.28] can create or add multiple directory
[1437.68 - 1443.76] let&#39;s say you want to work with SRC like
[1441.28 - 1447.32] you want to make like SRC type folder
[1443.76 - 1449.80] structure so you can create a SRC folder
[1447.32 - 1452.32] and you have to just reference you have
[1449.80 - 1454.56] to just refer that folder into your wxt
[1452.32 - 1454.56] doc
[1463.12 - 1468.40] config.ru will be look like kind of this
[1465.76 - 1470.92] previously the entry point was above the
[1468.40 - 1473.80] Source folder and after enabling the SRC
[1470.92 - 1476.56] directory as the main point we have the
[1473.80 - 1478.60] entry point folder is inside of that SRC
[1476.56 - 1480.92] folder that&#39;s mean you can customize the
[1478.60 - 1482.96] folder structure based on your need and
[1480.92 - 1485.16] the project requirement and if you want
[1482.96 - 1487.80] to customize more like you can make
[1485.16 - 1490.88] modules you can also declare output
[1487.80 - 1495.32] directory public directory and so on and
[1490.88 - 1495.32] T is uh on your wxt doc
[1497.32 - 1503.12] config.txt learn more about the entry
[1500.04 - 1506.36] point uh folder then you can just visit
[1503.12 - 1509.52] wxt Dave and their entry points
[1506.36 - 1511.88] documentation where it clearly mention
[1509.52 - 1514.20] all the information related to entry
[1511.88 - 1517.00] point so as you can see as I said that
[1514.20 - 1519.88] uh this directory is kind of input when
[1517.00 - 1522.56] bundling your extension and if you go
[1519.88 - 1524.92] below a little bit of that particular
[1522.56 - 1528.08] documentation then you can see it can
[1524.92 - 1530.12] help you to add popup background content
[1528.08 - 1532.48] that&#39;s mean it will not only support
[1530.12 - 1534.48] like the file naming convention you can
[1532.48 - 1537.36] just create also a folder as well as so
[1534.48 - 1539.32] let&#39;s say you need multiple script file
[1537.36 - 1541.48] for background then what you have to do
[1539.32 - 1544.80] is create a background folder then
[1541.48 - 1547.16] create all the related file inside that
[1544.80 - 1550.48] particular folder and create a root file
[1547.16 - 1552.68] called index.ts where is kind of like
[1550.48 - 1554.72] the entry point for the background the
[1552.68 - 1557.52] same will work for Content as well as so
[1554.72 - 1560.32] you can create as much file as you want
[1557.52 - 1562.96] and make sure you create a folder name
[1560.32 - 1565.84] with background or content or popup then
[1562.96 - 1568.72] it will bundle as expected so it also
[1565.84 - 1571.20] gives some U restriction like why you
[1568.72 - 1573.32] what you shouldn&#39;t do so you can&#39;t do
[1571.20 - 1576.16] something like this instead you can do
[1573.32 - 1579.40] this so I think documentation is really
[1576.16 - 1582.40] really easy for this extension and also
[1579.40 - 1585.72] they have a feature called ax AI so you
[1582.40 - 1588.36] can ask anything to this chatbot which
[1585.72 - 1590.52] will help you to give more and broader
[1588.36 - 1592.36] information about the documentation and
[1590.52 - 1595.44] I think this is really really a cool
[1592.36 - 1598.04] feature nowadays so if you stuck on any
[1595.44 - 1600.24] particular topic or uh anything that
[1598.04 - 1602.52] related to wxt then you can just came
[1600.24 - 1605.20] here open the chat bot and ask question
[1602.52 - 1607.32] on here and throughout this project we
[1605.20 - 1609.88] will need like popup background and
[1607.32 - 1612.36] content script but there are so many
[1609.88 - 1615.24] script that we usually used in Chrome
[1612.36 - 1617.80] extension uh sometimes we use side panel
[1615.24 - 1621.08] sometimes we have options sometimes uh
[1617.80 - 1623.56] we have dep tools history so on also we
[1621.08 - 1626.52] can uh work like new tab so there are
[1623.56 - 1628.56] too many script file we can add in our
[1626.52 - 1631.16] Chrome extension which actually serve
[1628.56 - 1633.00] different and multiple purposes so you
[1631.16 - 1635.48] can just simply come into this
[1633.00 - 1638.52] particular Dock and you can see uh what
[1635.48 - 1641.88] is the implementation for let&#39;s say side
[1638.52 - 1645.60] panel uh how you can Implement uh Chrome
[1641.88 - 1647.44] sandbox as well as like popup and so on
[1645.60 - 1650.56] so I think this is going to be the
[1647.44 - 1652.52] better place to study about the whole
[1650.56 - 1655.68] framework so now let&#39;s talk about the
[1652.52 - 1658.36] manifest.json and you might be wondering
[1655.68 - 1660.24] that where is the manifest.json file and
[1658.36 - 1662.76] how we are going to configure it so
[1660.24 - 1665.16] where we can put the configuration for
[1662.76 - 1667.80] manifest.json file so yeah that&#39;s a
[1665.16 - 1670.16] valid question so we have an option to
[1667.80 - 1673.64] configure our manifest.json file which
[1670.16 - 1675.84] is in the wxt doc config dots file so in
[1673.64 - 1678.48] this file we can actually configure the
[1675.84 - 1680.84] manifest.json file which is the main
[1678.48 - 1682.56] entry point of any Chrome extension so
[1680.84 - 1685.84] if you work with Chrome extension in
[1682.56 - 1687.80] vanilla JS you notice that we have
[1685.84 - 1690.12] manifest.json file where we put the
[1687.80 - 1693.16] Chrome extension name we put U
[1690.12 - 1696.88] permissions we put icons and so on on
[1693.16 - 1698.92] there so in wxt framework we can also
[1696.88 - 1702.44] Define them so you have to just go to
[1698.92 - 1705.32] the Manifest documentation in wxt and
[1702.44 - 1708.32] you will see there is a property called
[1705.32 - 1710.84] manifest inside of the defined confict
[1708.32 - 1714.08] object so that mean we can just simply
[1710.84 - 1716.88] grab this and in our code you can see we
[1714.08 - 1719.28] have right now modules property so if I
[1716.88 - 1721.84] want to add manifest configuration I can
[1719.28 - 1724.32] just simply add this property and this
[1721.84 - 1726.36] will give you a function which will
[1724.32 - 1728.24] return the all the property and inside
[1726.36 - 1730.36] that function you will get a lot of
[1728.24 - 1732.60] argument that&#39;s going to help you to
[1730.36 - 1734.92] perform some different task let&#39;s say we
[1732.60 - 1737.68] want to add Chrome extension manifest
[1734.92 - 1740.80] version three so for the by default
[1737.68 - 1742.64] right now wxt uses manifest version 3
[1740.80 - 1745.12] but you can also declare that version
[1742.64 - 1747.40] two if you need you can just copy this
[1745.12 - 1749.64] code like manifest version two and then
[1747.40 - 1751.76] you can just add that here you can see
[1749.64 - 1753.76] that this is the Manifest property and
[1751.76 - 1755.40] you should return an object and inside
[1753.76 - 1758.16] that object you can pass all the
[1755.40 - 1761.16] manifest.json property let&#39;s say we want
[1758.16 - 1763.12] to add a name so what you have to do is
[1761.16 - 1765.28] just add the name property and also I
[1763.12 - 1767.72] want to add the version as well as so
[1765.28 - 1769.68] let&#39;s add a property called name and
[1767.72 - 1771.32] let&#39;s say I am adding it like wxt
[1769.68 - 1773.76] example I want to add description as
[1771.32 - 1776.88] well as as well as the version and as I
[1773.76 - 1779.12] said we often need permissions for
[1776.88 - 1781.16] Chrome extension and you can also
[1779.12 - 1783.24] declare it by this something like this
[1781.16 - 1786.08] so in the permissions property you can
[1783.24 - 1788.24] add array and in the array you can add
[1786.08 - 1790.88] all the permission that you need so when
[1788.24 - 1793.72] you do so you should save and also you
[1790.88 - 1796.16] should restart the server that you have
[1793.72 - 1797.76] run and when you do so then we should
[1796.16 - 1800.32] see the Chrome extension name should
[1797.76 - 1802.56] change to wxt example as you can see
[1800.32 - 1804.28] here and also it have the version and
[1802.56 - 1806.12] all the description Stu so if I just go
[1804.28 - 1808.16] to manage extension then you can see
[1806.12 - 1810.40] here that this is the version this is
[1808.16 - 1812.00] the name and this is the description for
[1810.40 - 1814.12] that particular extension and if you
[1812.00 - 1816.80] want to change the icon as well as you
[1814.12 - 1819.48] can do so that so if you go the doc you
[1816.80 - 1822.44] can see there is a property call icon
[1819.48 - 1825.20] and you can do that by this so in the
[1822.44 - 1827.32] Manifest object you can just declare a
[1825.20 - 1829.72] icon property and inside that you have
[1827.32 - 1832.52] to give all the size as well as those
[1829.72 - 1834.80] file path and by default all the icon is
[1832.52 - 1836.96] actually taking from the public folder
[1834.80 - 1839.96] inside the public folder we have icon
[1836.96 - 1842.28] and if you just change this icon rename
[1839.96 - 1843.88] this then it should work as expected so
[1842.28 - 1846.88] you don&#39;t have to configure everything
[1843.88 - 1850.00] here so you can just simply create those
[1846.88 - 1853.32] icon separately with all these size 16
[1850.00 - 1855.56] 32 and then replace all those icon here
[1853.32 - 1857.76] and all the icon will work as expected
[1855.56 - 1858.60] you don&#39;t even have to add icon path
[1857.76 - 1861.00] here
[1858.60 - 1864.52] uh manually so that&#39;s how beautiful it
[1861.00 - 1867.20] is to uh configure your manifest.json in
[1864.52 - 1869.28] wxt framework so now let&#39;s install tawi
[1867.20 - 1872.00] CSS in our project and I&#39;m going to
[1869.28 - 1874.76] install tawi CSS version 4 so you have
[1872.00 - 1878.08] to go to the doc and the installation
[1874.76 - 1880.68] section you will find there are four or
[1878.08 - 1883.76] five type of installation proess so for
[1880.68 - 1887.44] using Tailwind CSS in wxt framework we
[1883.76 - 1889.88] have to follow the post CSS method so
[1887.44 - 1892.88] let&#39;s just copy the command so because
[1889.88 - 1896.40] we started the dependency management
[1892.88 - 1899.72] with pnpm so we have to make sure it&#39;s
[1896.40 - 1903.00] pnpm that&#39;s fine our installation has
[1899.72 - 1905.52] finished now we have to follow this step
[1903.00 - 1910.00] and then uh we have to create a file
[1905.52 - 1912.60] called post css. config MJS so let&#39;s
[1910.00 - 1915.08] create this file and in that file we
[1912.60 - 1918.08] have to paste this code it&#39;s like the
[1915.08 - 1920.88] post CSS plug-in for tawi CSS and and
[1918.08 - 1924.80] then we have to import thewi CSS in our
[1920.88 - 1926.96] CSS file and as I said earlier that in
[1924.80 - 1929.80] our entry point we have all the source
[1926.96 - 1932.28] codes that&#39;s going to be bundled in our
[1929.80 - 1934.00] Chrome extension and by default when we
[1932.28 - 1936.08] created the project we have a popup
[1934.00 - 1938.68] directory where we have a react project
[1936.08 - 1940.80] and also if we need some sort of react
[1938.68 - 1942.52] component in another part let&#39;s say in
[1940.80 - 1944.24] the content part then we can also create
[1942.52 - 1945.96] react component and we can render that
[1944.24 - 1949.36] in the content is script but for now
[1945.96 - 1952.80] let&#39;s just focus on the popup and use
[1949.36 - 1955.72] the tawi CSS into our popup script to
[1952.80 - 1958.92] check that Twi CSS is working or not so
[1955.72 - 1960.84] we have to go to the styler CSS and you
[1958.92 - 1963.48] can see there are two CSS files so I&#39;m
[1960.84 - 1966.72] going to remove one and then I also
[1963.48 - 1969.12] don&#39;t need the app. TSX and let&#39;s just
[1966.72 - 1972.16] remove that as well as from the main.
[1969.12 - 1974.32] TSX and let&#39;s just add simple text hello
[1972.16 - 1977.24] world and as you can see we are
[1974.32 - 1979.44] injecting Styler CSS so now I can just
[1977.24 - 1982.72] simply inut Port Twi CSS here you can
[1979.44 - 1984.56] see that so that&#39;s another step and now
[1982.72 - 1988.40] we have the last step which is we have
[1984.56 - 1991.40] to add the CSS directory into our HTML
[1988.40 - 1994.52] to point The Styling so if I go to the
[1991.40 - 1998.08] index.html it&#39;s also the wrapper of the
[1994.52 - 2000.24] react Dom so we can just use that here
[1998.08 - 2003.40] so I have to just add that Under The
[2000.24 - 2006.84] Meta tag or inside the head tag and you
[2003.40 - 2009.20] have to point like this/ Styler CSS so I
[2006.84 - 2012.48] think uh it should work and that&#39;s it so
[2009.20 - 2015.08] now let&#39;s try to add something like some
[2012.48 - 2018.04] sort of style here let&#39;s say this one to
[2015.08 - 2019.84] check that our Twi CSS is working or not
[2018.04 - 2022.52] because it&#39;s react so we have to use
[2019.84 - 2025.84] class name like this and that&#39;s it so
[2022.52 - 2028.36] let&#39;s just run the project the npm T and
[2025.84 - 2030.40] we should see the style uh in the popup
[2028.36 - 2033.16] of our project so if I click on the
[2030.40 - 2036.44] extension and open this one then you can
[2033.16 - 2039.00] see that the text showing hello world as
[2036.44 - 2041.96] well as it has under score and the text
[2039.00 - 2044.96] size is 3XL so let&#39;s verify with some
[2041.96 - 2046.56] other property like color so BG this one
[2044.96 - 2049.88] let&#39;s see and as you can see the color
[2046.56 - 2051.88] is also working that mean Twi CSS is
[2049.88 - 2055.12] successfully installed in our Chrome
[2051.88 - 2057.00] extension project now if we need react
[2055.12 - 2058.96] component in our content script we can
[2057.00 - 2062.16] also create those component and we can
[2058.96 - 2064.48] also use Tailwind CSS for actually The
[2062.16 - 2066.44] Styling stuff so that&#39;s mean uh
[2064.48 - 2068.40] throughout the whole extension we can
[2066.44 - 2071.08] use it anywhere and and of course we
[2068.40 - 2073.24] have to point the styler CSS file
[2071.08 - 2075.56] everywhere let&#39;s say in the content. TS
[2073.24 - 2078.32] file or in the content script when we
[2075.56 - 2080.92] are going to render any component into
[2078.32 - 2083.76] the UI let&#39;s say we have in the
[2080.92 - 2086.60] google.com and our Chrome extension
[2083.76 - 2089.16] actually open some sort of UI in any web
[2086.60 - 2092.16] page and we want to style that UI with
[2089.16 - 2094.64] taway CSS and that mean whenever the UI
[2092.16 - 2097.28] render on the web page we have to render
[2094.64 - 2099.92] the UI as well as we have to inject the
[2097.28 - 2102.52] St into that UI so that the UI actually
[2099.92 - 2104.16] got the style from ta and CSS so I&#39;m
[2102.52 - 2106.04] going to show you the whole thing a
[2104.16 - 2107.80] little bit later in this video when we
[2106.04 - 2110.00] are going to develop the component and
[2107.80 - 2112.08] all the stuff so for now focus on the
[2110.00 - 2115.28] other things so for now let&#39;s just
[2112.08 - 2117.80] implement the popup page for our Chrome
[2115.28 - 2120.12] extension which is going to help us to
[2117.80 - 2122.80] configure our Chrome extension settings
[2120.12 - 2125.64] and mainly it&#39;s going to help us to take
[2122.80 - 2128.00] the API endpoint and the API key from
[2125.64 - 2130.48] the popup so that we can actually store
[2128.00 - 2133.04] those llm information into the chrom
[2130.48 - 2135.96] storage and when we will perform some
[2133.04 - 2138.88] sort of um prompting then it will take
[2135.96 - 2141.88] those URL and key to request to the
[2138.88 - 2145.28] server and give us the desired response
[2141.88 - 2147.44] so that&#39;s why we need an UI when we will
[2145.28 - 2150.84] open the Chrome extension we should see
[2147.44 - 2153.36] a form where we can input the end point
[2150.84 - 2156.00] as well as the key and we can we should
[2153.36 - 2158.40] save that particular information into
[2156.00 - 2161.20] the Chrome storage so that when we will
[2158.40 - 2163.16] click on when we right click on any web
[2161.20 - 2165.64] page and when we click the menu like
[2163.16 - 2168.72] post inside or comment inside then uh we
[2165.64 - 2172.04] should see all the UI and all the stuff
[2168.72 - 2174.32] working fine so inside the popup I will
[2172.04 - 2176.28] start with creating a component folder
[2174.32 - 2179.04] that&#39;s mean uh this component folder
[2176.28 - 2181.76] will be contain all the components that
[2179.04 - 2183.68] related to popup and if we have uh some
[2181.76 - 2185.20] sort of component that we can reuse
[2183.68 - 2186.76] throughout the whole Chrome extension we
[2185.20 - 2188.68] can just simply put that component
[2186.76 - 2191.20] folder outside of the entry point later
[2188.68 - 2193.88] we can just use those uh component
[2191.20 - 2195.96] inside all of our script so in the
[2193.88 - 2198.36] components folder I will start with the
[2195.96 - 2200.28] main component uh that&#39;s going to be uh
[2198.36 - 2202.92] render in the popup and which will be
[2200.28 - 2205.08] sort of like a form so let&#39;s just uh
[2202.92 - 2208.12] create the file called credential from
[2205.08 - 2211.36] the TSX and in this form I&#39;m going to
[2208.12 - 2213.92] add to input and then when we will
[2211.36 - 2215.44] submit that form then our data will be
[2213.92 - 2217.56] stored in the Chrome storage so that
[2215.44 - 2220.24] will be the task for now so let&#39;s create
[2217.56 - 2223.24] create a component and return the same
[2220.24 - 2225.84] text that we return from here and we are
[2223.24 - 2228.08] going to import that component inside of
[2225.84 - 2230.16] our main. TSX file so that&#39;s our
[2228.08 - 2232.04] component called credential form and
[2230.16 - 2234.56] we&#39;re going to import it here your
[2232.04 - 2238.36] Chrome extension becomes too large then
[2234.56 - 2240.84] you can follow the SRC directory style
[2238.36 - 2243.88] pattern where you can just uh organize
[2240.84 - 2246.08] all of your folder pages and other stuff
[2243.88 - 2248.64] to actually make the whole things work
[2246.08 - 2252.24] so that&#39;s our component now it should
[2248.64 - 2254.48] work as like as the earlier time so yeah
[2252.24 - 2257.56] it&#39;s working fine so now let&#39;s try to
[2254.48 - 2259.84] design the form so that&#39;s a simple form
[2257.56 - 2262.24] design and I don&#39;t want to waste your
[2259.84 - 2264.80] time to actually show you or code you
[2262.24 - 2267.68] the whole design what I can do is uh
[2264.80 - 2269.32] just explain you what actually how
[2267.68 - 2271.56] actually the components design is
[2269.32 - 2273.48] working what are the Styles I have given
[2271.56 - 2275.84] why I am given so I think that will also
[2273.48 - 2278.32] save your time and as well as we have
[2275.84 - 2280.20] functionality logic so we also have to
[2278.32 - 2282.20] understand them so I think better uh we
[2280.20 - 2285.08] should understand the logical part and
[2282.20 - 2288.12] from the UI it&#39;s quite easy and you can
[2285.08 - 2290.28] also generate UI from nowadays U chity
[2288.12 - 2293.12] or Gemini so I don&#39;t think like showing
[2290.28 - 2295.48] you all the UI related stuff will not
[2293.12 - 2297.24] productive we can instead focus on the
[2295.48 - 2298.92] logical part let&#39;s say uh we have to
[2297.24 - 2301.16] handle the form then we have to save the
[2298.92 - 2303.60] information into the Chrome storage and
[2301.16 - 2305.72] then uh all the other stuff so I think I
[2303.60 - 2307.88] will show you all of them uh I think
[2305.72 - 2310.88] that&#39;s going to better way so with this
[2307.88 - 2314.56] UI I also need icon and I want to use
[2310.88 - 2316.88] the icon Library called Lucid react and
[2314.56 - 2320.24] I have to install it like npm install
[2316.88 - 2322.88] Lucid react and it has a lot of Icon and
[2320.24 - 2325.60] all are free so I think it&#39;s a good
[2322.88 - 2327.96] choice to start with icon so uh I
[2325.60 - 2329.88] already have a save icon here and you
[2327.96 - 2332.16] can see the suggestions I&#39;m getting and
[2329.88 - 2333.88] that&#39;s it so that&#39;s uh sort of the
[2332.16 - 2336.92] credential form and I&#39;m going to explain
[2333.88 - 2339.64] it now let&#39;s just visually see that&#39;s
[2336.92 - 2342.48] what&#39;s going on on in our UI so if I
[2339.64 - 2345.84] just open then you can see here is our
[2342.48 - 2348.60] UI we have an header we have an we have
[2345.84 - 2351.32] an H1 title and a description so if I
[2348.60 - 2355.00] just show you the code that uh this is
[2351.32 - 2357.48] H2 and we have the pag with some common
[2355.00 - 2361.24] style and in the top of the wrapper you
[2357.48 - 2364.12] can see I used dark mode and also I used
[2361.24 - 2367.40] WID of 600 pixel so let&#39;s say if I just
[2364.12 - 2369.44] remove this width then you can see our
[2367.40 - 2372.64] Chrome extension with shrink and it
[2369.44 - 2375.16] becomes too small so every time when you
[2372.64 - 2377.12] work with popup you must have to give
[2375.16 - 2379.96] some sort of WID manually into your
[2377.12 - 2381.88] popup in the wrapper element so for our
[2379.96 - 2383.52] case because in our main TSX I&#39;m
[2381.88 - 2385.72] rendering the main component like
[2383.52 - 2389.08] credential form so we must have to put
[2385.72 - 2391.72] any WID here and if we don&#39;t put any WID
[2389.08 - 2394.52] then the UI will be shrink and it the
[2391.72 - 2396.16] weight will be taken from each children
[2394.52 - 2398.44] element so let&#39;s say in the children
[2396.16 - 2401.44] element we have weight of 400 pixel then
[2398.44 - 2404.24] the whole popup will be to 400 pixel and
[2401.44 - 2406.76] also don&#39;t use like huge width batter is
[2404.24 - 2409.52] 800 pixel to 400 pixel is kind of like a
[2406.76 - 2412.56] standard size for the popup so that&#39;s
[2409.52 - 2415.88] why I have put the WID here then I took
[2412.56 - 2418.60] a minimum of screen height and then in
[2415.88 - 2421.40] the wrapper I also took the full WID so
[2418.60 - 2424.00] because as you can see in the UI for
[2421.40 - 2425.80] showing all those form we need full WID
[2424.00 - 2428.32] and all the stuff is like the basic
[2425.80 - 2430.92] design kind of like the dark mode and
[2428.32 - 2432.72] here this is kind of like the form where
[2430.92 - 2435.60] I added the background color added some
[2432.72 - 2438.92] Shadow and some padding and then that&#39;s
[2435.60 - 2441.16] the form I didn&#39;t use like sh CN or any
[2438.92 - 2444.08] sort of Library you can use that as well
[2441.16 - 2445.84] as if you want to watch uh video about
[2444.08 - 2447.88] how you can use different different
[2445.84 - 2449.96] library on your Chrome extension UI
[2447.88 - 2452.76] library then uh just comment down below
[2449.96 - 2455.84] so that I can also list down those video
[2452.76 - 2457.84] on my too list so that&#39;s a simple form
[2455.84 - 2460.08] you can see that we have the label and
[2457.84 - 2463.12] we have the input field and we can also
[2460.08 - 2465.32] use validation uh from managing like
[2463.12 - 2467.88] react hook form or some sort of other
[2465.32 - 2470.52] from management library but for now just
[2467.88 - 2472.56] uh I&#39;m using like simple HTML from
[2470.52 - 2475.60] validation that&#39;s why I just use reord
[2472.56 - 2477.60] and we have um API key input field
[2475.60 - 2480.36] that&#39;s the kind of same input but I want
[2477.60 - 2483.20] to add like in the UI you can see that
[2480.36 - 2485.76] we have a uh input field where we can
[2483.20 - 2487.96] put any key and we shouldn&#39;t see those
[2485.76 - 2490.60] key I think there should be an icon to
[2487.96 - 2492.56] actually um work with that particular
[2490.60 - 2495.44] input field let&#39;s say we have past the
[2492.56 - 2498.08] key now we can toggle that icon if will
[2495.44 - 2500.32] be like I icon and we can uh visually
[2498.08 - 2502.48] show the key and initially the key will
[2500.32 - 2504.28] be hidden some sort of password fill so
[2502.48 - 2506.84] let&#39;s just Implement that functionality
[2504.28 - 2509.68] so first we have to declare an state so
[2506.84 - 2511.92] I will give a name like show API key and
[2509.68 - 2514.24] set show API key that&#39;s mean it&#39;s like a
[2511.92 - 2516.56] Boolean state in the react so that we
[2514.24 - 2519.12] can toggle and change the value so that
[2516.56 - 2522.80] we can get the desire result and um
[2519.12 - 2525.32] after our input field of the API key we
[2522.80 - 2528.28] are going to add that particular icons
[2525.32 - 2531.04] to actually toggle and that&#39;s our icon
[2528.28 - 2534.24] and it&#39;s a wrapper and I added absolute
[2531.04 - 2536.52] style so that I can position this icon
[2534.24 - 2538.40] inside of that particular input field
[2536.52 - 2540.32] and you can as you can see I just send
[2538.40 - 2542.32] it back to the right side and I just
[2540.32 - 2544.36] make it flex and give some padding from
[2542.32 - 2547.76] the right side so that it actually plays
[2544.36 - 2550.12] in our Desir UI and it&#39;s also wrapped
[2547.76 - 2552.32] with button so that we can also handle
[2550.12 - 2554.92] the toggle and as you can see we just
[2552.32 - 2558.08] added uh the onclick event and the set
[2554.92 - 2560.32] show API key will be change our state of
[2558.08 - 2562.60] this so that uh initially it will be
[2560.32 - 2565.00] false that mean we are not going to see
[2562.60 - 2567.20] the key but when we click on that then
[2565.00 - 2568.68] we will show that key but how we are
[2567.20 - 2571.72] going to manage that we are going to
[2568.68 - 2574.40] manage it by here in the input field
[2571.72 - 2577.44] there is a proper toal type and we can
[2574.40 - 2579.60] also set that text and password so when
[2577.44 - 2581.16] password then it will not show the key
[2579.60 - 2583.88] but when it takes then it will show the
[2581.16 - 2586.04] key and based on our state Rea react
[2583.88 - 2589.36] state which is show API key we are going
[2586.04 - 2592.60] to show that particular value so that&#39;s
[2589.36 - 2595.72] why we can add type here and this is our
[2592.60 - 2597.92] set method that will change the value
[2595.72 - 2600.40] and these are the icon that will
[2597.92 - 2602.80] visually show on the UI so let&#39;s just
[2600.40 - 2606.36] import the icon so I&#39;m going to use the
[2602.80 - 2609.52] icon from Lucid react and also there is
[2606.36 - 2611.88] I off and there is a i that&#39;s mean uh
[2609.52 - 2614.36] based on our state we&#39;re going to show
[2611.88 - 2616.40] the that icon and this is the text uh
[2614.36 - 2618.44] when we hover over on that icon we can
[2616.40 - 2621.08] also see that icon so that&#39;s why uh this
[2618.44 - 2623.28] is kind of like the same thing like we
[2621.08 - 2626.08] compare with the state let&#39;s just save
[2623.28 - 2629.12] and try to check the logic so and as you
[2626.08 - 2631.28] can see that we I don&#39;t have to refresh
[2629.12 - 2633.48] or like start the server again it&#39;s
[2631.28 - 2635.72] working instant because we have the hard
[2633.48 - 2638.96] reload feature and here you can see the
[2635.72 - 2641.40] icon got like two left which I wasn&#39;t
[2638.96 - 2644.60] expected so let&#39;s just try right now you
[2641.40 - 2646.24] can see that is uh showing kind of dot
[2644.60 - 2648.72] so if I click on this icon then it
[2646.24 - 2651.52] become like text but the icon doesn&#39;t
[2648.72 - 2653.76] position uh well I want to position it
[2651.52 - 2657.56] uh sort of here so let&#39;s just fix this
[2653.76 - 2660.16] so I think I have placed um the I icon
[2657.56 - 2662.12] bottom of the wrapper like the input
[2660.16 - 2663.80] field and as you can see in the wrapper
[2662.12 - 2665.72] of that input field we have a property
[2663.80 - 2668.00] called relative so now if I just place
[2665.72 - 2670.28] this here then I can put position that
[2668.00 - 2672.40] icon inside of that input field because
[2670.28 - 2674.40] we have the wrapper with relative style
[2672.40 - 2676.56] so now now I can apply the absolute
[2674.40 - 2679.40] style so that&#39;s it for the fix so let&#39;s
[2676.56 - 2681.72] see the UI is working fine or not and as
[2679.40 - 2684.32] you can see it&#39;s placed uh properly in
[2681.72 - 2687.48] position and when I click the icon
[2684.32 - 2688.88] become changed to the I off and the I
[2687.48 - 2691.12] and that&#39;s kind of like the
[2688.88 - 2692.80] functionality and if I click on the save
[2691.12 - 2696.04] then you can see the validation is
[2692.80 - 2698.44] showing because uh I added the required
[2696.04 - 2701.48] type or required attribute in both of
[2698.44 - 2703.32] the field because I have added reord
[2701.48 - 2705.00] attribute both of the input field so
[2703.32 - 2707.28] that&#39;s when we are going to click that
[2705.00 - 2709.08] save button then it&#39;s actually asking to
[2707.28 - 2710.84] fill the information and if I show you
[2709.08 - 2713.32] the save button it&#39;s like just a simple
[2710.84 - 2715.76] button and I took the whole we and add
[2713.32 - 2717.92] some style and some colors and in the
[2715.76 - 2719.84] bottom uh I have some description as
[2717.92 - 2723.28] well as uh the copy that I just St I
[2719.84 - 2726.04] just uh took the full year from new date
[2723.28 - 2728.64] and then check a condition to that is uh
[2726.04 - 2731.36] greater than 20 25 or not if so then
[2728.64 - 2735.28] we&#39;re going to show only 2025 if not
[2731.36 - 2737.08] then we&#39;re going to show uh 2025 to the
[2735.28 - 2740.04] upcoming year so that&#39;s like a simple
[2737.08 - 2742.12] logic so now let&#39;s uh handle the save
[2740.04 - 2744.60] functionality because uh I think from
[2742.12 - 2748.00] the UI end we are kind of done for the
[2744.60 - 2750.12] UI now we just have to um check and
[2748.00 - 2753.16] handle the save functionality that so
[2750.12 - 2755.96] that uh we can input any URL as well as
[2753.16 - 2757.48] any key and we can save that and we can
[2755.96 - 2759.48] just store that information into the
[2757.48 - 2762.76] Chrome storage so that later whenever we
[2759.48 - 2765.16] are going to use our uh Chrome extension
[2762.76 - 2767.08] in Reddit and if we just try to
[2765.16 - 2768.68] communicate with the llm then we can
[2767.08 - 2771.12] just grab those information from the
[2768.68 - 2773.88] Chrome storage and send back API request
[2771.12 - 2775.92] to the llm server so for managing the
[2773.88 - 2778.20] whole thing I would love to create a
[2775.92 - 2781.28] hooks because as I said earlier that we
[2778.20 - 2783.60] are going to use this information in our
[2781.28 - 2786.08] various script let&#39;s say we are going to
[2783.60 - 2788.08] use it in the content script so and in
[2786.08 - 2790.76] the content script we also going to
[2788.08 - 2793.32] render the react component and if we
[2790.76 - 2795.08] create a common hook for storing those
[2793.32 - 2797.12] information into the Chrome storage as
[2795.08 - 2799.20] well as getting those information from
[2797.12 - 2802.20] chrome storage then I think we can reuse
[2799.20 - 2804.32] the hook in several portion we can reuse
[2802.20 - 2806.48] the hook here where we can store the
[2804.32 - 2808.60] information as well as we can use the
[2806.48 - 2812.28] same hook in our content script where we
[2808.60 - 2814.72] are going to request API for the llm so
[2812.28 - 2817.80] that&#39;s why I&#39;m going to create a hooks
[2814.72 - 2819.92] folder inside of the ENT Point folder
[2817.80 - 2821.60] and here it will contain all the hooks
[2819.92 - 2823.40] that we are going to reuse throughout
[2821.60 - 2826.24] the whole Chrome extension and I would
[2823.40 - 2830.24] love to give a name of our first hook
[2826.24 - 2833.24] which is going to be from data. TS uh
[2830.24 - 2835.92] because we are not rendering any jsx so
[2833.24 - 2838.36] we can just simply use TS and that&#39;s our
[2835.92 - 2841.64] hook you can see I have declared a type
[2838.36 - 2843.96] which is I form type and for our UI you
[2841.64 - 2846.56] can see that we have endpoint and API
[2843.96 - 2848.60] key so there is a field called API key
[2846.56 - 2850.84] and and the field for endpoint and both
[2848.60 - 2853.92] will be string and I also need this
[2850.84 - 2856.20] particular type to use everywhere so
[2853.92 - 2858.68] that&#39;s why I just exported it here and
[2856.20 - 2861.04] that&#39;s our hoop called use from data so
[2858.68 - 2863.08] if you know how to create custom hoop
[2861.04 - 2864.28] then it&#39;s really become easy to
[2863.08 - 2867.36] understand what&#39;s happening here
[2864.28 - 2870.24] otherwise from my explanation that you
[2867.36 - 2872.00] have to create a function something like
[2870.24 - 2874.32] that but you have to use the convention
[2872.00 - 2877.08] like use then you have to use the camel
[2874.32 - 2879.52] case uh sort of formation for actually
[2877.08 - 2883.08] naming the hook and then you can return
[2879.52 - 2885.72] any sort of object array and inside that
[2883.08 - 2888.04] particular function you can call any
[2885.72 - 2889.92] build-in hook and also if you want some
[2888.04 - 2892.08] want to call some other custom hook you
[2889.92 - 2893.76] can call call that as well as so that&#39;s
[2892.08 - 2896.48] the beauty where you can just create a
[2893.76 - 2898.32] function and you can call react hook as
[2896.48 - 2901.40] well as you can use this particular hook
[2898.32 - 2904.20] into any react component and here I have
[2901.40 - 2907.20] taken a user state so let&#39;s just import
[2904.20 - 2909.36] the state from react so we have to
[2907.20 - 2912.04] import the react and then react. US
[2909.36 - 2913.76] state with the form I from data type and
[2912.04 - 2916.00] that&#39;s like the form data and then we
[2913.76 - 2918.96] have a method call set form data where
[2916.00 - 2921.64] we will use to set our form information
[2918.96 - 2924.52] that&#39;s our state and in the use effect I
[2921.64 - 2928.20] did some logic which is Chrome you can
[2924.52 - 2930.52] see that chrome. storage. loal doget and
[2928.20 - 2932.64] uh I&#39;m I&#39;m actually taking the
[2930.52 - 2936.08] information from the Chrome storage to
[2932.64 - 2938.44] set our state now you will ask why so
[2936.08 - 2940.44] when we will click on the save button
[2938.44 - 2942.56] from the popup what we are going to do
[2940.44 - 2944.48] we are going to take our form
[2942.56 - 2947.32] information and we are going to set it
[2944.48 - 2950.00] in our Chrome storage and whenever we
[2947.32 - 2952.48] refresh or we come back in any page and
[2950.00 - 2954.84] try to open that particular form then we
[2952.48 - 2957.24] should see our older data that we
[2954.84 - 2959.20] already have been saved so that case we
[2957.24 - 2962.16] must need to fetch that data from the
[2959.20 - 2964.48] storage when initially our UI rendered
[2962.16 - 2967.40] so if we have those data then we can
[2964.48 - 2969.40] just set that data into our state and if
[2967.40 - 2971.80] we don&#39;t have then no issue there will
[2969.40 - 2973.80] be the default value that will be shown
[2971.80 - 2976.52] into that particular input field so
[2973.80 - 2978.68] that&#39;s why uh I have to fetch those
[2976.52 - 2981.08] information from the Chrome storage and
[2978.68 - 2983.64] then we have to set that value in the
[2981.08 - 2985.96] local state and also I&#39;m going to save
[2983.64 - 2988.00] uh the information into the storage uh
[2985.96 - 2990.28] we&#39;re going to do it here but because we
[2988.00 - 2992.68] are making the hook reusable so I have
[2990.28 - 2994.76] to make this hook uh some sort of way
[2992.68 - 2997.20] that we can just call this hook and it
[2994.76 - 2999.88] will uh before it render it will call
[2997.20 - 3002.20] the use effect hook and it will try to
[2999.88 - 3004.72] fetch the data from the Chrome storage
[3002.20 - 3008.44] then and it will also store that data in
[3004.72 - 3010.32] our local state and as the hook return
[3008.44 - 3011.72] we are returning the from data as well
[3010.32 - 3013.84] as the set from data that&#39;s mean
[3011.72 - 3016.04] whenever we will call the use from data
[3013.84 - 3018.36] we can simply get the from data and also
[3016.04 - 3020.36] the method that we can change that data
[3018.36 - 3022.36] so that uh whenever we are going to use
[3020.36 - 3024.20] it either it&#39;s in the popup either it&#39;s
[3022.36 - 3026.68] in the content skip we can just simply
[3024.20 - 3028.64] call it and we will easily get our
[3026.68 - 3030.48] Chrome storage data but now you can see
[3028.64 - 3032.64] that I&#39;m getting an error and it&#39;s
[3030.48 - 3035.24] showing like cannot find Chrome and it&#39;s
[3032.64 - 3036.92] a type error why because uh we using
[3035.24 - 3039.80] typescript in Chrome extension
[3036.92 - 3042.36] development and we have to refer the
[3039.80 - 3045.68] Chrome type so that we can cannot get
[3042.36 - 3048.64] the runtime error so for getting rid of
[3045.68 - 3051.84] from our run type error in the Chrome
[3048.64 - 3053.88] which is helping us to set and get data
[3051.84 - 3056.20] into Chrome storage which is kind of
[3053.88 - 3058.04] similar like local storage but when we
[3056.20 - 3059.92] write code about local storage it
[3058.04 - 3062.80] doesn&#39;t give error but for the Chrome
[3059.92 - 3065.84] because it&#39;s a API from chrome or the
[3062.80 - 3069.04] browser we must need to declare the type
[3065.84 - 3071.52] but uh also we must need to install the
[3069.04 - 3073.32] dependency for the type sometimes so we
[3071.52 - 3076.96] have to install that so we&#39;re going to
[3073.32 - 3078.88] use pnpm install dep dependency type SL
[3076.96 - 3081.08] Chrome and that&#39;s the package that&#39;s
[3078.88 - 3083.40] actually resolve all the type related to
[3081.08 - 3086.32] the Chrome API and you can see after
[3083.40 - 3088.68] install uh the type the error gone
[3086.32 - 3091.72] sometimes the error will be not uh go
[3088.68 - 3095.00] away so you have to add another line
[3091.72 - 3097.36] here in the wxt doc
[3095.00 - 3099.08] config.inc as the first property you
[3097.36 - 3101.52] have to add the property called
[3099.08 - 3102.84] extension API and because we are
[3101.52 - 3104.56] building this Chrome extension for
[3102.84 - 3106.32] Chrome because we are building this
[3104.56 - 3109.56] extension for Chrome so we and also
[3106.32 - 3111.88] we&#39;re going to use the Chrome API for
[3109.56 - 3114.12] the storage and other stuff so we must
[3111.88 - 3117.00] have to declare the extension API and
[3114.12 - 3119.40] for our case is Chrome and if you got
[3117.00 - 3122.16] the error and if you install the type
[3119.40 - 3124.16] and after installing the type dependency
[3122.16 - 3126.80] if the error not resolved then you must
[3124.16 - 3128.48] have to uh add the extension API and
[3126.80 - 3131.56] when you do the both thing then the
[3128.48 - 3134.44] error should gone so our work is kind of
[3131.56 - 3136.80] complete so this is hook will call and
[3134.44 - 3138.96] it will get the form data information
[3136.80 - 3142.04] from the storage and it will set that
[3138.96 - 3144.76] into our from State and now because we
[3142.04 - 3147.08] have set from data we can just use it in
[3144.76 - 3150.48] our credential form to actually actually
[3147.08 - 3152.80] store that or like um use that hook
[3150.48 - 3154.72] store as a kind of local state I would
[3152.80 - 3156.76] not say it&#39;s a store it&#39;s like a state
[3154.72 - 3159.32] because we are not storing in uh like
[3156.76 - 3161.96] globally it&#39;s like an state that we can
[3159.32 - 3165.04] just reuse here so if if I just call
[3161.96 - 3167.68] this use from data in our credential
[3165.04 - 3169.64] form then we can simply get the set form
[3167.68 - 3172.16] data as well as the form data now when
[3169.64 - 3174.28] we are going to save uh the from
[3172.16 - 3176.72] information we can directly change the
[3174.28 - 3178.68] value in with set from data method and
[3176.72 - 3181.76] it&#39;s going to change the store data but
[3178.68 - 3184.12] it will not store that into the storage
[3181.76 - 3186.32] but when we will render this component
[3184.12 - 3188.80] again like let&#39;s say I refresh the page
[3186.32 - 3190.92] and came again and open the popup then
[3188.80 - 3193.16] what it will do it will call the hook it
[3190.92 - 3195.12] will call use effect it will try to
[3193.16 - 3197.28] fetch the data from the storage if we
[3195.12 - 3200.48] have the data then it will set that data
[3197.28 - 3202.88] in the state and then because we using
[3200.48 - 3205.60] this state then now we can just simply
[3202.88 - 3208.04] use the from data. endpoint for our
[3205.60 - 3210.80] endpoint field as you can see uh in the
[3208.04 - 3212.84] input value I can add from data.
[3210.80 - 3216.08] endpoint and the same thing I can also
[3212.84 - 3219.44] do in the AP as well as the value will
[3216.08 - 3222.08] be for from data. AP and you can see the
[3219.44 - 3224.80] suggestion from the vs code so the hook
[3222.08 - 3227.20] will actually help us to not write
[3224.80 - 3228.96] redundant logic because if I wasn&#39;t
[3227.20 - 3231.20] create the hook then I have to write the
[3228.96 - 3233.08] same logic here I have to fet the data
[3231.20 - 3235.72] from the storage then I have to set that
[3233.08 - 3237.16] into the storage uh in into the state
[3235.72 - 3239.04] then I have to show that them here so I
[3237.16 - 3241.20] think better we should create hook
[3239.04 - 3243.52] separately to manage some common task
[3241.20 - 3245.84] and now I have set the value so we also
[3243.52 - 3248.72] have to set those value when we actually
[3245.84 - 3251.72] unchange our input field that&#39;s mean we
[3248.72 - 3253.76] need a unchange Handler that&#39;s going to
[3251.72 - 3256.28] call and that&#39;s going to and as you can
[3253.76 - 3258.60] see co-pilot actually suggesting uh a
[3256.28 - 3262.20] code so this handle submit will actually
[3258.60 - 3266.08] change our set from data so that&#39;s our
[3262.20 - 3269.24] handle change and it is taking a event
[3266.08 - 3272.04] and it&#39;s like the same event we got from
[3269.24 - 3274.60] any input field HTML input field so we
[3272.04 - 3276.68] have to declare the onchange method here
[3274.60 - 3279.00] and we have to call the handle change
[3276.68 - 3280.72] and we are getting the event here and
[3279.00 - 3282.72] inside that event we&#39;ll get the name
[3280.72 - 3284.88] we&#39;ll get the value and also I have
[3282.72 - 3287.48] declared the name of that particular
[3284.88 - 3289.32] input as the same name we have used in
[3287.48 - 3291.60] our from data you can see that we have
[3289.32 - 3293.32] API key and also the end point and when
[3291.60 - 3296.08] we are getting the name and the value
[3293.32 - 3298.44] now we I can just simply set the from
[3296.08 - 3300.72] data with the name and value and as you
[3298.44 - 3303.24] can see set from data have a call back
[3300.72 - 3305.76] which also give us previous data and so
[3303.24 - 3308.56] that we doesn&#39;t lose our old data let&#39;s
[3305.76 - 3311.44] say we are changing uh the endpoint
[3308.56 - 3314.48] field if I don&#39;t use the old data then
[3311.44 - 3316.56] my the data for the Endo or the AP key
[3314.48 - 3318.48] will be loose so if I change this one
[3316.56 - 3321.12] the other data will be Loos so that&#39;s
[3318.48 - 3323.52] why we also have to keep our previous
[3321.12 - 3325.36] data intake so that we can lose the
[3323.52 - 3327.40] older data and as you can see I also
[3325.36 - 3330.52] have added the type types and this type
[3327.40 - 3333.16] is exported from our hook here so I can
[3330.52 - 3335.32] just use it anywhere and when we are
[3333.16 - 3337.40] setting the from data as you can see I
[3335.32 - 3339.84] am just setting the previous data and I
[3337.40 - 3342.44] am taking the name as a key and the
[3339.84 - 3344.68] value for that property so as you can
[3342.44 - 3347.00] see we have APA key and the end point so
[3344.68 - 3349.52] whenever we call this function can see I
[3347.00 - 3352.44] called in the APA key it will change the
[3349.52 - 3356.04] value and if I call the same function
[3352.44 - 3357.88] here let&#39;s say in our endpoint field
[3356.04 - 3359.96] then it should also call the same
[3357.88 - 3362.00] function but it will give the different
[3359.96 - 3364.52] name and the value will be different so
[3362.00 - 3367.44] let&#39;s say I&#39;m going to um console log
[3364.52 - 3369.72] some of our data so I think the form
[3367.44 - 3372.80] data yep so let&#39;s just console log it
[3369.72 - 3375.04] and see what&#39;s happening so we have to
[3372.80 - 3377.28] open the extension and for the checking
[3375.04 - 3379.00] the console log you have to open the DI
[3377.28 - 3380.64] tool from here you can see we have
[3379.00 - 3383.56] inspect button and when you click that
[3380.64 - 3386.68] then you will see the dep tool like this
[3383.56 - 3389.44] and initially you can see this are the
[3386.68 - 3391.84] object that actually um showing so
[3389.44 - 3394.08] that&#39;s the form data and we are getting
[3391.84 - 3396.12] those information empty so now let&#39;s
[3394.08 - 3398.28] just fill up some of the informations
[3396.12 - 3400.04] see if I just change and then you can
[3398.28 - 3402.40] see the console loog that&#39;s happening
[3400.04 - 3404.32] even I change this one then you can see
[3402.40 - 3407.04] the value so that&#39;s how this hook
[3404.32 - 3409.56] actually changing its state and changing
[3407.04 - 3412.40] the value and now we need one thing
[3409.56 - 3415.48] which is we need to handle the save
[3412.40 - 3417.68] button so whenever we change we got the
[3415.48 - 3420.36] value now we have have to get the value
[3417.68 - 3422.72] and set or store that value into our
[3420.36 - 3425.04] Chrome storage and when we do so then
[3422.72 - 3427.60] later when we come back we can get the
[3425.04 - 3430.44] data by this use effect so let&#39;s just
[3427.60 - 3432.80] add the logic here so there will be a
[3430.44 - 3436.20] handle submit function which will also
[3432.80 - 3438.96] took event and this will be a form event
[3436.20 - 3442.92] because we have declared a form here and
[3438.96 - 3445.00] whenever we click on the button of our
[3442.92 - 3446.56] Save which is kind of like submit button
[3445.00 - 3449.20] so whenever we click then it will
[3446.56 - 3451.60] actually submit the form so that we can
[3449.20 - 3453.20] grab the event from here so as you can
[3451.60 - 3455.80] see it&#39;s suggesting onsubmit handle
[3453.20 - 3458.12] submit so this is the function it will
[3455.80 - 3460.64] call our function and it will pass the
[3458.12 - 3463.12] event and we have to prevent that
[3460.64 - 3465.04] default behavior from that uh click so
[3463.12 - 3467.16] if we don&#39;t handle that so whenever we
[3465.04 - 3469.72] click on the save button it will
[3467.16 - 3471.56] actually reload the page because uh by
[3469.72 - 3473.68] default when we submit any form it
[3471.56 - 3475.92] actually re reload the whole page so we
[3473.68 - 3478.52] have to prevent uh the default Behavior
[3475.92 - 3480.84] so so that it doesn&#39;t reload instead we
[3478.52 - 3483.28] can use any other functionality so you
[3480.84 - 3485.28] can see that um e. prevent default is
[3483.28 - 3487.96] the method to actually handle the
[3485.28 - 3490.32] default Behavior now you can see that um
[3487.96 - 3492.92] I have added Chrome chrome. storage.
[3490.32 - 3495.60] local. set so in the previous hook you
[3492.92 - 3497.96] can see that uh we use chrome. storage.
[3495.60 - 3500.12] loal doget which is the method for
[3497.96 - 3503.00] getting the information from the storage
[3500.12 - 3504.36] and the method called do set is the
[3503.00 - 3505.96] method that actually store the
[3504.36 - 3508.16] information into the storage it&#39;s kind
[3505.96 - 3511.36] of similar like local storage get and
[3508.16 - 3514.16] set so not any complex thing here and it
[3511.36 - 3517.00] will take an object and inside that
[3514.16 - 3518.76] object you can give any property so I&#39;m
[3517.00 - 3521.36] giving the whole from data here and
[3518.76 - 3523.56] because I&#39;m getting giving or restoring
[3521.36 - 3525.16] from data with the name of the property
[3523.56 - 3527.08] from the object that mean when we are
[3525.16 - 3528.84] getting the data we also have to pass
[3527.08 - 3530.80] like form data as the property to get
[3528.84 - 3532.84] the data and we have to pass like an
[3530.80 - 3536.12] array and inside that array we can pass
[3532.84 - 3538.48] all the property let&#39;s say in the during
[3536.12 - 3541.80] storing information I can add multiple
[3538.48 - 3544.52] property here let&#39;s say I can add a b
[3541.80 - 3546.24] and then C so and all these property
[3544.52 - 3548.96] should have value and for getting those
[3546.24 - 3551.76] value I can also pass those value here
[3548.96 - 3554.68] like a V and c as a string format by
[3551.76 - 3556.96] using comma that will give us all of its
[3554.68 - 3558.68] value and we have a callback function
[3556.96 - 3561.04] for this get method which will give us
[3558.68 - 3563.08] the result and the result you will get
[3561.04 - 3565.40] all the property for the result. form
[3563.08 - 3567.72] data we have the form data if we want to
[3565.40 - 3569.36] get the for a then we will be have
[3567.72 - 3571.80] result. a and then you&#39;ll get the
[3569.36 - 3574.28] desired result so that&#39;s how we can get
[3571.80 - 3576.60] the information uh from the storage and
[3574.28 - 3578.68] for storing that that&#39;s kind of same
[3576.60 - 3580.48] story we have to add the property and
[3578.68 - 3583.04] the value then it will store into the
[3580.48 - 3585.20] storage and it will also give you a call
[3583.04 - 3587.20] back function which actually call when
[3585.20 - 3589.24] the stored uh when the storage
[3587.20 - 3591.44] successfully saved the information and
[3589.24 - 3594.36] as you can see I displayed a toast
[3591.44 - 3596.44] message which is um by the way I need a
[3594.36 - 3599.36] library for displaying the toast toast
[3596.44 - 3602.28] so I&#39;m using react hot toast so I&#39;m
[3599.36 - 3604.32] using react H hot toast the library is
[3602.28 - 3606.00] uh really cool and it&#39;s really small as
[3604.32 - 3608.92] well as so if I just click then you can
[3606.00 - 3610.92] see the cute toast message appear and
[3608.92 - 3613.40] you can also customize that uh you can
[3610.92 - 3615.72] also use tawi CSS customization as well
[3613.40 - 3617.88] as so I think that&#39;s the perfect toast
[3615.72 - 3620.16] message I want to use so I want to use
[3617.88 - 3622.44] this one yes toast. success but before
[3620.16 - 3625.12] that I have to install that so pnpm at
[3622.44 - 3627.44] react hot toast so let&#39;s just install
[3625.12 - 3630.28] the package and after finishing the
[3627.44 - 3633.76] installation we also have to wrap the
[3630.28 - 3635.60] toaster in our wrapper on react so you
[3633.76 - 3637.48] will get the example like you can see
[3635.60 - 3639.68] here add toaster to your app and then
[3637.48 - 3642.44] you can use it anywhere so we have to
[3639.68 - 3644.76] add this toaster component in our
[3642.44 - 3647.92] wrapper applications so our wrapper
[3644.76 - 3650.24] application is in the main. TSX where we
[3647.92 - 3653.04] just passing our main component inside
[3650.24 - 3655.44] react. mode and here we can just simply
[3653.04 - 3659.68] pass our toaster and it will come from
[3655.44 - 3661.80] react toast like this and when we do so
[3659.68 - 3663.76] then we&#39;re ready to render the toast in
[3661.80 - 3666.04] any way in our application in any
[3663.76 - 3668.60] component and now we can just simply
[3666.04 - 3671.00] import that react hot toast like this
[3668.60 - 3673.40] and we&#39;re ready to use it anyway and you
[3671.00 - 3675.60] can use like success and we also have
[3673.40 - 3678.16] some other method called I think warning
[3675.60 - 3680.68] or errors something like that you will
[3678.16 - 3683.00] uh get all of the method in the
[3680.68 - 3686.04] documentation let&#39;s say for the error
[3683.00 - 3687.96] that&#39;s uh the error toast. error and and
[3686.04 - 3690.60] for the promise you can also handle
[3687.96 - 3692.56] promise as well as uh you can handle
[3690.60 - 3694.76] some multi-line text you can see the
[3692.56 - 3697.68] toast example here you can also find the
[3694.76 - 3699.88] dark mode if you want to render jsx you
[3697.68 - 3702.04] can also do that so so that&#39;s also great
[3699.88 - 3704.80] uh feature here you can just directly
[3702.04 - 3707.04] render a jsx or any sort of react
[3704.80 - 3708.92] component like this and also I can use
[3707.04 - 3711.12] like custom position you can see like
[3708.92 - 3713.48] bottom left right whatever so that&#39;s a
[3711.12 - 3716.68] really uh amazing library for rendering
[3713.48 - 3718.96] the toast so let&#39;s just now check all
[3716.68 - 3720.72] the functionality is working fine or not
[3718.96 - 3722.60] because uh that&#39;s the handle submit
[3720.72 - 3724.56] method that&#39;s going to took all the
[3722.60 - 3726.44] information all the form information and
[3724.56 - 3729.52] it&#39;s going to set those information into
[3726.44 - 3732.12] the storage and when we refresh the page
[3729.52 - 3734.76] and try to open the popup again we
[3732.12 - 3737.44] should see our stored information
[3734.76 - 3740.20] displaying in our input field so that&#39;s
[3737.44 - 3743.08] the Chrome extension and if I just open
[3740.20 - 3745.56] the popup then that&#39;s our UI which is
[3743.08 - 3748.24] working let&#39;s just visit any website for
[3745.56 - 3750.92] now let&#39;s visit Google and now let&#39;s
[3748.24 - 3753.08] open the popup and try to save some
[3750.92 - 3756.84] information and you can see that it&#39;s
[3753.08 - 3760.32] showing enter a valid URL because in the
[3756.84 - 3763.56] input field of the endpoint I added a
[3760.32 - 3766.16] type called URL and I also added reord
[3763.56 - 3768.28] and both of this will make sure that the
[3766.16 - 3770.28] field information will be endpoint it
[3768.28 - 3772.92] must be Endo you can&#39;t give any other
[3770.28 - 3775.56] text so that&#39;s why we are getting error
[3772.92 - 3777.76] for the valid endpoint so let&#39;s add like
[3775.56 - 3779.60] Google google.com so I&#39;m going to grab
[3777.76 - 3781.92] that endpoint here and I&#39;m going to
[3779.60 - 3784.24] paste it like this and if I save then
[3781.92 - 3786.80] the older error gone now it&#39;s asking to
[3784.24 - 3789.00] give me the key and if I just save that
[3786.80 - 3791.92] value like this and if I toggle over
[3789.00 - 3793.44] then we can see the value as well as uh
[3791.92 - 3795.72] the value will be gone so let&#39;s just
[3793.44 - 3797.64] save it and as you can see this toast
[3795.72 - 3799.48] message is displaying properly so let&#39;s
[3797.64 - 3802.32] just click it that again and you can see
[3799.48 - 3804.12] the toast message so now I have to check
[3802.32 - 3807.00] because the data is stored in the
[3804.12 - 3809.32] storage now even I just ref refresh and
[3807.00 - 3811.44] come back again to check that my data
[3809.32 - 3814.20] should appear on the input field and the
[3811.44 - 3816.68] data is showing perfectly here you can
[3814.20 - 3818.68] see that&#39;s uh how cool it is now
[3816.68 - 3820.76] throughout the whole Chrome extension I
[3818.68 - 3822.52] can just use this two value anywhere in
[3820.76 - 3824.32] the Chrome extension and if you want to
[3822.52 - 3826.28] just console loog what&#39;s happening you
[3824.32 - 3829.04] can also do that so so you have to just
[3826.28 - 3831.12] go to use from data and inside that use
[3829.04 - 3834.44] effect uh you can add a console lock
[3831.12 - 3836.60] inside here or maybe in the upper line
[3834.44 - 3839.12] so that you can check that what actually
[3836.60 - 3841.64] the result is giving and when you
[3839.12 - 3843.40] mistake this field what happening so you
[3841.64 - 3845.52] can explore that as well as it&#39;s kind of
[3843.40 - 3847.32] same like local storage so that&#39;s kind
[3845.52 - 3849.76] of straightforward to store information
[3847.32 - 3852.12] in the storage now uh I think we have
[3849.76 - 3854.56] completed the main part or like not main
[3852.12 - 3857.80] part it&#39;s like a major part where we can
[3854.56 - 3859.36] configure the our credential mostly
[3857.80 - 3862.00] going to be the end point and we are
[3859.36 - 3864.32] going to use Gemini so that uh so we are
[3862.00 - 3866.92] going to use the Gemini endpoint as well
[3864.32 - 3869.64] as the key to store that into the Chrome
[3866.92 - 3872.48] storage and then in the other script
[3869.64 - 3874.52] like background or the content we will
[3872.48 - 3876.04] use those information and how we are
[3874.52 - 3878.12] going to use that that&#39;s simple we are
[3876.04 - 3881.56] just simply going to call use from data
[3878.12 - 3883.64] and it will call and set the data from
[3881.56 - 3886.04] the storage and we&#39;ll get those data
[3883.64 - 3887.48] directly here and in the other part of
[3886.04 - 3889.08] our application we don&#39;t have to
[3887.48 - 3891.92] manipulate the data so we can just
[3889.08 - 3895.04] simply use the form data in any way so
[3891.92 - 3897.32] that&#39;s how uh the react hook will help
[3895.04 - 3900.00] us here to develop reusable
[3897.32 - 3903.12] functionality so that we can um easily
[3900.00 - 3905.36] manage our feature so now we already
[3903.12 - 3907.76] added that logic to store information
[3905.36 - 3909.88] into the storage mostly the credential
[3907.76 - 3911.88] now we have to use that credential we
[3909.88 - 3914.80] have to perform the other task and as
[3911.88 - 3917.24] you saw the demo section of this video
[3914.80 - 3919.28] where I showed you there are two menu
[3917.24 - 3921.96] which will actually clickable when we
[3919.28 - 3924.24] right click and there will be the Chrome
[3921.96 - 3925.76] extension name that we have and when we
[3924.24 - 3927.76] click on that menu it will appear
[3925.76 - 3929.60] another menu like the sub menu and we
[3927.76 - 3931.32] can click both of that let&#39;s say the
[3929.60 - 3934.72] post inside so when we click on the post
[3931.32 - 3937.44] inside it will open a popup and it shows
[3934.72 - 3940.52] all the subreddit post so let&#39;s visit
[3937.44 - 3942.28] Reddit and let&#39;s visit the JavaScript
[3940.52 - 3944.68] subreddit and you can see there are lots
[3942.28 - 3946.72] of post and what I want to do I want to
[3944.68 - 3949.20] right click and I want to click on that
[3946.72 - 3951.52] post inside menu and there should be a
[3949.20 - 3954.08] popup and in that popup I want to fish
[3951.52 - 3956.68] all the post that already rendered in
[3954.08 - 3959.00] the dome into that particular model so
[3956.68 - 3961.44] that&#39;s the goal right now but before I
[3959.00 - 3963.68] think I have to work with the menu so
[3961.44 - 3965.64] how we can add those menu so for adding
[3963.68 - 3967.76] those menu we have to work with
[3965.64 - 3969.40] background script and as you can see in
[3967.76 - 3971.68] the entry point when we created the
[3969.40 - 3974.08] project we already have a file called
[3971.68 - 3976.40] background. TS and this file actually
[3974.08 - 3978.84] run in the background and here because
[3976.40 - 3981.48] it&#39;s run on the background we can run
[3978.84 - 3983.64] any script that will trigger every time
[3981.48 - 3986.04] or it will trigger when we installed uh
[3983.64 - 3988.28] the Chrome extension and I want to grab
[3986.04 - 3989.80] that event let&#39;s say when we install the
[3988.28 - 3991.92] Chrome extension I want to grab that
[3989.80 - 3994.92] event and I want to create the context
[3991.92 - 3997.24] menu so here when we right click and all
[3994.92 - 3999.00] the menu we see is called context menu
[3997.24 - 4001.04] so we can also create multiple context
[3999.00 - 4002.64] menu here and we want to create it when
[4001.04 - 4004.92] the Chrome extension will be installed
[4002.64 - 4007.64] so we have to grab that particular event
[4004.92 - 4009.28] here but before that I want to uh create
[4007.64 - 4011.76] a folder called background I don&#39;t want
[4009.28 - 4014.64] to use this file because as you can see
[4011.76 - 4016.64] for the popup I&#39;m going to use folder
[4014.64 - 4018.24] convention and and uh for the content
[4016.64 - 4019.68] I&#39;m going to also follow the folder
[4018.24 - 4022.44] convention not the file convention
[4019.68 - 4024.96] because uh my script could go or could
[4022.44 - 4027.36] become larger so one file will not
[4024.96 - 4031.08] handle all the code so I want to create
[4027.36 - 4033.68] the folder and it&#39;s just a background um
[4031.08 - 4035.32] as a name and I can just simply move
[4033.68 - 4039.48] that file and I can just rename it
[4035.32 - 4042.36] index. TSS TS so as I said earlier that
[4039.48 - 4044.16] uh you have to point a root file that&#39;s
[4042.36 - 4046.96] going to point the folder so for the
[4044.16 - 4049.00] index.ts it will Point as a background
[4046.96 - 4051.60] script file and now I can create
[4049.00 - 4054.28] multiple file here and I can reuse them
[4051.60 - 4056.84] inside my entry point of the background
[4054.28 - 4059.00] file so for creating context menu first
[4056.84 - 4060.48] we need the permission as I said that we
[4059.00 - 4062.56] also have to declare permission like
[4060.48 - 4064.40] this so we have to add the context menu
[4062.56 - 4066.64] permission otherwise we can&#39;t create or
[4064.40 - 4069.04] we can&#39;t access context menu so for the
[4066.64 - 4070.88] permission I need several permission so
[4069.04 - 4073.20] for the permission I need several
[4070.88 - 4075.56] permission so I need active tab
[4073.20 - 4077.52] permission that mean let&#39;s say I have
[4075.56 - 4079.52] open three tab and I want the permission
[4077.52 - 4081.60] of the active tab so that&#39;s why I need
[4079.52 - 4083.80] that one then I need scripting it&#39;s
[4081.60 - 4086.52] going to help like script like inject
[4083.80 - 4089.12] any script on any page let&#39;s say let&#39;s
[4086.52 - 4091.96] say we have several web page and we want
[4089.12 - 4094.36] to render anything in our case we are
[4091.96 - 4097.80] going to apply the extension in Reddit
[4094.36 - 4099.80] so we have to render react code into our
[4097.80 - 4101.92] Reddit web page so that&#39;s mean we also
[4099.80 - 4103.44] need the permission for scripting then
[4101.92 - 4105.08] you can see that context menu That&#39;s the
[4103.44 - 4106.92] permission that will help us to create
[4105.08 - 4109.08] context menu when we right click we will
[4106.92 - 4110.96] see that menu and we also need the tabs
[4109.08 - 4113.28] permission and the storage that we
[4110.96 - 4115.64] already have otherwise we can&#39;t store
[4113.28 - 4117.80] our information into the popup or like
[4115.64 - 4119.96] from the popup to the com storage so we
[4117.80 - 4121.24] must have to pass the storage permission
[4119.96 - 4124.20] and there is another one which is
[4121.24 - 4127.68] declarative net request so it&#39;s kind of
[4124.20 - 4130.04] like um a network related permission for
[4127.68 - 4132.08] our case it doesn&#39;t require for now so I
[4130.04 - 4133.84] can just remove that things so for the
[4132.08 - 4135.12] permission stuff I think these are the
[4133.84 - 4137.28] permission that we need for our
[4135.12 - 4139.12] extension ition so if later we need any
[4137.28 - 4142.20] other then I&#39;m going to add that now I
[4139.12 - 4145.00] have to create like the menus but before
[4142.20 - 4146.92] that I have to handle the on install
[4145.00 - 4150.04] event so when I install the Chrome
[4146.92 - 4151.88] extension in the browser I have to grab
[4150.04 - 4154.36] that event and I have to create that
[4151.88 - 4157.00] menu so I&#39;m going to remove this portion
[4154.36 - 4158.88] and as I showed you in my earlier
[4157.00 - 4160.24] section then when this console log
[4158.88 - 4161.72] actually run you can just check that
[4160.24 - 4163.68] particular section it&#39;s on the demo
[4161.72 - 4166.72] section I guess or uh maybe in the next
[4163.68 - 4170.04] section so that&#39;s our method as well as
[4166.72 - 4173.08] we also have to use a method called main
[4170.04 - 4175.64] so we have to use so we have to use a
[4173.08 - 4178.08] method called Main and that&#39;s the main
[4175.64 - 4180.72] method which will run in the background
[4178.08 - 4183.28] and before it was like the simple
[4180.72 - 4184.56] function that is kind of like defined
[4183.28 - 4186.48] background that&#39;s a function that&#39;s
[4184.56 - 4188.84] actually returning a call back and in
[4186.48 - 4191.48] the Callback we have uh the script or
[4188.84 - 4193.88] the code but I want to make it the
[4191.48 - 4196.20] standard way and that&#39;s why we have to
[4193.88 - 4198.24] use like a function called and this is
[4196.20 - 4200.76] the default function that will run when
[4198.24 - 4204.28] you install the Chrome extension or the
[4200.76 - 4207.12] procedure when it run and for getting
[4204.28 - 4209.32] that install event we have to use the
[4207.12 - 4212.68] method from the Chrome API so it&#39;s
[4209.32 - 4215.36] called chrome. runtime. uninstall add
[4212.68 - 4217.40] event listener and this is the event
[4215.36 - 4220.00] that actually triggered when we actually
[4217.40 - 4223.28] install the Chrome extension and if I
[4220.00 - 4225.48] just console log then you can see what&#39;s
[4223.28 - 4228.24] happening so it should be the fast
[4225.48 - 4230.44] install so that&#39;s it so let&#39;s just see
[4228.24 - 4233.36] when it actually run so as you can see
[4230.44 - 4235.08] that&#39;s our uh browser and I have to go
[4233.36 - 4236.52] to the manage extension as I showed
[4235.08 - 4239.24] earlier that we have to click on the
[4236.52 - 4240.96] service worker and that&#39;s our dep tool
[4239.24 - 4243.48] and as you can see it&#39;s actually run and
[4240.96 - 4245.36] it run uh when we install so you will
[4243.48 - 4247.48] not see in the real time because uh when
[4245.36 - 4249.28] we save or refresh uh the whole thing
[4247.48 - 4252.56] actually work under the hood so you&#39;ll
[4249.28 - 4255.00] not get that particular uh log real time
[4252.56 - 4257.20] what do you get the executed one so
[4255.00 - 4260.16] that&#39;s what happening so now we can
[4257.20 - 4261.88] ensure that it will call in when we
[4260.16 - 4264.04] install the Chrome extension now we have
[4261.88 - 4266.04] to just create the menu context menu and
[4264.04 - 4267.68] for creating context menu as you can see
[4266.04 - 4269.24] co-pilot is suggesting me how we can
[4267.68 - 4271.96] create the menu so we have to use
[4269.24 - 4273.80] chrome. contextmenu doc create method
[4271.96 - 4276.24] and we can pass an object and inside
[4273.80 - 4278.88] that object you must have to provide an
[4276.24 - 4280.68] ID and this ID is the ID for that
[4278.88 - 4282.32] particular menu if you don&#39;t give that
[4280.68 - 4284.00] then it will throw error or you can&#39;t
[4282.32 - 4287.12] access that menu or you can&#39;t get the
[4284.00 - 4288.88] handle uh handle from that uh menu so
[4287.12 - 4291.16] you must have to give the ID and you can
[4288.88 - 4294.28] give the title this title will work like
[4291.16 - 4297.24] the level and for the context it is here
[4294.28 - 4299.68] we can just declare all that mean all
[4297.24 - 4302.52] the uh this menu will be appear
[4299.68 - 4305.16] everywhere in every page you can also uh
[4302.52 - 4307.20] use uh some sort of different type let&#39;s
[4305.16 - 4309.40] say there are Action Audio browser
[4307.20 - 4312.04] action editable iframe image there are
[4309.40 - 4314.00] tons of stuff let&#39;s say if you use image
[4312.04 - 4315.60] then when you right click on any image
[4314.00 - 4317.32] then this menu will be app appear
[4315.60 - 4319.64] otherwise this menu will not appear
[4317.32 - 4322.72] anywhere if you use all then it will
[4319.64 - 4325.56] open everywhere if you use like launcher
[4322.72 - 4327.76] or the page or video then it will work
[4325.56 - 4329.52] as like as that particular property so
[4327.76 - 4332.04] I&#39;m going to use like all because I want
[4329.52 - 4335.76] that extension to be open in everywhere
[4332.04 - 4338.00] from the page so when I just do this and
[4335.76 - 4340.20] if I right click then you can see that&#39;s
[4338.00 - 4342.08] the menu example and you can see our
[4340.20 - 4343.48] icon because I didn&#39;t change the icon
[4342.08 - 4345.96] yet so that&#39;s why it&#39;s showing the
[4343.48 - 4348.08] default icon from wxt framew Mar so
[4345.96 - 4350.44] that&#39;s our menu so you have to right
[4348.08 - 4352.32] click and then you can find the menu so
[4350.44 - 4354.72] now you can say that how we can handle
[4352.32 - 4357.00] this one yes we are coming like how we
[4354.72 - 4359.36] can handle and also we need submenu uh
[4357.00 - 4361.60] because we we have two menu which will
[4359.36 - 4363.60] help to work with post as well as the
[4361.60 - 4365.44] comment so we need two more submenu so I
[4363.60 - 4367.48] have to create submenu as well as so
[4365.44 - 4369.60] let&#39;s remove this and create our main
[4367.48 - 4372.12] menu and the submenu so that&#39;s going to
[4369.60 - 4374.92] be our two menu and as you can see
[4372.12 - 4377.44] chrome. contextmenu do create and I give
[4374.92 - 4379.64] the name called ID and the title is post
[4377.44 - 4381.20] inside and the context is all and the
[4379.64 - 4383.16] same will go for the comment as well as
[4381.20 - 4386.36] comment inside then comment as a ID
[4383.16 - 4389.44] context equal to all that uh means our
[4386.36 - 4391.20] menu should open in every page and now
[4389.44 - 4393.92] we should see the sub menu and you can
[4391.20 - 4395.96] see that we have to submenu here and
[4393.92 - 4398.68] when I&#39;m clicking on any of the submenu
[4395.96 - 4400.96] now we have to handle that functionality
[4398.68 - 4403.88] so as I said that in the Chrome
[4400.96 - 4406.32] extension development we are talking
[4403.88 - 4408.08] with different script by messaging so
[4406.32 - 4410.48] there is a term or topic called
[4408.08 - 4412.96] messaging that help to communicate with
[4410.48 - 4414.72] background script to popup script as
[4412.96 - 4416.96] well as popup script to background
[4414.72 - 4420.04] script or content script so the
[4416.96 - 4422.60] functionality is when we will click on a
[4420.04 - 4424.68] this menu on any web page or like
[4422.60 - 4426.92] specifically in the Reddit we want to
[4424.68 - 4428.80] open a open a model that&#39;s mean we have
[4426.92 - 4430.88] to handle that event first so when we
[4428.80 - 4432.72] click then we should have an Handler
[4430.88 - 4434.84] that will handle that event of that
[4432.72 - 4436.48] particular menu and we will get the ID
[4434.84 - 4438.48] of that menu and then we are going to
[4436.48 - 4441.16] send that message to our content script
[4438.48 - 4443.84] so you might ask why because um in any
[4441.16 - 4445.32] web page when we want to render any UI
[4443.84 - 4447.40] on that particular web page through
[4445.32 - 4450.44] Chrome extension we must have to use
[4447.40 - 4452.84] content content script so that&#39;s why we
[4450.44 - 4455.64] have to send the connection or the
[4452.84 - 4458.24] signal to our content script that I have
[4455.64 - 4459.92] clicked on the post inside menu or the
[4458.24 - 4462.48] comment inside menu we&#39;re going to pass
[4459.92 - 4464.32] the ID of that particular menu uh in the
[4462.48 - 4466.60] content script through messaging so that
[4464.32 - 4468.36] content script will understand that
[4466.60 - 4470.68] which menu have actually clicked so in
[4468.36 - 4472.72] the content. TS you will uh see the
[4470.68 - 4474.96] default code here we can match any
[4472.72 - 4476.84] website that mean it will execute on any
[4474.96 - 4478.60] website and in the main function we can
[4476.84 - 4480.44] actually receive that message so we have
[4478.60 - 4482.16] to send the message from here when we
[4480.44 - 4484.20] click and then we have to receive that
[4482.16 - 4486.64] message and based on the message
[4484.20 - 4488.40] information we can now just render any
[4486.64 - 4490.56] react component in this particular
[4488.40 - 4492.32] content TSS script so that&#39;s how
[4490.56 - 4494.48] actually the flow work so let&#39;s just
[4492.32 - 4496.96] implement the things so first we have to
[4494.48 - 4498.48] handle uh the menu click and as you can
[4496.96 - 4501.16] see it&#39;s already giving the suggestion
[4498.48 - 4503.20] like chrome. runtime. on message. add
[4501.16 - 4506.08] event listener uh that&#39;s another
[4503.20 - 4508.72] function or the method that&#39;s helped to
[4506.08 - 4510.52] grab the menu message so that&#39;s our
[4508.72 - 4513.08] corrected cost that&#39;s that&#39;s our
[4510.52 - 4515.00] corrected code where you can see it&#39;s um
[4513.08 - 4517.92] calling the method the same method
[4515.00 - 4519.64] coming from uh Chrome but the different
[4517.92 - 4521.44] method like the different object like
[4519.64 - 4523.44] context menu earlier it was coming from
[4521.44 - 4525.60] the runtime because we have to check the
[4523.44 - 4528.32] installation uh event that&#39;s why we have
[4525.60 - 4530.32] to use run time but for grapping the
[4528.32 - 4533.24] menu click or menu event we have to use
[4530.32 - 4535.00] the context menu as the object and as I
[4533.24 - 4537.24] told you we have to give the permission
[4535.00 - 4539.12] here otherwise we will not be able to
[4537.24 - 4541.68] use this object from the Chrome and
[4539.12 - 4543.64] that&#39;s it uh context menu.on click. add
[4541.68 - 4545.84] event listener it will give you a call
[4543.64 - 4548.24] back function uh with the promise format
[4545.84 - 4550.64] you can uh get the information of that
[4548.24 - 4552.84] menu as well as the tab like the current
[4550.64 - 4554.56] tab which current tab you are in and
[4552.84 - 4555.44] where you are actually clicking so let&#39;s
[4554.56 - 4557.84] say
[4555.44 - 4560.32] I am clicking on the google.com or there
[4557.84 - 4562.76] are multiple tab so if I click from here
[4560.32 - 4564.84] then it should give the tab ID and also
[4562.76 - 4567.16] the menu information so now I can just
[4564.84 - 4569.48] use those uh information and I can send
[4567.16 - 4572.40] them back to the content script and how
[4569.48 - 4574.44] I&#39;m doing that I am checking with the ID
[4572.40 - 4578.04] because I already declared the ID here
[4574.44 - 4579.96] so I will get the ID into the info. menu
[4578.04 - 4582.28] item id you can name it anything but
[4579.96 - 4586.12] good is just put the name of info and
[4582.28 - 4588.48] then info. menu item ID is the exact ID
[4586.12 - 4590.64] of the menu ID like this so we&#39;ll get
[4588.48 - 4593.36] like post and the comment and we are
[4590.64 - 4595.72] crapping those value and we are checking
[4593.36 - 4597.08] as the condition and we are putting our
[4595.72 - 4599.72] condition for sending message to the
[4597.08 - 4603.16] content script so for sending message to
[4599.72 - 4605.44] the content script we have to use tabs
[4603.16 - 4608.56] as you saw we have given the permission
[4605.44 - 4610.96] of tabs and now we can use chrome. tabs.
[4608.56 - 4612.96] send message that mean this is the
[4610.96 - 4615.24] method send message and of course it
[4612.96 - 4617.76] should be from tabs it will allow you to
[4615.24 - 4620.08] send message on any tab so if you just
[4617.76 - 4621.88] call this method from any script let&#39;s
[4620.08 - 4624.72] say if I just simply call this from
[4621.88 - 4626.40] popup I can also do that also I can do
[4624.72 - 4628.68] the same thing from content as well as
[4626.40 - 4630.72] so we just have to pass the tab ID and
[4628.68 - 4633.72] the message that we want to send so this
[4630.72 - 4635.80] send message will require two parameter
[4633.72 - 4637.68] and then one will be kind of like a call
[4635.80 - 4639.28] back so the first one is the tab ID and
[4637.68 - 4641.04] the second one is the message or the
[4639.28 - 4643.84] information that you are going to send
[4641.04 - 4646.76] so for the tab ID because we are using
[4643.84 - 4649.28] on click. Avent add event listener one
[4646.76 - 4651.48] click. add listener from Context menu
[4649.28 - 4654.04] then we&#39;ll simply get the tab ID from
[4651.48 - 4656.28] here so tab. ID the tab is coming from
[4654.04 - 4659.44] the second argument from our callback
[4656.28 - 4661.60] and the tab. ID is the first argument to
[4659.44 - 4664.04] identify that where I&#39;m going to send
[4661.60 - 4665.68] the message or which tab which tabs and
[4664.04 - 4668.48] which content is script and then we have
[4665.68 - 4670.72] to pass the action so or like any data
[4668.48 - 4672.40] so I can just pass any string so better
[4670.72 - 4674.00] you should pass an object so that&#39;s our
[4672.40 - 4676.48] data and I&#39;m just simply passing the
[4674.00 - 4678.84] menu ID the the post and the third one
[4676.48 - 4681.20] is the function that actually run when
[4678.84 - 4684.28] the message actually successfully sent
[4681.20 - 4686.24] so if you got uh the message let&#39;s say
[4684.28 - 4688.60] you sent the message to that particular
[4686.24 - 4690.20] Tab and of course you also have to
[4688.60 - 4692.24] receive that or like listen that
[4690.20 - 4694.72] particular message so let&#39;s say uh this
[4692.24 - 4696.64] is like a kind of sending it generally
[4694.72 - 4698.36] that&#39;s mean um when I just declare this
[4696.64 - 4700.88] code it will generally send that message
[4698.36 - 4702.96] to that particular tab but the thing is
[4700.88 - 4704.80] if I want to grab that message in popup
[4702.96 - 4708.20] I have to listen that particular message
[4704.80 - 4710.96] message or the um signal to the popup
[4708.20 - 4713.32] and also I can listen the signal to the
[4710.96 - 4715.72] content as well as I can listen the same
[4713.32 - 4718.08] signal in the background J as well as so
[4715.72 - 4720.84] it&#39;s like a general message you can send
[4718.08 - 4723.00] to any tab but later in any other script
[4720.84 - 4724.44] you have to receive that signal and
[4723.00 - 4725.76] because we are getting the data based on
[4724.44 - 4727.60] the data you can actually perform
[4725.76 - 4730.28] different task so let&#39;s say I pass like
[4727.60 - 4733.28] action equal to post so if I listen the
[4730.28 - 4735.60] signal in my content script and if I
[4733.28 - 4737.44] check with the data either post or not
[4735.60 - 4739.24] then I can just handle it differently so
[4737.44 - 4740.88] that&#39;s the whole thing actually work so
[4739.24 - 4743.04] you have to pass the message generally
[4740.88 - 4745.20] like this and when you pass that there
[4743.04 - 4746.84] is a function call back which will give
[4745.20 - 4749.56] like the response and this response is
[4746.84 - 4751.24] when you received that message let&#39;s say
[4749.56 - 4753.00] I will show you the example how you can
[4751.24 - 4755.20] receive that message that you can see
[4753.00 - 4757.12] that&#39;s uh showing that particular
[4755.20 - 4759.36] suggestion from the co-pilot you also
[4757.12 - 4761.96] have to use chrome. run type.on message
[4759.36 - 4764.20] that&#39;s going to help to get the signal
[4761.96 - 4767.00] generally from the tab because we&#39;re
[4764.20 - 4769.32] passing the ID we&#39;ll get that message on
[4767.00 - 4771.56] that particular Tab and now the help of
[4769.32 - 4774.20] this method we can just simply grab that
[4771.56 - 4775.76] particular message and here it will give
[4774.20 - 4777.56] a call back function where you will get
[4775.76 - 4779.28] other fun other property like the
[4777.56 - 4780.68] request will give you the information
[4779.28 - 4783.56] and as you can see I&#39;m receiving the
[4780.68 - 4786.40] request. action if it&#39;s post then I can
[4783.56 - 4788.20] identify that it&#39;s uh the menu called
[4786.40 - 4790.40] post I have clicked from the background
[4788.20 - 4792.56] descript or like the menu and here you
[4790.40 - 4794.84] can see send response and that&#39;s the
[4792.56 - 4796.96] response function that we can call and
[4794.84 - 4799.12] we can also pass any sort of data and
[4796.96 - 4801.68] when we call this send method send
[4799.12 - 4803.56] respon method it will actually call here
[4801.68 - 4805.40] that&#39;s mean that&#39;s the method we will
[4803.56 - 4807.32] get let&#39;s say we are going to pass any
[4805.40 - 4809.24] data from this let&#39;s say we did we
[4807.32 - 4810.84] received the message we perform some
[4809.24 - 4813.04] functionality now we want to send back
[4810.84 - 4815.36] some data to the sender where it
[4813.04 - 4816.96] actually come so I can just simply call
[4815.36 - 4818.92] this function and the response I can get
[4816.96 - 4821.08] the response data so that&#39;s how the
[4818.92 - 4823.84] whole thing like messaging things work
[4821.08 - 4826.64] there are some package or Plugin from
[4823.84 - 4828.52] wxt to handle all the messaging for
[4826.64 - 4831.40] different browser together right now I&#39;m
[4828.52 - 4834.04] focusing on Chrome so if you have the
[4831.40 - 4837.60] extension for uh for multiple browser
[4834.04 - 4839.88] let&#39;s say Firefox opera or uh age or
[4837.60 - 4843.88] Chrome then you have to use a packaging
[4839.88 - 4846.44] Library uh provided by wxt or any other
[4843.88 - 4849.32] open source so there are several so if I
[4846.44 - 4851.64] show to you so if you go to the wxt
[4849.32 - 4853.88] documentation then you will find a
[4851.64 - 4856.00] section called uh messaging and if you
[4853.88 - 4858.36] click on there then you can see it
[4856.00 - 4860.04] actually suggesting you to use uh some
[4858.36 - 4862.36] sort of library for handling the
[4860.04 - 4865.84] messaging for different browser you will
[4862.36 - 4868.56] get trpc Chrome that kind of like the
[4865.84 - 4870.68] messaging uh library for handling Chrome
[4868.56 - 4874.32] messaging and there another one which is
[4870.68 - 4876.24] EXT Breeze then we have web EXT core SL
[4874.32 - 4878.60] messaging so these are all the library
[4876.24 - 4881.52] that&#39;s actually help to communicate uh
[4878.60 - 4883.32] with between script so if you are
[4881.52 - 4885.48] targeting multiple browser I highly
[4883.32 - 4887.40] recommend use any Library don&#39;t just
[4885.48 - 4889.00] only use Chrome because it will only
[4887.40 - 4891.64] work on the Chrome not on the other
[4889.00 - 4895.12] browser so that&#39;s actually how uh we can
[4891.64 - 4897.24] handle message so in summary we have to
[4895.12 - 4900.04] send the message with the tap ID and the
[4897.24 - 4901.60] action and that&#39;s for the post and we
[4900.04 - 4904.28] have for the comment as well as so
[4901.60 - 4906.72] that&#39;s for the comment so if I just um
[4904.28 - 4909.04] put any other different data set like
[4906.72 - 4911.40] this I can just pass that and later I
[4909.04 - 4913.48] can grab that information in the content
[4911.40 - 4916.36] descript with the request. action.
[4913.48 - 4919.52] checking that data or the ID is matching
[4916.36 - 4922.36] with mine one not not and as a callback
[4919.52 - 4924.28] function I can pass anything from the
[4922.36 - 4926.24] receiver where I receive the message or
[4924.28 - 4929.00] the signal and I can just pass any sort
[4926.24 - 4931.56] of data so let&#39;s now check that the
[4929.00 - 4933.56] messaging is working or not so I have
[4931.56 - 4934.76] the menu and when we click on the post
[4933.56 - 4936.52] then it should send the message to the
[4934.76 - 4938.40] content script and it should log this
[4936.52 - 4941.04] and it should also send back uh the
[4938.40 - 4943.48] status to our background descript so we
[4941.04 - 4947.08] should see all the log and as you can
[4943.48 - 4949.48] see the response log so this one it one
[4947.08 - 4951.20] should render on the background dep tool
[4949.48 - 4953.80] not in the content dep tool because we
[4951.20 - 4955.88] are getting uh managing or handling this
[4953.80 - 4959.24] in the background script so let&#39;s check
[4955.88 - 4962.60] that that&#39;s our extension and uh let&#39;s
[4959.24 - 4965.28] just go our service worker depth tools
[4962.60 - 4967.72] here it is so that&#39;s for the service
[4965.28 - 4970.60] worker and let&#39;s just go to Google and
[4967.72 - 4973.48] let&#39;s also open our content terminal
[4970.60 - 4975.32] because we are going to render or inject
[4973.48 - 4977.44] the content script so we can just
[4975.32 - 4979.84] inspect any web page and here we can see
[4977.44 - 4983.12] the log of our content descript code so
[4979.84 - 4985.56] if I now just click on posting side then
[4983.12 - 4987.76] I should see the message here but as you
[4985.56 - 4989.84] can see I&#39;m getting the response but
[4987.76 - 4991.88] it&#39;s getting undefined and it&#39;s showing
[4989.84 - 4994.00] unchecked runtime last error could not
[4991.88 - 4996.56] establish connection receiving and does
[4994.00 - 4999.60] not exist so this is kind of like a
[4996.56 - 5002.20] common error people face while messaging
[4999.60 - 5004.64] to different script so for resolving
[5002.20 - 5007.76] that issue first you have to check that
[5004.64 - 5010.96] you have entered any URL or not inside
[5007.76 - 5013.08] of your um input field of the or like
[5010.96 - 5015.52] the search field on the browser so for
[5013.08 - 5018.12] resolving that issue you must first have
[5015.52 - 5020.12] to check that you have entered any valid
[5018.12 - 5023.32] URL or not right now you can see I
[5020.12 - 5026.12] didn&#39;t entered any valid URL I just open
[5023.32 - 5029.64] a new tab from chrome and because we are
[5026.12 - 5033.24] checking every URL that match with HTTP
[5029.64 - 5036.56] s colog sl/ something like that so when
[5033.24 - 5038.80] we click or open any new tab without any
[5036.56 - 5040.64] URL definitely we are not getting any
[5038.80 - 5043.68] message from that because it&#39;s not any
[5040.64 - 5046.20] website it&#39;s just a default web page
[5043.68 - 5047.96] that&#39;s opening when we just open the tab
[5046.20 - 5051.08] so that&#39;s why when we click nothing
[5047.96 - 5053.08] happening even we saw in the dep tools
[5051.08 - 5055.24] we can&#39;t see any message so that&#39;s why
[5053.08 - 5058.40] we must have to visit any website so
[5055.24 - 5061.16] let&#39;s say visit google.com and close all
[5058.40 - 5063.56] the tab and now as you can see here we
[5061.16 - 5066.36] got the message it&#39;s like not message
[5063.56 - 5067.84] it&#39;s like the initial console log so you
[5066.36 - 5069.64] can see in the main function we have
[5067.84 - 5072.16] console log hello content that&#39;s mean
[5069.64 - 5074.88] whenever the content script successfully
[5072.16 - 5077.00] run we will got this particular message
[5074.88 - 5078.96] like the console lock that&#39;s me our
[5077.00 - 5080.76] content is script working fine now we
[5078.96 - 5082.32] have to receive that information and
[5080.76 - 5084.84] also we have to send that information
[5082.32 - 5087.52] back to our background so let&#39;s now just
[5084.84 - 5089.44] click on our menu so I right click on
[5087.52 - 5092.16] anywhere and then I can click on the
[5089.44 - 5094.36] post inside and here you can see I got a
[5092.16 - 5097.44] message I received the message in
[5094.36 - 5099.40] content script post action post a action
[5097.44 - 5101.56] reip that&#39;s the received console lock
[5099.40 - 5103.60] and that&#39;s mean we successfully sent
[5101.56 - 5105.24] otherwise we can&#39;t receive back so for
[5103.60 - 5106.68] checking that we have to open the dep
[5105.24 - 5109.04] tools from the service worker and you
[5106.68 - 5110.84] can see this is where we got the
[5109.04 - 5112.60] response and if you click on the code
[5110.84 - 5115.00] then it&#39;s the code that&#39;s showing that
[5112.60 - 5116.52] it&#39;s on the background folder index.ts
[5115.00 - 5118.52] file and that&#39;s the line that&#39;s the
[5116.52 - 5120.32] condition that&#39;s uh showing that code
[5118.52 - 5122.80] and that&#39;s the response so if I just
[5120.32 - 5125.24] click the comment let&#39;s say the comment
[5122.80 - 5127.64] inside then I&#39;m getting the response
[5125.24 - 5129.96] back as well as I should see the
[5127.64 - 5132.88] response here that mean the messaging is
[5129.96 - 5135.40] working fine between content script to
[5132.88 - 5137.72] background and both vice versa so that&#39;s
[5135.40 - 5139.84] how we actually handle our sent message
[5137.72 - 5142.32] between each script now we can just
[5139.84 - 5144.00] simply uh receive that particular
[5142.32 - 5147.64] message in our content script and we can
[5144.00 - 5150.00] render the UI in any web page because uh
[5147.64 - 5152.96] our Chrome extension is fully focused on
[5150.00 - 5155.44] Reddit so we have to must add match with
[5152.96 - 5158.08] Reddit URL so that the Chrome extension
[5155.44 - 5161.40] only appear on the page called Reddit
[5158.08 - 5164.20] and we can also um receive multiple
[5161.40 - 5167.24] signal from multiple script let&#39;s say if
[5164.20 - 5170.28] I just go to the popup and in the popup
[5167.24 - 5172.84] do uh let&#39;s say main. TSX file or in the
[5170.28 - 5174.88] component from the react here I can also
[5172.84 - 5177.48] just send message from the popup as well
[5174.88 - 5180.04] as that&#39;s not an issue I can just simply
[5177.48 - 5182.20] uh copy the same code what we did here
[5180.04 - 5184.32] like chrome. contextmenu Doon click and
[5182.20 - 5187.04] I can just simply send message from
[5184.32 - 5189.36] popup script as well as and that message
[5187.04 - 5191.16] I can grab in the content script as well
[5189.36 - 5193.20] as if I want to grab that in the
[5191.16 - 5195.16] background I can do that as well as so
[5193.20 - 5198.08] let&#39;s say in the background script I
[5195.16 - 5200.44] will get the same code like this here so
[5198.08 - 5203.36] if I just give this code then I will get
[5200.44 - 5205.08] the same signal here as well as so if I
[5203.36 - 5207.72] just remove this particular course
[5205.08 - 5209.80] section and try to send the message from
[5207.72 - 5211.52] the background JS and also receive the
[5209.80 - 5213.88] message from the background JS so let&#39;s
[5211.52 - 5217.00] see it worked or not so for doing that
[5213.88 - 5218.72] we have have to uh open our dep tool
[5217.00 - 5221.04] from the service worker so let&#39;s just
[5218.72 - 5222.96] click post inside and you can see we&#39;re
[5221.04 - 5224.88] getting the same error and the response
[5222.96 - 5226.56] is undefined because uh we are just
[5224.88 - 5228.92] communicating with background to
[5226.56 - 5231.40] background so that doesn&#39;t make sense so
[5228.92 - 5233.80] that&#39;s why uh you sometimes have to use
[5231.40 - 5236.36] that in the different script like this
[5233.80 - 5238.88] and when we do that then the whole
[5236.36 - 5240.96] things work fine so if I just click now
[5238.88 - 5242.60] then you can see the response as well as
[5240.96 - 5244.72] you can see the response here so that
[5242.60 - 5246.44] mean uh if you try to re the same
[5244.72 - 5250.08] message or something like that you not
[5246.44 - 5253.36] able to do that so now let&#39;s um see how
[5250.08 - 5257.12] we can just now grab that message and
[5253.36 - 5259.84] rendered our desire UI and also now we
[5257.12 - 5262.24] are going to use Reddit to perform all
[5259.84 - 5265.12] the stuff so we have to go to the Reddit
[5262.24 - 5268.04] and in the subreddit of anywhere so
[5265.12 - 5271.24] let&#39;s say in the JavaScript subreddit if
[5268.04 - 5273.44] I click anywhere and click on the
[5271.24 - 5276.60] posting side then there should be a
[5273.44 - 5279.16] model and inside that model I should see
[5276.60 - 5281.96] all the post that I already have fetch
[5279.16 - 5285.44] or scrolled through so now our task is
[5281.96 - 5288.16] to create a model and render that in any
[5285.44 - 5290.52] web page and then complete our main
[5288.16 - 5294.08] functionality so now let&#39;s see how we
[5290.52 - 5296.52] can render UI in any web page using our
[5294.08 - 5298.68] content descript and I would like to
[5296.52 - 5301.28] create a folder called content and I&#39;m
[5298.68 - 5303.64] not going to use content. TS file
[5301.28 - 5305.64] because I am following the convention of
[5303.64 - 5307.88] the folder so I&#39;m going to put this
[5305.64 - 5309.72] particular file here and it will be our
[5307.88 - 5313.84] root file so I&#39;m going to name it
[5309.72 - 5316.20] index.ts so so that I can actually point
[5313.84 - 5318.40] this file as the entry file for the
[5316.20 - 5321.24] content script and as I said that we are
[5318.40 - 5323.88] going to use react to render UI so
[5321.24 - 5326.56] better we should name rename it like
[5323.88 - 5329.76] content. TSX so that we can also play
[5326.56 - 5332.32] with react Tom or jsx so now here that
[5329.76 - 5334.92] uh you can see that um we are receiving
[5332.32 - 5336.68] message and we are checking with if else
[5334.92 - 5339.16] condition let&#39;s say we have several
[5336.68 - 5342.32] message and if we just start with if
[5339.16 - 5345.12] else it will not look well so instead we
[5342.32 - 5347.40] can use switch statement so that&#39;s our
[5345.12 - 5349.56] code is going to be when we are going to
[5347.40 - 5351.92] use switch statement this particular
[5349.56 - 5353.68] even listener will have the Callback
[5351.92 - 5355.80] that is kind of promised so we have to
[5353.68 - 5358.32] use as sync and because we are using as
[5355.80 - 5361.20] sync so we also have to wrap the whole
[5358.32 - 5363.48] function with snc so that&#39;s why main
[5361.20 - 5364.80] will be snc and in the main function
[5363.48 - 5367.08] it&#39;s kind of same same like the
[5364.80 - 5368.88] background we saw earlier that we have
[5367.08 - 5371.08] the main function that actually run the
[5368.88 - 5372.52] same thing happen with the content and
[5371.08 - 5374.52] in that main function you will get a
[5372.52 - 5376.32] parameter which is kind of like the
[5374.52 - 5379.76] content Des script context so that&#39;s
[5376.32 - 5382.24] mean uh with this you will get uh the
[5379.76 - 5384.20] whole context of the content let&#39;s say
[5382.24 - 5385.88] you are in a web page and if you want
[5384.20 - 5387.64] that particular web page context then
[5385.88 - 5389.80] you will get that with this particular
[5387.64 - 5393.12] argument so the short from is CTX just
[5389.80 - 5395.56] so now we can easily increase our
[5393.12 - 5397.32] condition so if tomorrow another
[5395.56 - 5399.12] property comes then we can just simply
[5397.32 - 5402.44] add that here and we can handle our
[5399.12 - 5405.12] logic inside that particular uh scope so
[5402.44 - 5408.36] that&#39;s uh how we should organize all the
[5405.12 - 5410.88] stuff now what I want to achieve is in
[5408.36 - 5412.84] here we have the menu so if I click on
[5410.88 - 5415.84] the posting side then I should see a
[5412.84 - 5418.88] sort of model that will open or appear
[5415.84 - 5420.64] in the Reddit UI and that should be post
[5418.88 - 5423.68] and if I click on the comment then there
[5420.64 - 5425.76] should be a model or UI that will appear
[5423.68 - 5428.56] on the redit which will be kind of like
[5425.76 - 5431.68] comment so how we can achieve that and
[5428.56 - 5434.60] also we are using react so we have to
[5431.68 - 5437.16] and the react and when CSS that mean we
[5434.60 - 5439.00] also have to inject CSS so that&#39;s why we
[5437.16 - 5442.12] need the property called CSS injection
[5439.00 - 5444.36] mode slui then it will actually inject
[5442.12 - 5446.80] uh all the CSS that we are going to
[5444.36 - 5449.64] import here so I&#39;m going to import the
[5446.80 - 5453.52] CSS from the popup because uh in the
[5449.64 - 5456.44] popup Styler CSS is the twi CSS entry
[5453.52 - 5460.24] point so if I just import this part in
[5456.44 - 5463.16] our um content file then I should get
[5460.24 - 5465.88] all the T and CSS support on content
[5463.16 - 5467.76] script so that&#39;s why importing the main
[5465.88 - 5470.56] CSS file in your content script is
[5467.76 - 5473.84] important and when we are going to
[5470.56 - 5476.00] render the UI in the page any page so we
[5473.84 - 5478.56] have to remember one thing we can render
[5476.00 - 5481.28] UI with two way one is directly render
[5478.56 - 5483.92] into the Dom render with Shadow Dom so
[5481.28 - 5486.44] the standard and best practices to
[5483.92 - 5488.56] render with Shadow Dom not the real Dom
[5486.44 - 5492.16] because uh if you just directly render
[5488.56 - 5494.96] any UI in the main Dom let&#39;s say this is
[5492.16 - 5498.08] the main D for the Reddit it has a lots
[5494.96 - 5501.36] of design it has its own components and
[5498.08 - 5504.88] it design CSS so if you directly render
[5501.36 - 5507.60] any UI in the real Dom of the web page
[5504.88 - 5510.36] then your CSS and the web page CSS will
[5507.60 - 5511.96] be conflicted and that will create UI
[5510.36 - 5514.28] related issue and some other
[5511.96 - 5516.84] functionality related issue so you have
[5514.28 - 5519.64] to isolate your code and you have to
[5516.84 - 5522.24] make a copy of the Dom and then you have
[5519.64 - 5524.24] to put or create a shadow Dom of that
[5522.24 - 5526.96] particular Dome and you have to insert
[5524.24 - 5528.48] your component or your UI element into
[5526.96 - 5531.24] that Dome and then you have to render
[5528.48 - 5533.88] that which will make your component or
[5531.24 - 5536.12] your UI isolated and separated from the
[5533.88 - 5538.12] main Dome and that is really important
[5536.12 - 5540.56] if you don&#39;t do that then you will face
[5538.12 - 5543.24] a lot of design issue and sometimes some
[5540.56 - 5545.92] functionality issue so better we have to
[5543.24 - 5548.32] create a Shadow root or Shadow Dom where
[5545.92 - 5550.56] we will inject our UI so let&#39;s create
[5548.32 - 5552.56] that so let&#39;s just forget about this
[5550.56 - 5555.88] part for sometimes so let&#39;s just comment
[5552.56 - 5558.44] this out and try to render a single UI
[5555.88 - 5560.12] in our web page so that you will
[5558.44 - 5564.24] understand how we are actually rendering
[5560.12 - 5566.60] the UI so for rendering an UI with
[5564.24 - 5569.40] Shadow root we have to use a method
[5566.60 - 5571.48] called create Shadow root UI and you
[5569.40 - 5573.72] don&#39;t have to import it from anywhere if
[5571.48 - 5576.24] you just directly invoke that function
[5573.72 - 5579.68] like like create Shadow root UI then you
[5576.24 - 5582.28] can simply create kind of like a shadow
[5579.68 - 5585.20] root copy or like Shadow root system
[5582.28 - 5586.64] that where you can just render the UI so
[5585.20 - 5590.20] that&#39;s the method that we are going to
[5586.64 - 5592.64] use and this method will took as a this
[5590.20 - 5595.84] method will to one argument first which
[5592.64 - 5597.64] is the context of a particular web page
[5595.84 - 5599.60] because we are getting the context from
[5597.64 - 5601.68] the main function that means we can
[5599.60 - 5603.84] directly use that context to pass that
[5601.68 - 5606.76] shadow root and this is the context that
[5603.84 - 5608.88] it will use to create a copy of that
[5606.76 - 5612.12] particular real Doms that&#39;s mean let&#39;s
[5608.88 - 5614.64] say we have a web page called reddit.com
[5612.12 - 5617.76] and I want a copy from this particular
[5614.64 - 5619.68] web page and when I will call this main
[5617.76 - 5622.68] method I&#39;m get I will get that
[5619.68 - 5624.52] particular window context and later in
[5622.68 - 5626.68] the creating of the Shadow root I can
[5624.52 - 5629.72] pass that particular window object and
[5626.68 - 5632.40] it will use that context and it will
[5629.72 - 5634.48] create the copy and now in the copy I
[5632.40 - 5636.48] can create elements and then I can
[5634.48 - 5638.32] insert that element into that particular
[5636.48 - 5640.44] UI and that&#39;s why I have to put some
[5638.32 - 5642.68] other property you can see that this is
[5640.44 - 5645.20] the name for that particular Shadow root
[5642.68 - 5647.48] uh right now it will be for post and if
[5645.20 - 5650.68] if I just give any name it will look
[5647.48 - 5653.44] like kind of like this so if we rendered
[5650.68 - 5655.20] any element in the HTML then it will
[5653.44 - 5657.80] seems like this that&#39;s going to be the
[5655.20 - 5659.56] element from for the HTML so that&#39;s why
[5657.80 - 5661.28] name is important and Position will be
[5659.56 - 5663.96] in line then it will be placed directly
[5661.28 - 5666.36] in line in that particular um sh Shadow
[5663.96 - 5668.52] root or like the main Dome this is on
[5666.36 - 5670.32] Mount method that is going to help us to
[5668.52 - 5671.92] actually render the UI and there is
[5670.32 - 5674.40] another one which is called on remove
[5671.92 - 5676.84] and this will help to uh remove the UI
[5674.40 - 5679.88] from the Dome so this on Mount method
[5676.84 - 5681.32] will have three property or maybe more
[5679.88 - 5683.64] so if you just hover over then you can
[5681.32 - 5685.88] see uh it has three property like UI
[5683.64 - 5688.52] container it&#39;s an HTML element then we
[5685.88 - 5689.88] have Shadow then we have Shadow host so
[5688.52 - 5692.48] most of the time we&#39;re going to use the
[5689.88 - 5693.92] UI container and if I use any of them
[5692.48 - 5695.88] then I&#39;m going to explain why I&#39;m going
[5693.92 - 5698.12] to use that and the UI container is kind
[5695.88 - 5700.76] of like uh let&#39;s say we have we got the
[5698.12 - 5702.68] element like with the post and because
[5700.76 - 5705.84] we have this element so we have to
[5702.68 - 5708.24] insert sort of UI in there so let&#39;s say
[5705.84 - 5710.72] kind of like this so if we render UI
[5708.24 - 5712.72] like this so we must need a container
[5710.72 - 5715.28] and that&#39;s the container is kind of this
[5712.72 - 5718.52] one the post so this UI container will
[5715.28 - 5721.04] give us this and now if we create some
[5718.52 - 5724.04] sort of element in HTML now we can just
[5721.04 - 5726.92] simply return that HTML for Mount then
[5724.04 - 5728.92] it will use the UI container to actually
[5726.92 - 5730.84] append that element inside of that
[5728.92 - 5732.68] particular container so let&#39;s see the
[5730.84 - 5735.36] real example that how we&#39;re going to
[5732.68 - 5737.44] render that so the problem is we are
[5735.36 - 5740.24] creating the shadow route but we are not
[5737.44 - 5742.92] mounting it we just returning the whole
[5740.24 - 5745.88] Shadow root to our main function but we
[5742.92 - 5748.04] must have to call this function and
[5745.88 - 5750.24] there is a method inside that function
[5748.04 - 5752.12] which is called Mount because in the on
[5750.24 - 5754.24] Mount we are actually rendering that so
[5752.12 - 5756.92] we have to manually click or trigger
[5754.24 - 5759.20] that particular amount event so that we
[5756.92 - 5762.24] can render the UI so for achieving that
[5759.20 - 5764.44] result we have to create a let&#39;s say a
[5762.24 - 5767.20] variable where we can initialize this
[5764.44 - 5770.32] function so that&#39;s the shadow root that
[5767.20 - 5774.20] we are initializing using uh a variable
[5770.32 - 5776.92] and then we have to use this variable UI
[5774.20 - 5780.08] and then we will get a property or the
[5776.92 - 5783.08] method called mount ui. mount and so we
[5780.08 - 5785.80] have to use ui. Mount method and for
[5783.08 - 5787.84] using that case we also have to resolve
[5785.80 - 5790.52] that particular promise because create
[5787.84 - 5793.36] Shadow root UI it actually return a
[5790.52 - 5795.32] promise so we have to await that promise
[5793.36 - 5798.60] and then we have to actually trigger
[5795.32 - 5800.76] that mount so if I do that then now we
[5798.60 - 5802.28] should see the result but before that
[5800.76 - 5804.24] let&#39;s understand another thing which is
[5802.28 - 5807.12] like the on remove method so this un
[5804.24 - 5809.68] remove method uh is kind of like a
[5807.12 - 5812.32] property of our create Shadow root UI
[5809.68 - 5814.36] where we must have to declare that and
[5812.32 - 5816.04] also we will get the root and this route
[5814.36 - 5819.04] is kind of like the route that we are
[5816.04 - 5822.24] returning from unmount and we must have
[5819.04 - 5825.44] to unmount the event uh or like unmount
[5822.24 - 5826.72] the Dom when we have finished our UI so
[5825.44 - 5828.84] it&#39;s really important because we are
[5826.72 - 5831.08] creating shadow shadow route so we must
[5828.84 - 5833.12] have to unmount it or we must have to
[5831.08 - 5836.24] remove it from our main element or like
[5833.12 - 5838.44] M Dom otherwise uh every time you open
[5836.24 - 5840.68] that particular uh UI or render the
[5838.44 - 5843.16] particular UI it will create multiple
[5840.68 - 5845.60] Shadow Dom so which is not efficient so
[5843.16 - 5848.76] you must have to use this function and
[5845.60 - 5851.64] as well as call the root do unmount and
[5848.76 - 5854.32] it will help you to actually remove that
[5851.64 - 5856.76] Dom element from the real Dom so in
[5854.32 - 5859.80] summary it will remove your Shadow Dom
[5856.76 - 5862.84] from the real Dom so before uh saving
[5859.80 - 5865.20] the file let&#39;s just add some style here
[5862.84 - 5867.88] like this so that we can identify that
[5865.20 - 5870.92] our UI is rendering or not so we have to
[5867.88 - 5873.72] save that and we have to refresh to see
[5870.92 - 5875.88] the UI is load loading or not and as you
[5873.72 - 5878.36] can see we can&#39;t see the UI that I am
[5875.88 - 5881.68] trying to load or render in the con in
[5878.36 - 5884.12] the web page of the Reddit subreddit so
[5881.68 - 5886.20] I&#39;m getting error on the console so it&#39;s
[5884.12 - 5889.60] saying that the content script content
[5886.20 - 5892.28] crashed on a startup eror post is not a
[5889.60 - 5895.56] valid custom element name it must be two
[5892.28 - 5897.80] word and Kebab casage and I believe this
[5895.56 - 5900.36] error is coming from the name we have
[5897.80 - 5902.72] declared here the shadow root name so it
[5900.36 - 5905.64] should not be with single word it should
[5902.72 - 5908.72] be two words and also it should be Kebab
[5905.64 - 5910.72] case so I could say it should be element
[5908.72 - 5912.48] I think post element so why is not
[5910.72 - 5915.60] taking one word because there are too
[5912.48 - 5919.24] many HTML element with single word like
[5915.60 - 5922.48] IMG like div so that&#39;s why it is not
[5919.24 - 5925.20] allowing you to put single name shadow
[5922.48 - 5928.72] room so make sure you put different or
[5925.20 - 5930.56] like multiple uh word to actually make a
[5928.72 - 5933.44] name for your Shadow root so let&#39;s save
[5930.56 - 5936.84] it and try to see and as you can see we
[5933.44 - 5939.96] we can see a UI that&#39;s actually rendered
[5936.84 - 5943.00] in our Reddit or like subreddit page so
[5939.96 - 5945.52] anytime I refresh the UI just actually
[5943.00 - 5947.16] appear so that&#39;s happening because uh
[5945.52 - 5949.48] whenever we are running the Chrome
[5947.16 - 5951.56] extension any website let&#39;s say right
[5949.48 - 5954.28] now we are in the JavaScript subreddit
[5951.56 - 5956.04] we should go to like Google so even I go
[5954.28 - 5958.20] to Google then you can see that it
[5956.04 - 5960.80] actually rendering that particular UI
[5958.20 - 5962.28] that we already added here and it&#39;s also
[5960.80 - 5964.52] rendering the background color you can
[5962.28 - 5966.84] see like background over so if I just
[5964.52 - 5970.00] make sure this color becomes like red
[5966.84 - 5972.72] then you can see the whole page becomes
[5970.00 - 5974.72] like red because I added this style like
[5972.72 - 5978.40] it should be position visibility should
[5974.72 - 5979.84] be visible and um it should be the 100%
[5978.40 - 5982.28] of height that&#39;s why it&#39;s taking the
[5979.84 - 5983.80] full height so now if your Chrome
[5982.28 - 5985.92] extension feature is like hiding
[5983.80 - 5987.92] anything from the UI then you can also
[5985.92 - 5990.36] apply this kind of stuff so that uh
[5987.92 - 5994.08] anybody use that extension you can just
[5990.36 - 5996.88] hide in your Desir section for any web
[5994.08 - 5999.60] page so that&#39;s how you can render the UI
[5996.88 - 6002.20] uh using react and let&#39;s just uh I think
[5999.60 - 6005.36] remove the red color I think the
[6002.20 - 6008.44] background overlay was good so now we
[6005.36 - 6011.20] have to grab those message like here we
[6008.44 - 6014.16] have post and we have comment so if I
[6011.20 - 6016.92] just simply uh copy the whole thing as a
[6014.16 - 6019.36] function let&#39;s say this particular
[6016.92 - 6022.08] things if I just make it like as a
[6019.36 - 6024.04] function and then if I just copy this
[6022.08 - 6026.76] function or like call this this function
[6024.04 - 6029.52] here and I mount the UI then now you can
[6026.76 - 6031.52] see the whole UI and because we have
[6029.52 - 6033.88] several signal let&#39;s say we have post we
[6031.52 - 6036.88] have comment so every time we get
[6033.88 - 6039.28] message then we have to create a div
[6036.88 - 6040.64] element then we have to add add that we
[6039.28 - 6042.08] have to append that into the UI
[6040.64 - 6043.92] container then we have to create the
[6042.08 - 6046.76] style for the shadow root and then we
[6043.92 - 6049.04] have to create the react root then we
[6046.76 - 6051.68] have to actually rendered or return the
[6049.04 - 6054.08] root and also the functionality for the
[6051.68 - 6056.60] unmount so we have to do all that stuff
[6054.08 - 6059.00] every time when we are trying to render
[6056.60 - 6061.52] any single UI and which seems really
[6059.00 - 6064.20] boring task and also we have to write
[6061.52 - 6067.60] repetitive code so why not we can just
[6064.20 - 6070.52] simply um make this particular section
[6067.60 - 6072.64] reusable let&#39;s say uh we can bring the
[6070.52 - 6074.52] whole code and that was the console log
[6072.64 - 6076.72] we can remove that and here we can
[6074.52 - 6079.16] create a function or something like that
[6076.72 - 6082.60] so let&#39;s see a function going to be like
[6079.16 - 6084.52] create UI and this will be sort of like
[6082.60 - 6087.56] an SN function because we are going to
[6084.52 - 6091.68] remove uh return like promise so we have
[6087.56 - 6094.08] to use like this so that&#39;s our function
[6091.68 - 6097.56] and whenever we call then we should get
[6094.08 - 6100.12] the whole in instance of our react app
[6097.56 - 6102.92] and also we can pass kind of like
[6100.12 - 6104.84] component uh as a parameter from the
[6102.92 - 6106.52] function so that we can directly get
[6104.84 - 6108.72] access of that component here and we can
[6106.52 - 6111.52] simply pass that component here so right
[6108.72 - 6113.64] now just uh add like the CTX which is
[6111.52 - 6116.04] the context by the way the context will
[6113.64 - 6118.04] come from the main function so we must
[6116.04 - 6119.80] have to pass that here and it is asking
[6118.04 - 6121.72] for type yeah we are going to refactor
[6119.80 - 6123.76] the whole component or like whole
[6121.72 - 6126.00] function later but for understanding
[6123.76 - 6129.00] purpose let&#39;s just uh ignore the error
[6126.00 - 6131.60] so uh we have to return the shadow root
[6129.00 - 6133.64] here so that&#39;s uh what I&#39;m doing here so
[6131.60 - 6136.00] returning the shadow root and I&#39;m just
[6133.64 - 6138.12] going to create the UI with that
[6136.00 - 6140.28] function so create UI function it will
[6138.12 - 6143.52] take the CTX and we&#39;re going to use like
[6140.28 - 6145.16] a wait and when we do so uh it&#39;s the
[6143.52 - 6147.12] runtime error so let&#39;s just make it like
[6145.16 - 6149.68] any for now we&#39;re going to give the type
[6147.12 - 6151.80] later so let&#39;s just see that it worked
[6149.68 - 6154.60] or not so if I refresh then you can see
[6151.80 - 6157.64] the UI is still working so if I just
[6154.60 - 6159.56] pass any argument let&#39;s say message or
[6157.64 - 6161.56] something like that so that&#39;s mean we
[6159.56 - 6164.08] should also get that message from here
[6161.56 - 6166.20] message and it will be like a string and
[6164.08 - 6169.00] the message will be rendered in our
[6166.20 - 6171.44] hello world beside that so like this
[6169.00 - 6173.64] that mean if I pass any message or any
[6171.44 - 6176.24] data in that function then it should
[6173.64 - 6178.72] return here even though if I just pass
[6176.24 - 6181.44] any single component then it should also
[6178.72 - 6183.60] return here like this so we can do that
[6181.44 - 6185.68] as well as so if I just render then you
[6183.60 - 6188.12] can see this is the message so let&#39;s
[6185.68 - 6190.80] just wrap our older code here so that
[6188.12 - 6193.84] our older code which was receiving those
[6190.80 - 6197.40] signal from our background JS so let&#39;s
[6193.84 - 6201.12] just copy our mounting code and add for
[6197.40 - 6202.96] post and another one for our comment and
[6201.12 - 6205.60] you can see that is giving us error so I
[6202.96 - 6208.40] will would make it like comment UI and
[6205.60 - 6211.20] it will be comment ui. Mount and uh you
[6208.40 - 6213.80] can see that when we got the post signal
[6211.20 - 6215.36] we are going to call it like post and
[6213.80 - 6217.84] when we get the comment signal we&#39;re
[6215.36 - 6220.48] going to pass the message like comment
[6217.84 - 6222.44] that mean we want to see different UI
[6220.48 - 6224.88] based on different signal or different
[6222.44 - 6226.28] message so let&#39;s see we can find that or
[6224.88 - 6228.52] not now you can see that we are not
[6226.28 - 6231.48] getting the uh UI rendered initially
[6228.52 - 6234.08] anymore because we just wrapped that UI
[6231.48 - 6235.84] with our messaging that&#39;s mean whenever
[6234.08 - 6237.64] we got that message we&#39;ll only render
[6235.84 - 6240.24] that UI otherwise we will not rendered
[6237.64 - 6241.96] and as you can see um we have to call
[6240.24 - 6244.12] the function that actually returning the
[6241.96 - 6246.16] shadow rout and then we have to call the
[6244.12 - 6249.28] ui. mount method to actually render the
[6246.16 - 6251.76] UI so let&#39;s now just try to call Post
[6249.28 - 6253.96] inside and as you can see the UI is
[6251.76 - 6256.40] showing and also the message is like
[6253.96 - 6258.76] post and as well as if I just refresh
[6256.40 - 6261.28] again uh if I just click comment inside
[6258.76 - 6264.36] then we can see the text is comment that
[6261.28 - 6267.08] mean every time we got some new message
[6264.36 - 6268.88] or something new event then we can
[6267.08 - 6271.52] directly render different kind of UI
[6268.88 - 6274.84] based on our need and every time we
[6271.52 - 6277.88] render UI we must have to uh create the
[6274.84 - 6281.04] isolated version to render the react
[6277.88 - 6283.08] application inside of our main Dom and
[6281.04 - 6286.04] also you can see that the TA C is
[6283.08 - 6288.72] working because we injected our main CSS
[6286.04 - 6291.52] from the popup which is using the TA and
[6288.72 - 6294.00] CSS and we also use CSS injection mode
[6291.52 - 6297.44] from the UI that mean we we can use all
[6294.00 - 6300.24] the T and CSS UI in the react app so now
[6297.44 - 6302.36] we have to make our create UI function
[6300.24 - 6305.28] kind of like a common wrapper function
[6302.36 - 6309.24] that always help us to create react UI
[6305.28 - 6311.40] and if we pass any component like this
[6309.24 - 6313.52] as like as we are doing for the data
[6311.40 - 6315.56] then we can just render any kind of UI
[6313.52 - 6318.12] and the functionality so that&#39;s what we
[6315.56 - 6320.72] are going to do next so now let&#39;s create
[6318.12 - 6322.72] a folder called common and in this
[6320.72 - 6325.44] folder I&#39;m going to add another file
[6322.72 - 6327.56] called index. TSX and this is the folder
[6325.44 - 6329.96] where I&#39;m going to add all the common
[6327.56 - 6332.84] component inside of it because for the
[6329.96 - 6334.96] content his script we have several UI
[6332.84 - 6336.80] model or components which will require
[6334.96 - 6339.04] some common component so that&#39;s why I
[6336.80 - 6341.92] need a common component folders I can
[6339.04 - 6344.52] name it components or uh whatever but I
[6341.92 - 6347.04] I think common is good so now what uh
[6344.52 - 6349.44] the plan is now the plan is I am going
[6347.04 - 6352.20] to to the whole portion of this
[6349.44 - 6355.12] particular code into that common /
[6352.20 - 6357.12] index. file and it will be kind of like
[6355.12 - 6359.56] a function that&#39;s going to help us to
[6357.12 - 6361.08] create react application or like um it&#39;s
[6359.56 - 6362.84] going to help us to create react
[6361.08 - 6366.04] components that&#39;s mean it&#39;s going to
[6362.84 - 6368.60] create react root app or like the UI
[6366.04 - 6371.60] with react so the function should be
[6368.60 - 6373.32] taken a component and the component will
[6371.60 - 6375.36] be rendered with the wrapper of the
[6373.32 - 6377.32] react root that mean whatever component
[6375.36 - 6379.36] I will pass it will render that uh
[6377.32 - 6382.00] component wrapped with react so that
[6379.36 - 6383.72] kind of a result I want to expecting
[6382.00 - 6385.84] from the function so let&#39;s build the
[6383.72 - 6388.48] function so that&#39;s is the function that
[6385.84 - 6390.88] I was thinking to build so I imported
[6388.48 - 6393.52] react react do and the toaster and the
[6390.88 - 6396.20] function I named is create content
[6393.52 - 6398.60] element this means that for our content
[6396.20 - 6400.20] descript we need to create the element
[6398.60 - 6402.76] so that&#39;s why I just name it like create
[6400.20 - 6405.52] content element and this will accept the
[6402.76 - 6407.56] UI container that we are getting from
[6405.52 - 6409.40] here like the UI wrapper or the
[6407.56 - 6411.40] container whatever you say and we have
[6409.40 - 6413.36] Shadow container and the shadow so we
[6411.40 - 6415.96] also have to pass them in inside of that
[6413.36 - 6417.96] function so and for our case I&#39;m just
[6415.96 - 6420.04] using two one is UA container and the
[6417.96 - 6422.44] shadow container these two so that&#39;s why
[6420.04 - 6425.04] I just took this props and the type is
[6422.44 - 6427.68] HTML element and then I passed a call
[6425.04 - 6431.00] back and inside that call back it will
[6427.68 - 6433.92] reord a root argument which is react
[6431.00 - 6436.04] dum. root that mean it is actually the
[6433.92 - 6437.84] root element from react when we are
[6436.04 - 6439.32] going to call the Callback function
[6437.84 - 6441.80] we&#39;re going to pass the root as a
[6439.32 - 6444.36] argument and it should return like a
[6441.80 - 6446.04] react node so so that&#39;s it and for the
[6444.36 - 6448.04] whole function it will return the whole
[6446.04 - 6450.16] root of the react app that&#39;s why I just
[6448.04 - 6452.88] added react dom. root and what we are
[6450.16 - 6455.00] doing here is the same thing that we
[6452.88 - 6456.96] have done here like we created a div
[6455.00 - 6459.96] element then we open that into our UI
[6456.96 - 6462.76] container then we added this style into
[6459.96 - 6466.24] our shadow container. style then we have
[6462.76 - 6468.56] created uh the react root app and then
[6466.24 - 6471.12] we return the root app so the same thing
[6468.56 - 6472.64] I&#39;m just uh copied from there and paste
[6471.12 - 6475.32] it here and that&#39;s the same thing right
[6472.64 - 6477.80] now we just simply returning the whole
[6475.32 - 6479.76] um root from the function and one thing
[6477.80 - 6482.28] we did as well as which is the call back
[6479.76 - 6484.92] as you can see in the react. streak mode
[6482.28 - 6487.40] we also assign the toaster as like as we
[6484.92 - 6489.80] did on our popup so if you go to the
[6487.40 - 6491.64] popup main. TSX then you can see we
[6489.80 - 6494.48] assigned the toaster component from
[6491.64 - 6496.64] react hot toast inside of react. streak
[6494.48 - 6498.68] mode that&#39;s mean we can now use the
[6496.64 - 6500.68] toaster throughout the whole popup the
[6498.68 - 6502.84] same thing I want to do here as well as
[6500.68 - 6504.68] so I want to access the toaster so
[6502.84 - 6506.92] that&#39;s why I need to add that toaster
[6504.68 - 6509.96] from react hot toast so I added that and
[6506.92 - 6512.04] for the call back it will be come from
[6509.96 - 6513.72] when we are going to use that and as a
[6512.04 - 6515.52] call back argument we&#39;re passing the
[6513.72 - 6517.00] route that we have already created so
[6515.52 - 6519.68] that we can access that route for
[6517.00 - 6522.60] unmount or Mount or whatever we are
[6519.68 - 6525.12] necessarily need later and this call
[6522.60 - 6527.32] back will actually return like react
[6525.12 - 6529.76] react node that&#39;s mean when we call this
[6527.32 - 6532.96] call back we can simply return any sort
[6529.76 - 6535.44] of component any sort of jsx uh there
[6532.96 - 6537.20] and when we do so then it will trigger
[6535.44 - 6539.76] from here and it will render that
[6537.20 - 6542.28] particular component so let&#39;s say uh if
[6539.76 - 6546.08] I just try to use this one now so let&#39;s
[6542.28 - 6547.76] just copy this one and try to remove the
[6546.08 - 6550.80] whole thing from here so one thing you
[6547.76 - 6553.80] might notice that I didn&#39;t add on remove
[6550.80 - 6555.32] and I didn&#39;t remove that from the root
[6553.80 - 6557.60] uh in here you can see that it&#39;s just
[6555.32 - 6560.56] returning the root that&#39;s mean we also
[6557.60 - 6562.36] have to handle the unmount event here on
[6560.56 - 6565.12] this function so we have to handle the
[6562.36 - 6566.64] whole thing so let&#39;s just um remove this
[6565.12 - 6569.28] particular portion because that&#39;s what
[6566.64 - 6571.36] we are actually refactoring here so the
[6569.28 - 6572.84] whole portion of creating react element
[6571.36 - 6575.28] we are going to refactor here you can
[6572.84 - 6577.20] see I just imported that particular
[6575.28 - 6578.48] component that we have created you can&#39;t
[6577.20 - 6581.72] say component it&#39;s kind of like a
[6578.48 - 6584.24] function that return react root and for
[6581.72 - 6586.36] using this one we have to just call that
[6584.24 - 6589.04] function and we have to pass what we got
[6586.36 - 6590.04] from on Mount so we got UI container
[6589.04 - 6592.08] then we have to pass the shadow
[6590.04 - 6594.60] container and in the call back we&#39;ll get
[6592.08 - 6597.52] the root as well as we can return any
[6594.60 - 6599.32] sort of component or uh you you can say
[6597.52 - 6602.00] like any sort of HTML that will work
[6599.32 - 6604.96] like jsx so for now I&#39;m just returning
[6602.00 - 6607.44] like H1 element to check that the
[6604.96 - 6610.08] function is working perfectly or not so
[6607.44 - 6613.04] let&#39;s just save it and try to check and
[6610.08 - 6615.20] that&#39;s the redit page and the subredit
[6613.04 - 6617.04] so let&#39;s just click the post and as you
[6615.20 - 6619.04] can see that I also added the message
[6617.04 - 6621.08] here so I should see the message as well
[6619.04 - 6624.08] as because I am passing the message from
[6621.08 - 6625.76] here so let&#39;s just try it out so if I
[6624.08 - 6628.44] just click then you can see this hello
[6625.76 - 6631.64] world post and let&#39;s just refresh and
[6628.44 - 6633.20] try to call like comment inside comment
[6631.64 - 6635.80] inside and then you can see that hello
[6633.20 - 6637.68] wel comment so that&#39;s how cool it is now
[6635.80 - 6640.88] we can just simply call this function we
[6637.68 - 6643.28] will pass this part to argument and in
[6640.88 - 6645.56] the call back we can pass any component
[6643.28 - 6648.44] that will work like charm so let&#39;s
[6645.56 - 6651.40] create a component here let&#39;s say header
[6648.44 - 6653.56] TSX and let&#39;s just make it like header
[6651.40 - 6656.76] or let&#39;s just design a header so that&#39;s
[6653.56 - 6659.92] the header component for our models and
[6656.76 - 6662.52] as you can see it will took three props
[6659.92 - 6664.60] one is like title count is going to be
[6662.52 - 6666.88] like how many post that will shown in
[6664.60 - 6670.68] the UI then we have the on remove and as
[6666.88 - 6672.84] you show earlier that when we open it we
[6670.68 - 6674.68] can just only see the whole thing now
[6672.84 - 6676.96] how we can close the whole thing like
[6674.68 - 6679.16] the design or like how we can unmount
[6676.96 - 6680.80] the UI so right now we have to just
[6679.16 - 6683.32] refresh every time to unmount the whole
[6680.80 - 6686.12] thing and which is not good we must need
[6683.32 - 6688.76] to be some sort of a UI or Handler that
[6686.12 - 6691.08] will handle to close the whole overlay
[6688.76 - 6693.04] or the UI from the page so we need some
[6691.08 - 6695.08] sort of close icon or something like
[6693.04 - 6697.84] that to close the whole thing and also
[6695.08 - 6699.60] we have to find out the logic how we can
[6697.84 - 6702.76] Implement that to actually close the
[6699.60 - 6704.24] whole thing so the functionality I am
[6702.76 - 6706.44] going to handle with the header
[6704.24 - 6708.04] component so as you can see we have a on
[6706.44 - 6710.36] remove function so this function will be
[6708.04 - 6713.40] triggered from our header and the header
[6710.36 - 6715.76] is simply just a H2 element where we are
[6713.40 - 6718.68] just putting the title and the count
[6715.76 - 6721.20] will be actually show or display the
[6718.68 - 6723.56] post count or the comment count and for
[6721.20 - 6726.12] we and we have a button that is kind of
[6723.56 - 6728.60] like a close model button and it will
[6726.12 - 6731.04] call the on remove function so that&#39;s it
[6728.60 - 6732.68] that&#39;s like a simple uh model or like
[6731.04 - 6735.00] simple model header or you can say
[6732.68 - 6737.64] simple header so now we can just simply
[6735.00 - 6740.32] use that in our application here so
[6737.64 - 6743.68] let&#39;s just um add that and we can just
[6740.32 - 6745.84] simply import that from uh our header
[6743.68 - 6748.32] and it will took all the propes so we
[6745.84 - 6750.48] can say post or we can just simply pass
[6748.32 - 6752.60] like message because we know the message
[6750.48 - 6754.96] is kind of like the value that we get
[6752.60 - 6757.04] and there will be a props called count
[6754.96 - 6759.04] so let&#39;s just make it like 10 and then
[6757.04 - 6761.04] we have to pass on remove so that&#39;s a
[6759.04 - 6764.52] function that will be triggered when we
[6761.04 - 6766.48] call that particular close icon so now
[6764.52 - 6769.56] we need a function that&#39;s going to
[6766.48 - 6772.24] actually close or remove the UI from the
[6769.56 - 6773.08] Dom so as you can see we already passed
[6772.24 - 6774.92] the
[6773.08 - 6776.68] call back and inside the call back we
[6774.92 - 6779.12] will get the root that&#39;s mean the react
[6776.68 - 6780.64] root so when we have the root then you
[6779.12 - 6782.96] can see in the UN remove there is
[6780.64 - 6784.72] already on remove function that we are
[6782.96 - 6787.16] assigning in the create Shadow root
[6784.72 - 6789.88] which is root. unmount so whenever you
[6787.16 - 6792.24] call this or root do unmount triggered
[6789.88 - 6794.56] the UI will be dismissed from the main D
[6792.24 - 6797.36] so that mean we need to make a function
[6794.56 - 6799.52] here to get the AIS of the root and make
[6797.36 - 6802.56] it unmount and that&#39;s the function that
[6799.52 - 6804.80] we need to actually work so I&#39;m going to
[6802.56 - 6806.96] assign that function and the function is
[6804.80 - 6808.52] here we are getting the root and if you
[6806.96 - 6809.84] go to the common component then you can
[6808.52 - 6812.24] see in the call back we&#39;re passing the
[6809.84 - 6814.88] root this is the root we have created
[6812.24 - 6817.20] and then we are rendering the whole uh
[6814.88 - 6818.64] root with react wrapper and then in the
[6817.20 - 6820.24] call back we are just simply passing the
[6818.64 - 6822.32] whole root so that we can access the
[6820.24 - 6824.64] root in anywhere when we are just
[6822.32 - 6826.64] calling this create content element and
[6824.64 - 6828.96] here we are accessing the root now we
[6826.64 - 6830.96] can just unmount on the run when we
[6828.96 - 6833.32] trigger this function as well as we can
[6830.96 - 6835.76] just uh remove those style that we
[6833.32 - 6838.04] already added which was like you can see
[6835.76 - 6840.04] that we have visibility visible and all
[6838.04 - 6842.76] that stuff we can also remove the whole
[6840.04 - 6845.12] style but I prefer to just hide the
[6842.76 - 6847.44] visibility for now uh because the root
[6845.12 - 6848.80] do unmount will unmount the whole
[6847.44 - 6851.48] component so you don&#39;t have to worry
[6848.80 - 6853.64] about that so if I save this now then we
[6851.48 - 6856.32] have a function common function that is
[6853.64 - 6859.04] going to trigger whenever we call it
[6856.32 - 6862.08] from the header and it will call root.
[6859.04 - 6864.44] unmount and it will hidden our UI so
[6862.08 - 6866.92] let&#39;s see from the UI end so if I click
[6864.44 - 6869.48] post inside then that&#39;s the header right
[6866.92 - 6872.32] now it&#39;s not looking well and if I try
[6869.48 - 6874.20] to click on that then you can see the UI
[6872.32 - 6876.00] disappear so that&#39;s the functionality I
[6874.20 - 6877.64] want to achieve as well as if I just
[6876.00 - 6879.44] click on the comment inside the same
[6877.64 - 6881.04] thing&#39;s happening I have the comment
[6879.44 - 6884.28] which is coming from the message and if
[6881.04 - 6886.48] I click the UI actually disappear so now
[6884.28 - 6889.08] you have understand how we can render
[6886.48 - 6891.12] element in the content script with react
[6889.08 - 6893.28] as well as we can also remove that
[6891.12 - 6894.80] element from the real d and for the
[6893.28 - 6897.00] summarize I can say that you have to
[6894.80 - 6900.04] create Shadow root UI which is going to
[6897.00 - 6901.84] help to render your UI in any web page
[6900.04 - 6904.44] and then you have to pass the Handler
[6901.84 - 6907.04] that&#39;s going to handle to remove the UI
[6904.44 - 6908.60] from the Dom so that&#39;s uh like the on
[6907.04 - 6911.08] remove function that&#39;s going to help us
[6908.60 - 6913.16] to achieve the functionality to remove
[6911.08 - 6915.72] uh the whole thing from the UI and the
[6913.16 - 6917.48] function we are using is kind of this
[6915.72 - 6920.20] one create content element now we will
[6917.48 - 6922.80] just call this function and we will pass
[6920.20 - 6925.24] any component react component in inside
[6922.80 - 6927.68] of that call back to actually get our
[6925.24 - 6930.72] desired result so now let&#39;s work with
[6927.68 - 6932.76] our main UI so as I showed in the demo
[6930.72 - 6934.44] section that we have two particular
[6932.76 - 6936.36] model one is for the comment and another
[6934.44 - 6938.36] is for the post so let&#39;s start with the
[6936.36 - 6940.32] post one so I&#39;m going to create another
[6938.36 - 6942.32] folder called post and inside that
[6940.32 - 6945.84] folder I&#39;m going to create another file
[6942.32 - 6947.92] called index. TSX and inside that file
[6945.84 - 6950.04] is going to be the component for the
[6947.92 - 6951.80] Post model and we already have created
[6950.04 - 6954.20] the header so we can just reuse this
[6951.80 - 6956.96] header in our post as well as the
[6954.20 - 6959.52] comment so that&#39;s our post model you can
[6956.96 - 6961.72] see we are using the header and also we
[6959.52 - 6964.16] are using use from data from where we&#39;re
[6961.72 - 6966.64] using it from our hooks that we are
[6964.16 - 6968.56] using in the popup so this is the same
[6966.64 - 6970.60] hook that actually give us the API key
[6968.56 - 6972.68] and the Endo from the chrom storage and
[6970.60 - 6975.12] why we using it because in this model we
[6972.68 - 6977.20] are going to call the API so we need
[6975.12 - 6980.48] those information first I added two
[6977.20 - 6983.32] props for this components one is post
[6980.48 - 6985.28] and another is UN removed that&#39;s I can
[6983.32 - 6987.80] perform the on remove functionality from
[6985.28 - 6989.64] the post and the post is actually all
[6987.80 - 6991.76] the post list data and you can see the
[6989.64 - 6993.72] data is kind of like this so right now
[6991.76 - 6995.96] I&#39;m just added that by I didn&#39;t and pass
[6993.72 - 6997.80] the data from the parent child I&#39;m going
[6995.96 - 6999.72] to do that later but for understanding
[6997.80 - 7001.48] you can understand like this so this is
[6999.72 - 7004.24] our data set where we have the ID we
[7001.48 - 7006.20] have the tag we have uh kind of title
[7004.24 - 7008.16] and the description score and comment so
[7006.20 - 7011.20] these are the field that I use to render
[7008.16 - 7013.04] the UI and I also added a state for
[7011.20 - 7014.64] managing the low loading so we&#39;re going
[7013.04 - 7017.64] to make it functional when we&#39;re going
[7014.64 - 7019.48] to call the API and uh this is for the
[7017.64 - 7021.32] form data and we are also logging the
[7019.48 - 7023.52] form data to check that our data is
[7021.32 - 7026.40] coming perfectly or not so that&#39;s the
[7023.52 - 7028.48] data and that&#39;s the UI where I just uh
[7026.40 - 7031.20] imported the header and I just passed
[7028.48 - 7033.40] the title and the count as well as uh
[7031.20 - 7035.88] the on remove so I can just simply say
[7033.40 - 7038.20] post data. count that&#39;s mean uh this
[7035.88 - 7040.56] count will be from our post data so it&#39;s
[7038.20 - 7042.40] going to be like post data. length so
[7040.56 - 7044.68] that&#39;s it for the header and is going to
[7042.40 - 7047.04] render our header and I also added like
[7044.68 - 7050.04] a background of dark as well as the
[7047.04 - 7052.48] width becomes 700 pixel you saw that
[7050.04 - 7054.40] arlier my header was like too small and
[7052.48 - 7056.44] the UI was not good so that&#39;s why I
[7054.40 - 7058.80] added the background color and the weat
[7056.44 - 7061.36] and also I make a card for shaping the
[7058.80 - 7064.52] whole model type UI and we already have
[7061.36 - 7066.52] the uh black overlay for the model um in
[7064.52 - 7068.08] here in the wrapper that&#39;s mean whenever
[7066.52 - 7071.24] we call this create content element it&#39;s
[7068.08 - 7073.32] going to give us the wrapper black
[7071.24 - 7075.96] overlay of that model so we don&#39;t have
[7073.32 - 7078.12] to worry about that so so that&#39;s why I
[7075.96 - 7079.84] just need to just simply render the UI
[7078.12 - 7081.80] that what I want to render so that&#39;s
[7079.84 - 7084.04] like a simple card where we just
[7081.80 - 7086.36] rendered all the other stuff that we
[7084.04 - 7089.24] need and this portion is where we are
[7086.36 - 7092.24] just rendering our post data this array
[7089.24 - 7095.36] so I just map through it and there is a
[7092.24 - 7097.84] there is a wrapper which is have some
[7095.36 - 7100.84] Styles you can see it&#39;s like a card type
[7097.84 - 7103.24] rapper and then I am showing the tag
[7100.84 - 7105.08] then the title with a H three tag then I
[7103.24 - 7107.88] have the description as well as the
[7105.08 - 7110.72] score and the comments so let&#39;s try to
[7107.88 - 7112.72] uh use this post model so copy this one
[7110.72 - 7116.48] and I&#39;m going to paste it in the create
[7112.72 - 7118.84] UI because we are using our create
[7116.48 - 7121.84] content element now we can just simply
[7118.84 - 7124.12] pass that particular uh component from
[7121.84 - 7126.36] here so I&#39;m going to pass from here and
[7124.12 - 7129.16] it will be post and we don&#39;t need Title
[7126.36 - 7131.48] we only need on remove and the post so
[7129.16 - 7133.56] for the post I&#39;m going to pass like an
[7131.48 - 7136.36] empty right now because we are just
[7133.56 - 7138.36] making or using a demo post data later
[7136.36 - 7140.20] we&#39;re going to make it Dynamic so that&#39;s
[7138.36 - 7142.60] why right now it&#39;s like an empty post
[7140.20 - 7145.00] and we are using the same function for
[7142.60 - 7148.24] handling the on remove so let&#39;s try to
[7145.00 - 7150.92] check what&#39;s actually the UI so here if
[7148.24 - 7153.44] I just right click and then try to click
[7150.92 - 7156.20] on post inside then you can see that&#39;s
[7153.44 - 7158.56] the exact UI that we are looking for it
[7156.20 - 7161.00] has the title and the account and the
[7158.56 - 7163.16] close icon and when I click that icon it
[7161.00 - 7165.72] should disappear and and it&#39;s gone and
[7163.16 - 7168.04] even I CL click on the comment it&#39;s also
[7165.72 - 7169.84] showing the same model because I am
[7168.04 - 7172.36] rendering the same thing and the UI is
[7169.84 - 7175.52] kind of like uh the same this is the tag
[7172.36 - 7177.04] this is the title and uh this is um the
[7175.52 - 7178.92] description and the score and the
[7177.04 - 7181.16] comments so the design is kind of like
[7178.92 - 7182.80] dark mode I like the dark style uh
[7181.16 - 7186.12] that&#39;s why I just uh designed the whole
[7182.80 - 7189.44] thing with dark design so that&#39;s it now
[7186.12 - 7192.84] our task is to per create the model for
[7189.44 - 7195.20] both for one for post another for for
[7192.84 - 7197.20] our comment as well as we need a search
[7195.20 - 7199.04] input field some sort of like that where
[7197.20 - 7202.80] we can just search and we can also
[7199.04 - 7205.12] perform our API um fetching logic there
[7202.80 - 7207.60] so I&#39;m going to add that later now let&#39;s
[7205.12 - 7209.20] just create another component for our
[7207.60 - 7211.00] comment right now we are just showing
[7209.20 - 7213.36] the same component in the comment as
[7211.00 - 7216.44] well as so let&#39;s create another one for
[7213.36 - 7218.52] comment so we have to create a comment
[7216.44 - 7221.52] folder and it&#39;s going to contain the
[7218.52 - 7224.48] comment code and mostly I will be only
[7221.52 - 7227.36] need one component not multiple so I
[7224.48 - 7229.76] think folder wise like folder convention
[7227.36 - 7232.16] is good if I need to add later more
[7229.76 - 7234.52] component then I can just add there so
[7232.16 - 7237.84] it&#39;s kind of will be the same but need
[7234.52 - 7240.76] some changes let&#39;s say so the change is
[7237.84 - 7242.76] I rename it to comment model and also it
[7240.76 - 7245.08] will not only took the comment list but
[7242.76 - 7247.12] also require the post because we also
[7245.08 - 7250.08] want to need the post data to actually
[7247.12 - 7253.24] perform better query from the llm model
[7250.08 - 7255.72] and also I imported the same use from
[7253.24 - 7258.60] data for actually getting those API
[7255.72 - 7260.92] credential and then I added the loading
[7258.60 - 7262.56] as like as the post and the same thing
[7260.92 - 7264.32] for the on remove and the other stuff
[7262.56 - 7266.40] and as well as I have the data for
[7264.32 - 7268.24] comment data you can see that we have
[7266.40 - 7270.36] the author name we have the comment and
[7268.24 - 7271.84] we have the score that uh what is the
[7270.36 - 7273.52] score of that particular comment so
[7271.84 - 7275.40] these are the fields so later right now
[7273.52 - 7277.16] you can see that I&#39;m just using any so
[7275.40 - 7278.72] I&#39;m going to decare the type as well as
[7277.16 - 7280.60] I&#39;m going to complete the whole thing so
[7278.72 - 7283.28] you&#39;re going to see how I will do that
[7280.60 - 7285.52] and for that UI is kind of like same as
[7283.28 - 7288.00] like the post the same model we can make
[7285.52 - 7290.04] it like a common wrapper like uh for
[7288.00 - 7292.20] comment and post you can see that same
[7290.04 - 7294.88] style we&#39;re using kind of here but for
[7292.20 - 7297.88] now I&#39;m just uh keep as it is simple for
[7294.88 - 7300.96] one component and uh the same UI like
[7297.88 - 7303.32] the header and it&#39;s the title comments
[7300.96 - 7305.92] and the count is like comments counts we
[7303.32 - 7307.48] can use like comment data. length for
[7305.92 - 7310.04] better visibility and the on remove
[7307.48 - 7312.60] function and I&#39;m going to explain it
[7310.04 - 7314.96] later you just need to understand this
[7312.60 - 7317.04] one first that is like the common data
[7314.96 - 7319.20] I&#39;m just mapping through uh the whole
[7317.04 - 7321.56] thing like the data itself this is kind
[7319.20 - 7323.96] of like the same card that I used uh in
[7321.56 - 7325.96] the post so if I want I can also
[7323.96 - 7328.40] refactor this part for now let&#39;s just
[7325.96 - 7330.00] make it simple to straightforward and
[7328.40 - 7333.28] now you can see that we are using
[7330.00 - 7335.92] markdown so as I showed you in the demo
[7333.28 - 7337.84] video that we have to render markdown
[7335.92 - 7339.68] text as well as because when in the
[7337.84 - 7341.04] comment we have a lot of comment now we
[7339.68 - 7342.72] want to ask something for the comment
[7341.04 - 7344.80] and we want to get the result or the
[7342.72 - 7347.00] response so the result or the response
[7344.80 - 7349.12] we will get from the llm is kind of like
[7347.00 - 7351.20] in markdown format so we have to render
[7349.12 - 7353.00] that markdown as well as so that&#39;s why
[7351.20 - 7354.84] I&#39;m using a package called react
[7353.00 - 7357.64] markdown so that&#39;s the package react
[7354.84 - 7360.04] markdown and this is really a good
[7357.64 - 7363.08] package to actually showcase your
[7360.04 - 7365.72] markdown text into a readable format as
[7363.08 - 7368.04] like as we saw in GPT Gemini uh
[7365.72 - 7371.48] everywhere so we have to install that
[7368.04 - 7375.16] first so I&#39;m going to use pnpm install
[7371.48 - 7377.28] react markdown great so now you can see
[7375.16 - 7379.60] in this react markdown package we have
[7377.28 - 7381.20] the main instance and with the main
[7379.60 - 7383.36] instance is kind of like a component
[7381.20 - 7385.00] inside of that instant you can pass any
[7383.36 - 7387.24] markdown string so right now the
[7385.00 - 7389.12] markdown string is kind of like this so
[7387.24 - 7390.72] I just hardcoded the whole thing later
[7389.12 - 7392.52] we&#39;re going to make it kind of dynamic
[7390.72 - 7394.36] so that whenever we got the response we
[7392.52 - 7398.52] are going to render that particular
[7394.36 - 7400.48] markdown in here so that&#39;s all about the
[7398.52 - 7403.24] comment model and you can see that the
[7400.48 - 7405.00] loading state is also wrapped with the
[7403.24 - 7407.24] value and we have the form data we&#39;re
[7405.00 - 7410.44] going to use all of them so let&#39;s just
[7407.24 - 7412.76] try to render this one and as you can
[7410.44 - 7414.92] see we have two component now so now I
[7412.76 - 7416.84] can just simply use kind of like a
[7414.92 - 7419.48] condition to render different component
[7416.84 - 7422.16] for each click menu click so because we
[7419.48 - 7424.44] have the message so what we can do we
[7422.16 - 7426.52] can make it like a kind of like a type
[7424.44 - 7429.48] so the type going to be like post and
[7426.52 - 7431.84] the comment so then I think that will be
[7429.48 - 7434.12] better we to actually render multiple
[7431.84 - 7436.84] component so let&#39;s make it yeah so
[7434.12 - 7439.20] that&#39;s our code so what I did I added
[7436.84 - 7441.64] the type as a argument and the type will
[7439.20 - 7443.60] be either post or comment and based on
[7441.64 - 7445.64] that we can just render different
[7443.60 - 7447.76] component and I also use the switch
[7445.64 - 7449.80] statement as like as we did here so
[7447.76 - 7451.44] whenever we got the signal like post or
[7449.80 - 7454.60] comment we&#39;re just calling this create
[7451.44 - 7456.12] UI and we are passing our type and also
[7454.60 - 7457.76] we have to pass the type from here right
[7456.12 - 7459.64] now we are just passing a different
[7457.76 - 7461.52] value you can see that it&#39;s like showing
[7459.64 - 7463.52] post but the real value is something
[7461.52 - 7465.84] else so we have to pass like this and
[7463.52 - 7468.32] you can see the suggestion as well as so
[7465.84 - 7470.64] now it&#39;s working so we have to call this
[7468.32 - 7472.64] function and then we have to pass the
[7470.64 - 7474.92] type and the CTX that we are getting
[7472.64 - 7477.64] from the main and also I added the type
[7474.92 - 7480.48] for the CTX so for getting the type you
[7477.64 - 7483.72] have to just import it from wxt client
[7480.48 - 7485.56] so this is the package where it actually
[7483.72 - 7488.48] exported this type so we need this type
[7485.56 - 7491.40] to specify here so that we can use this
[7488.48 - 7494.00] CTX anywhere and as you can see this is
[7491.40 - 7496.00] the type I&#39;m getting now I added the
[7494.00 - 7497.44] type for the switch case so when we get
[7496.00 - 7500.16] the type called post then we&#39;re going to
[7497.44 - 7502.00] render the post and it will render our
[7500.16 - 7504.20] post component same will go for the
[7502.00 - 7507.68] comment so let&#39;s just import our comment
[7504.20 - 7509.76] model and that&#39;s our model and when we
[7507.68 - 7512.24] got the type called comment then it will
[7509.76 - 7514.08] render the comment model including the
[7512.24 - 7515.76] post data and the comments data and the
[7514.08 - 7518.24] on remove function and we are going to
[7515.76 - 7521.08] add those data dynamic in the next so
[7518.24 - 7523.12] let&#39;s just see the UI is working or not
[7521.08 - 7525.84] and let&#39;s just remove the unnecessary
[7523.12 - 7527.80] input so that&#39;s uh what it is and in the
[7525.84 - 7530.28] default we&#39;re going to ret return like a
[7527.80 - 7533.04] simple string so let&#39;s just see from the
[7530.28 - 7535.44] UI so if I just right click and try to
[7533.04 - 7537.72] open the posting side then you can see
[7535.44 - 7540.16] the posting Sid which was already
[7537.72 - 7542.88] implemented now let&#39;s look into the
[7540.16 - 7544.68] comment and boom you can see that all
[7542.88 - 7547.72] the comment list here uh this is the
[7544.68 - 7550.16] comment this is the author name and the
[7547.72 - 7552.04] same things all the list it&#39;s showing
[7550.16 - 7554.36] our Statics data and and this is the
[7552.04 - 7556.76] markdown that you can see that uh the
[7554.36 - 7558.40] markdown format so the whole thing is
[7556.76 - 7563.12] not working here you can see that I was
[7558.40 - 7565.16] trying to add like a H1 or H2 format but
[7563.12 - 7566.84] it&#39;s not showing that thing so let&#39;s
[7565.16 - 7569.16] just see what&#39;s happening here in the
[7566.84 - 7571.04] markdown so I have to go to the comment
[7569.16 - 7574.48] and we&#39;re passing kind of like any
[7571.04 - 7578.44] string so I use backs slash so I have to
[7574.48 - 7580.84] use the string operator here so this one
[7578.44 - 7583.64] I think it will not work so let&#39;s just
[7580.84 - 7585.76] try with this is so it&#39;s kind of like uh
[7583.64 - 7587.92] you need sort of a string otherwise it&#39;s
[7585.76 - 7590.00] not going to work so that&#39;s why it&#39;s not
[7587.92 - 7591.72] working so make let&#39;s just make it one
[7590.00 - 7594.56] line but uh when we are going to make it
[7591.72 - 7596.84] Dynamic then it will be working because
[7594.56 - 7599.36] uh we are going to take the same
[7596.84 - 7602.08] response from the API and it will be in
[7599.36 - 7604.68] the right format so let&#39;s just now see
[7602.08 - 7606.48] it&#39;s working or not so comment inside
[7604.68 - 7609.32] then you can see the tag from the
[7606.48 - 7611.20] markdown is gone but the visualizations
[7609.32 - 7614.44] we&#39;re not getting the H1 or we&#39;re not
[7611.20 - 7616.84] getting uh kind of like the list for
[7614.44 - 7618.56] what I actually added in the markdown so
[7616.84 - 7620.16] yes we are going to complete the whole
[7618.56 - 7622.44] thing when we&#39;re going to make it
[7620.16 - 7624.80] Dynamic so for now let&#39;s just keep it
[7622.44 - 7628.16] simple so that&#39;s how I can just simply
[7624.80 - 7631.60] render different UI based on our type
[7628.16 - 7634.60] and also let&#39;s just see our form data is
[7631.60 - 7637.36] coming or not because I already used the
[7634.60 - 7639.56] use from data hook that we used in the
[7637.36 - 7642.84] popup so we have to make sure that it
[7639.56 - 7646.40] syns sync well together so so I have to
[7642.84 - 7648.80] open the inspect menu and then I have to
[7646.40 - 7650.72] open the console and then let&#39;s just try
[7648.80 - 7653.12] with the post inside and then you can
[7650.72 - 7654.72] see we have the form data it&#39;s just
[7653.12 - 7656.84] showing so that&#39;s fine that&#39;s mean we
[7654.72 - 7659.88] are getting the data so let&#39;s open the
[7656.84 - 7662.12] popup and insert some of the data so I&#39;m
[7659.88 - 7665.04] going to insert this URL so that&#39;s the
[7662.12 - 7667.88] URL and let&#39;s just put any key and let&#39;s
[7665.04 - 7671.08] just save you can see the toast and now
[7667.88 - 7673.24] if I just try to clear the console let&#39;s
[7671.08 - 7676.08] just zoom in a little bit and try to
[7673.24 - 7678.80] open post inside then you can see it was
[7676.08 - 7680.60] give initially empty but later it give
[7678.80 - 7682.76] the real data that&#39;s mean it took some
[7680.60 - 7685.00] time to fetch the data from the storage
[7682.76 - 7687.20] so because we are using use effect so
[7685.00 - 7688.96] initially we got like empty data then we
[7687.20 - 7691.28] fetch it from the storage then we get
[7688.96 - 7693.52] the data and then uh we are getting it
[7691.28 - 7695.20] in our post component so now when we are
[7693.52 - 7698.32] going to call the API we can now just
[7695.20 - 7700.88] simply use that data to pass through the
[7698.32 - 7704.52] API so that we can just uh call the
[7700.88 - 7707.04] valid API with the valid credential and
[7704.52 - 7708.96] I already added the same thing in a
[7707.04 - 7712.12] comment model as well as so now if I
[7708.96 - 7715.72] just try to console that here I can also
[7712.12 - 7719.20] do that so so that&#39;s it about the UI
[7715.72 - 7721.92] from our model like the post and the
[7719.20 - 7724.08] comment so now if I just make it little
[7721.92 - 7727.04] further right now we are showing all the
[7724.08 - 7729.88] static data but what if we will show all
[7727.04 - 7732.84] the post because we already need all
[7729.88 - 7734.88] these post as you show My Demo section
[7732.84 - 7737.92] of this video where we click on this
[7734.88 - 7740.40] post menu and we saw all the post that
[7737.92 - 7743.32] we already fetch so let&#39;s say if I fetch
[7740.40 - 7745.80] 200 post or 20 post then I should see
[7743.32 - 7747.80] all the 20 post in this list that&#39;s mean
[7745.80 - 7749.88] we have to fetch or we have to scrap
[7747.80 - 7752.08] those post from the real Dom and then we
[7749.88 - 7754.96] have to make the data set and then we
[7752.08 - 7758.80] have to render those post into this
[7754.96 - 7760.96] particular here and as you saw that our
[7758.80 - 7762.76] component is already built with handling
[7760.96 - 7764.76] the whole thing we are passing the post
[7762.76 - 7766.56] comments so in this post component we
[7764.76 - 7768.24] are passing the post that mean we have
[7766.56 - 7770.28] to create the type we have to create the
[7768.24 - 7773.08] function that&#39;s actually going to scrap
[7770.28 - 7775.00] or fetch the whole data from the real
[7773.08 - 7777.80] Dom and then it&#39;s going to create the
[7775.00 - 7779.80] list so let&#39;s create the function so I&#39;m
[7777.80 - 7782.20] going to create a folder here called
[7779.80 - 7784.68] Script and why it&#39;s called Script
[7782.20 - 7786.96] because these are related to script so
[7784.68 - 7788.92] when we are going to add or fetch all
[7786.96 - 7791.76] the post from the real D so it&#39;s kind of
[7788.92 - 7793.72] like a script that actually work like to
[7791.76 - 7795.52] fetch all the data from the real Dom so
[7793.72 - 7797.24] that&#39;s why I just going to create a
[7795.52 - 7800.04] folder called Script and inside that
[7797.24 - 7802.60] folder we have to create a file called
[7800.04 - 7804.64] scraptrap dots file will actually
[7802.60 - 7807.04] contain all the related code that&#39;s
[7804.64 - 7810.44] going to help us to scrap the whole page
[7807.04 - 7812.48] and make the array for our data set so
[7810.44 - 7816.32] before that let&#39;s just create the type
[7812.48 - 7819.20] so we need a type for type interface for
[7816.32 - 7822.12] post so I just name it I poost that mean
[7819.20 - 7824.92] inter interface post and it will have
[7822.12 - 7828.80] title link comments tag description
[7824.92 - 7831.00] score ID as the same we are using in our
[7828.80 - 7832.96] post component you can see in the post
[7831.00 - 7835.88] component we have the post data now we
[7832.96 - 7838.16] can simply use this uh particular type
[7835.88 - 7840.60] here and as well as it will go for the
[7838.16 - 7843.68] same for the comment we need author
[7840.60 - 7846.56] comment uh Parma link uh so we need link
[7843.68 - 7850.32] as well as because when we will show the
[7846.56 - 7852.68] UI from our list we also want to see the
[7850.32 - 7855.40] post because otherwise it will not make
[7852.68 - 7857.68] sense we can also see all these uh post
[7855.40 - 7860.48] here but we when we click it will take
[7857.68 - 7862.60] us to the post details that&#39;s mean we
[7860.48 - 7865.40] also need kind of same behavior so that
[7862.60 - 7868.32] when we filter all the post and we have
[7865.40 - 7871.24] to an option to actually click on that
[7868.32 - 7873.08] particular post to open that in new tab
[7871.24 - 7875.36] or maybe this current tab I think new
[7873.08 - 7877.16] tab is better the same thing will also
[7875.36 - 7879.80] happen with the comment so when we will
[7877.16 - 7882.04] see all the comment list so we also have
[7879.80 - 7883.68] to go to the details of that comment so
[7882.04 - 7885.32] when we click on that particular comment
[7883.68 - 7887.20] link then it will take us to that
[7885.32 - 7890.08] particular reply or the comment so
[7887.20 - 7892.08] that&#39;s why we need the type for link and
[7890.08 - 7895.28] we&#39;re going to use that frequently so
[7892.08 - 7897.16] that&#39;s our type for both of the model
[7895.28 - 7898.88] and now let&#39;s just create those function
[7897.16 - 7901.04] that&#39;s going to help us to scrap so I&#39;m
[7898.88 - 7903.64] going to create a function that&#39;s going
[7901.04 - 7905.80] to help to fetch or retrieve all the
[7903.64 - 7907.80] posts that&#39;s mean whenever I click on
[7905.80 - 7911.80] this particular post inside it&#39;s going
[7907.80 - 7914.40] to fetch or scrap all this post data and
[7911.80 - 7917.16] it&#39;s going to create the data set like
[7914.40 - 7919.40] this so kind of like I poost array that
[7917.16 - 7922.00] mean I need a data set of this object of
[7919.40 - 7924.84] array so that&#39;s our function I will name
[7922.00 - 7927.48] it extract Reddit post from Dom so
[7924.84 - 7930.32] that&#39;s our function name and this is a
[7927.48 - 7932.72] lots of logic but first let&#39;s understand
[7930.32 - 7936.16] how we can actually retrieve all those
[7932.72 - 7938.56] post so if you inspect the and open the
[7936.16 - 7941.44] dep tools and if you just click on this
[7938.56 - 7944.04] particular icon which is for select or
[7941.44 - 7946.52] monitoring so click on that and it will
[7944.04 - 7949.60] become like blue and then when you hover
[7946.52 - 7951.68] over any of the element of like any of
[7949.60 - 7953.96] the post let&#39;s say for this one if I
[7951.68 - 7956.96] just click this one then you can see we
[7953.96 - 7959.04] have the TCH in the real Dom so it&#39;s
[7956.96 - 7961.20] like an aack which actually helping when
[7959.04 - 7963.28] we click on that it actually navigate to
[7961.20 - 7965.52] the details so I think uh the we need to
[7963.28 - 7966.96] find the wrapper of this particular post
[7965.52 - 7969.48] we have to find all the rapper that&#39;s
[7966.96 - 7970.64] mean uh rapper means the main component
[7969.48 - 7973.16] that&#39;s actually holding the whole
[7970.64 - 7975.48] component so if I just go a little bit
[7973.16 - 7978.48] up then this one is the main component
[7975.48 - 7981.80] so it&#39;s called subredit post so if I
[7978.48 - 7984.84] just um go over here you can see that&#39;s
[7981.80 - 7987.44] the subed post and if I go a little bit
[7984.84 - 7989.92] up then you can see there is a uh Tech
[7987.44 - 7993.28] call article so I believe this is the
[7989.92 - 7995.24] main wrapper of the post so if I just
[7993.28 - 7997.64] hover over on this thing you can see the
[7995.24 - 7999.36] whole hover also appearing here so when
[7997.64 - 8001.76] I hover this article it&#39;s showing this
[7999.36 - 8004.80] when I hover this article showing this
[8001.76 - 8007.20] post you can see so that&#39;s mean if I
[8004.80 - 8009.60] just uh took this element like uh copy
[8007.20 - 8012.28] this HTML element and then paste it
[8009.60 - 8014.64] anywhere then I will see the same uh or
[8012.28 - 8016.84] like the whole HTML or the all of its
[8014.64 - 8019.64] content inside of this thing that&#39;s mean
[8016.84 - 8023.56] if I just say in the consoles like let&#39;s
[8019.64 - 8026.56] say document dot query selector query
[8023.56 - 8028.96] selector all not query selector we need
[8026.56 - 8032.16] the method like all it&#39;s like the simple
[8028.96 - 8034.56] vanes method so we have to call the
[8032.16 - 8037.92] article tag so what I&#39;m going to do is
[8034.56 - 8041.56] just name it article and as you can see
[8037.92 - 8043.44] it&#39;s showing us 75 notes and all of is
[8041.56 - 8045.84] actually the post so if I just click
[8043.44 - 8049.24] like this so these are all the post so I
[8045.84 - 8052.32] can also uh go one by one so you can see
[8049.24 - 8055.12] these are all the note that it has so if
[8052.32 - 8057.52] I just say document cre selector all
[8055.12 - 8059.80] article then I will get all the article
[8057.52 - 8062.36] that&#39;s mean all the post HTML so that&#39;s
[8059.80 - 8064.36] what actually I did on the function and
[8062.36 - 8066.96] also you can see that uh in the article
[8064.36 - 8070.20] so if I just hover overs again in the
[8066.96 - 8072.40] article we have another wrapper which is
[8070.20 - 8074.28] called subreddit post you can see that&#39;s
[8072.40 - 8076.28] another wrapper element so we have
[8074.28 - 8078.56] article is the wrapper element to
[8076.28 - 8080.48] identify the post then we have subreddit
[8078.56 - 8082.96] Das post that&#39;s another component or
[8080.48 - 8084.80] like element that actually holding the
[8082.96 - 8088.20] whole component data set like you can
[8084.80 - 8089.76] see that uh the score here as well as
[8088.20 - 8091.80] that you can see the score attribute
[8089.76 - 8094.40] which is holding the score you can see
[8091.80 - 8096.20] the author name you can see the icon you
[8094.40 - 8098.80] can see the subreddit name a lot of
[8096.20 - 8102.40] stuff you can find here so that&#39;s really
[8098.80 - 8104.20] important to identify our main selector
[8102.40 - 8106.52] and which is subreddit so we have to
[8104.20 - 8109.08] somehow get all the list of subreddit
[8106.52 - 8111.92] from the Dom so if I just simply say
[8109.08 - 8115.00] article instead we can just say what was
[8111.92 - 8117.68] it I think uh it was subredit post so we
[8115.00 - 8120.52] have to copy this name and then we have
[8117.68 - 8122.88] to paste that here and if we just enter
[8120.52 - 8124.88] Then you can see we are getting all the
[8122.88 - 8127.12] sublist as well as as like as the
[8124.88 - 8130.64] article component and it&#39;s also giving
[8127.12 - 8133.16] us 75 you can see 75 note here the same
[8130.64 - 8135.44] was we got like in the article 75 note
[8133.16 - 8138.80] that&#39;s mean we are targeting our main
[8135.44 - 8141.32] post and subredit post uh is kind of sh
[8138.80 - 8143.48] redit post is the tag that we need to
[8141.32 - 8145.00] Target and when we will Target this
[8143.48 - 8147.20] particular element we&#39;ll get the whole
[8145.00 - 8148.76] post data as well as all the stuff so
[8147.20 - 8152.36] with this knowledge you can actually
[8148.76 - 8154.84] play with any uh website web page where
[8152.36 - 8157.04] uh they have the element where they have
[8154.84 - 8159.48] some dedicated tag so we can just simply
[8157.04 - 8161.52] play around with all of them so the same
[8159.48 - 8163.48] thing I just applied here so this
[8161.52 - 8165.32] function you can see document. query
[8163.48 - 8167.84] selector all we&#39;re just selecting all
[8165.32 - 8170.56] the sh RIT post element in the post
[8167.84 - 8174.56] element variable and now uh we are just
[8170.56 - 8176.52] creating a variable with our type so
[8174.56 - 8179.04] here I&#39;m going to make the data set and
[8176.52 - 8181.24] I&#39;m going to push those data into this
[8179.04 - 8185.36] particular array so here you can can see
[8181.24 - 8187.32] we already got 75 U post list so what I
[8185.36 - 8190.28] can do now I can just Loop through all
[8187.32 - 8192.60] the note and when we Loop through we can
[8190.28 - 8195.76] just retrieve all those information so
[8192.60 - 8198.00] post elements is all the node and we are
[8195.76 - 8200.24] just using for each and we will get each
[8198.00 - 8202.80] node and also the key for the indexing
[8200.24 - 8205.12] we can use this key for the ID and I
[8202.80 - 8207.96] have created variable for title then
[8205.12 - 8209.96] link then uh if I need the full link I
[8207.96 - 8212.64] have created that comment count tag
[8209.96 - 8215.68] element uh and then the tag as well as
[8212.64 - 8217.60] the description and the score and all
[8215.68 - 8219.80] that stuff and then I just created a
[8217.60 - 8221.64] object and I push that object into the
[8219.80 - 8224.36] post data like this this particular
[8221.64 - 8226.12] array so that we can get our desire
[8224.36 - 8227.92] array with the information and then
[8226.12 - 8229.48] later I&#39;m just uh returning the whole
[8227.92 - 8232.04] post data array that&#39;s mean this
[8229.48 - 8234.28] function will return a data set of our
[8232.04 - 8236.72] post and here you can see in the title
[8234.28 - 8238.76] what we doing we are getting the Noe so
[8236.72 - 8240.96] post element. getet attribute post
[8238.76 - 8244.64] titles that mean when we are going to
[8240.96 - 8247.20] call uh this particular um method with
[8244.64 - 8249.76] the title then we will get the title so
[8247.20 - 8252.92] let me show you the in real example so
[8249.76 - 8255.80] here we get our uh you can see let&#39;s
[8252.92 - 8257.56] just create the older one so make it a
[8255.80 - 8259.56] variable so I&#39;m going to zoom it a
[8257.56 - 8261.84] little bit more so that you can
[8259.56 - 8265.52] understand what&#39;s happening so I just
[8261.84 - 8267.92] created a variable here like con uh
[8265.52 - 8270.40] value so that&#39;s going to be all that
[8267.92 - 8272.56] node and if I just try to console then
[8270.40 - 8275.40] you can see there there are 75 noes so
[8272.56 - 8277.56] and if I try to access the zero number
[8275.40 - 8280.64] of index then you can see that&#39;s the Noe
[8277.56 - 8282.64] and here now I can get all the all of
[8280.64 - 8284.88] its attributes so for getting all of its
[8282.64 - 8287.08] attribute we need a method called get
[8284.88 - 8289.04] attribute and get attribute actually
[8287.08 - 8291.40] give all the attribute of that
[8289.04 - 8293.36] particular element and I just add it
[8291.40 - 8295.72] like post title so you might ask like
[8293.36 - 8299.68] where the post title you find so if you
[8295.72 - 8301.44] click on the title and hover and if you
[8299.68 - 8304.08] go to the sub
[8301.44 - 8306.96] sh Reddit post element and there are
[8304.08 - 8309.48] lots of you can see attribute and we
[8306.96 - 8311.76] have to find the attribute called post
[8309.48 - 8314.56] titles how we can find that we have to
[8311.76 - 8317.80] maybe search that post post title you
[8314.56 - 8319.60] can see that this is the attribute here
[8317.80 - 8322.32] but now you might ask how you find that
[8319.60 - 8325.20] so what I did I did a small trick here I
[8322.32 - 8328.24] simply copy the whole element and I go
[8325.20 - 8330.84] to Gemini Gemini or GPT whatever you are
[8328.24 - 8334.04] using so go there and give the
[8330.84 - 8336.76] particular string to that llm model to
[8334.04 - 8338.92] retrieve all of your data like how you
[8336.76 - 8341.56] can retrieve all those data just ask
[8338.92 - 8344.44] that uh in the prompt like give that
[8341.56 - 8347.08] particular um let&#39;s just I&#39;m giving this
[8344.44 - 8349.28] here this is the element okay I have to
[8347.08 - 8351.84] maybe close this one so let&#39;s see I can
[8349.28 - 8353.60] visit Gemini from here or not so it will
[8351.84 - 8355.80] ask you to sign up because it&#39;s like a
[8353.60 - 8360.76] fresh Chrome that&#39;s actually opening
[8355.80 - 8362.96] from uh the wxt client so this is where
[8360.76 - 8365.36] what I did I just added let&#39;s just tum
[8362.96 - 8368.08] in I just added the quote quotation and
[8365.36 - 8372.68] then I added this and then I asked like
[8368.08 - 8376.20] how I can find all the information from
[8372.68 - 8379.28] this element give me JavaScript function
[8376.20 - 8381.60] to fetch all the information so kind of
[8379.28 - 8384.48] like this kind of prompt when you do so
[8381.60 - 8387.00] then you can see it will give you a code
[8384.48 - 8388.60] and which will actually retrieve all the
[8387.00 - 8389.88] information that you need you can see
[8388.60 - 8393.08] that how many information you can
[8389.88 - 8395.04] retrieve from uh the whole HTML so the
[8393.08 - 8398.08] post data I can create something
[8395.04 - 8400.32] valuable as well as all it will give
[8398.08 - 8401.96] just like the string that we provided
[8400.32 - 8404.52] and that&#39;s the function extract post
[8401.96 - 8406.20] data and it gives us all the element and
[8404.52 - 8408.24] also you can see that it&#39;s using get
[8406.20 - 8410.24] attribute to get all this information
[8408.24 - 8412.88] sometimes get attribute sometimes uh
[8410.24 - 8414.56] it&#39;s using something else but mostly it
[8412.88 - 8417.00] using the get attribute method to
[8414.56 - 8420.72] actually getting all the data because uh
[8417.00 - 8423.44] in the Reddit uh sh Reddit post element
[8420.72 - 8426.28] it has already a lot of attribute which
[8423.44 - 8429.40] has the value and all the value is using
[8426.28 - 8431.92] inside all of it children element so it
[8429.40 - 8433.96] is really important to identify the root
[8431.92 - 8436.08] or the wrapper element and then later
[8433.96 - 8439.12] you can just grab that element code
[8436.08 - 8441.12] let&#39;s say if you just select the article
[8439.12 - 8444.44] you can do that as well as just copy
[8441.12 - 8447.16] this particular uh element from the Tom
[8444.44 - 8449.72] like this copy element and then ask to
[8447.16 - 8452.12] gemini or GPT to actually give me the
[8449.72 - 8454.16] function or the code how I can retrieve
[8452.12 - 8456.88] all the information from here and of
[8454.16 - 8459.84] course before getting the code you must
[8456.88 - 8462.36] need to understand why and how all the
[8459.84 - 8464.60] code actually has been used so you can
[8462.36 - 8467.68] see that here it&#39;s also passsing the
[8464.60 - 8471.08] HTML first then it&#39;s actually uh
[8467.68 - 8472.76] selecting all the sh Reddit post with
[8471.08 - 8475.48] the query selector then it&#39;s checking
[8472.76 - 8477.44] the null and all the stuff so the same
[8475.48 - 8480.72] thing we actually did kind of here I
[8477.44 - 8483.08] just uh give the sh rdit post element
[8480.72 - 8485.36] the HTML and then I asked to give me the
[8483.08 - 8487.04] code for uh retrieving some of the
[8485.36 - 8488.72] information I have mentioned here so it
[8487.04 - 8491.52] gives like something like this so I just
[8488.72 - 8494.40] grab that code like post element. get
[8491.52 - 8496.92] attribute post title link then I just
[8494.40 - 8500.76] use that link to make a full link
[8496.92 - 8502.68] because uh the link part the link is not
[8500.76 - 8505.76] giving me the full link so I have to
[8502.68 - 8508.76] make that manually like https ww.com
[8505.76 - 8511.64] slth link that I got from attribute it&#39;s
[8508.76 - 8514.12] actually the post link and and I uh was
[8511.64 - 8516.00] also fetching uh or like scrapping the
[8514.12 - 8518.40] comment count that how many comment it
[8516.00 - 8520.56] has and the tag element so for the tag
[8518.40 - 8523.24] element uh we are also using post
[8520.56 - 8526.36] element. query selector because uh if I
[8523.24 - 8530.32] just took you in the tag so let&#39;s just
[8526.36 - 8532.48] find a post that has tag so I think um
[8530.32 - 8535.52] there are no post I think yeah this one
[8532.48 - 8539.28] so you can see that we have tag and the
[8535.52 - 8541.60] tag also using sh Reddit post flare so
[8539.28 - 8544.84] that&#39;s another element that&#39;s using
[8541.60 - 8548.00] inside of the article or the sh RIT post
[8544.84 - 8550.92] that mean we have to find this all
[8548.00 - 8553.12] element from our sh R element to
[8550.92 - 8555.40] identify all the tag so that&#39;s why it is
[8553.12 - 8557.76] actually querying from post element.
[8555.40 - 8560.52] query selector with the name of the name
[8557.76 - 8562.52] you saw and also specifically the a tag
[8560.52 - 8565.08] and the spin tag and inside of that so
[8562.52 - 8567.68] it&#39;s actually retrieving the tag by this
[8565.08 - 8569.80] code and then if we I just checked uh
[8567.68 - 8571.12] some other condition if uh the tag have
[8569.80 - 8573.40] the text content then we&#39;re going to
[8571.12 - 8575.20] triming it if we don&#39;t have then we&#39;re
[8573.40 - 8577.04] just making it null so that we can
[8575.20 - 8579.08] handle it better way and then for the
[8577.04 - 8581.48] description we are also fetching it with
[8579.08 - 8583.56] the same way so it&#39;s just uh give the
[8581.48 - 8586.20] code from Gemini you can just ask Gemini
[8583.56 - 8588.52] to explain what&#39;s happening but uh as
[8586.20 - 8592.16] from now I can see it&#39;s actually looking
[8588.52 - 8594.48] for uh data post click location text-
[8592.16 - 8596.00] body is kind of the pointer that&#39;s
[8594.48 - 8597.88] actually help to retrieve the
[8596.00 - 8599.72] description element and then later I
[8597.88 - 8601.76] just check if there are any text content
[8599.72 - 8604.08] on there then and we should trim that
[8601.76 - 8605.92] otherwise there will be null and for the
[8604.08 - 8608.16] score we will get the score in the
[8605.92 - 8610.44] attribute so that&#39;s easy we don&#39;t have
[8608.16 - 8612.24] to take anything so for the tag and the
[8610.44 - 8615.36] description we have to additionally
[8612.24 - 8619.16] fetch or additionally query inside of
[8615.36 - 8621.40] the uh post s sh Reddit post element
[8619.16 - 8623.48] because it have some more nested element
[8621.40 - 8625.28] to actually render those things so when
[8623.48 - 8627.32] we will get the title and the full link
[8625.28 - 8629.44] then we are going to make the data for
[8627.32 - 8632.16] us so the post data and the post data
[8629.44 - 8634.52] I&#39;m going to push it to our main array
[8632.16 - 8636.28] so now whenever we call this particular
[8634.52 - 8639.36] function so let&#39;s just call this and
[8636.28 - 8641.64] make our post section Dynamic so here
[8639.36 - 8644.52] you can see that we&#39;re getting the post
[8641.64 - 8647.36] and so I can call that instruction
[8644.52 - 8650.40] function here but as you show that we
[8647.36 - 8652.72] also need a post here so what I can do I
[8650.40 - 8655.04] can simply call that uh particular
[8652.72 - 8657.68] function here before we got the signal
[8655.04 - 8659.64] we can call that or maybe when we got
[8657.68 - 8661.76] the signal we can simply call the
[8659.64 - 8663.84] function to actually fch the post so we
[8661.76 - 8665.64] can call that function here as well as I
[8663.84 - 8669.32] think better we should call that
[8665.64 - 8671.88] function uh inside inside of this
[8669.32 - 8674.84] function under the UN remove function so
[8671.88 - 8677.28] let&#39;s just call it like post and we&#39;re
[8674.84 - 8680.08] going to call it like this so whenever
[8677.28 - 8681.92] we call then it will trigger here and it
[8680.08 - 8683.96] will try to fetch the post and it will
[8681.92 - 8685.68] make the data set then it will give us
[8683.96 - 8687.92] the post and because we&#39;re getting the
[8685.68 - 8691.16] post here now we can pass the post
[8687.92 - 8692.72] simply on our post model and here inside
[8691.16 - 8695.40] the post model we have to declare the
[8692.72 - 8698.84] type so it will be like I post and it
[8695.40 - 8700.88] will come from our script SL scrap file
[8698.84 - 8703.96] from here and then now we can just
[8700.88 - 8706.72] simply remove our static data set and we
[8703.96 - 8709.04] can just make our whole thing as like as
[8706.72 - 8711.60] Dynamic so it&#39;s going to be like post.
[8709.04 - 8715.24] length and it will be also like post.
[8711.60 - 8717.08] map and I post will be array right now
[8715.24 - 8720.32] it&#39;s showing like object so it will be
[8717.08 - 8722.80] an array so that&#39;s it for the post and
[8720.32 - 8725.36] and uh right now the runtime error gone
[8722.80 - 8727.92] so now we should see all the dynamic
[8725.36 - 8729.68] data from the list so we are passing the
[8727.92 - 8733.04] post here as well as so let&#39;s just see
[8729.68 - 8736.28] from the UI so let&#39;s just close this and
[8733.04 - 8739.20] try to open post inside and then you can
[8736.28 - 8741.08] see we have 28 post and all of the post
[8739.20 - 8743.00] is kind of like this you can see it&#39;s
[8741.08 - 8745.44] like the same title so let&#39;s find our
[8743.00 - 8747.84] match uh with our fast post so the fast
[8745.44 - 8749.80] post is kind of like in defense of typy
[8747.84 - 8752.24] script enams you are probably using it
[8749.80 - 8754.44] wrong so let&#39;s just see is that our
[8752.24 - 8757.84] first post or not uh yeah that&#39;s the
[8754.44 - 8761.36] first post from we get what we get yeah
[8757.84 - 8763.48] so if I just fetch more post like this
[8761.36 - 8766.40] it&#39;s almost 3 days ago so let&#39;s just
[8763.48 - 8769.80] fetch more like this and let&#39;s fetch
[8766.40 - 8772.04] more as well as more and more so I think
[8769.80 - 8774.92] that&#39;s enough uh it&#39;s almost 10 days ago
[8772.04 - 8776.80] so if I just go up then I should get a
[8774.92 - 8779.68] lot of post so let&#39;s see how many post I
[8776.80 - 8781.68] have fetch it&#39;s almost 153 post I have
[8779.68 - 8783.80] fetched so so all the posts you can see
[8781.68 - 8786.60] the list is going on and on and all all
[8783.80 - 8788.20] of each post you can see the data so we
[8786.60 - 8789.56] have the score we have the comment
[8788.20 - 8791.96] sometimes we don&#39;t have the description
[8789.56 - 8793.96] because uh it attach with image so I&#39;m
[8791.96 - 8796.08] not going to show the image here I just
[8793.96 - 8798.48] need the description and the title and
[8796.08 - 8800.80] the a tag and the score and the comments
[8798.48 - 8803.36] so I think that&#39;s all the data I need
[8800.80 - 8805.48] and if you need the extension to be more
[8803.36 - 8807.24] accurate to be more specific let&#39;s say
[8805.48 - 8808.68] if you want to play with image then you
[8807.24 - 8811.40] also need the image then you have to
[8808.68 - 8813.84] send that image to the uh llm model to
[8811.40 - 8816.00] actually uh teach them that what&#39;s you
[8813.84 - 8818.20] want to actually retrieve so there are a
[8816.00 - 8820.20] lot of scenario you can also do that but
[8818.20 - 8822.28] for now as a general version or the MVP
[8820.20 - 8825.68] version we can just use all the text to
[8822.28 - 8827.56] actually send back to the GM or jpt to
[8825.68 - 8830.52] actually give as the result so this is
[8827.56 - 8832.84] all the post so now what I need I need
[8830.52 - 8834.76] for the same thing kind of the comment
[8832.84 - 8837.08] because we already have like a lot of
[8834.76 - 8838.96] comments you can see that we have a lots
[8837.08 - 8841.32] of comment we also want to show when we
[8838.96 - 8843.76] click on the comment and we also want to
[8841.32 - 8845.68] show all the comment list here so let&#39;s
[8843.76 - 8847.56] add the functionality as well as but
[8845.68 - 8849.24] before that let&#39;s just see how we can
[8847.56 - 8851.20] grab those comments so what is the
[8849.24 - 8852.92] element for rendering those comments if
[8851.20 - 8855.12] I just hover over in a particular
[8852.92 - 8858.20] comment then you can see the name is
[8855.12 - 8860.80] kind of like s Reddit uh comment you can
[8858.20 - 8863.04] see sh rdit Das comment so that&#39;s the
[8860.80 - 8865.76] element that will help us to retrieve
[8863.04 - 8868.44] all the comment information and for the
[8865.76 - 8871.40] comment score we have another one which
[8868.44 - 8874.24] is called sh RIT comment action and in
[8871.40 - 8877.48] this particular element we have the
[8874.24 - 8879.92] score or vote attribute you can see that
[8877.48 - 8882.28] score attribute which is showing one so
[8879.92 - 8884.92] this is also help us to retrieve the
[8882.28 - 8887.20] score of the vote count from the UI so
[8884.92 - 8890.00] let&#39;s just add this function as well as
[8887.20 - 8893.84] so right now I have if I go to the scrap
[8890.00 - 8895.60] TS we have stct Reddit post from Dom so
[8893.84 - 8898.48] now I need another function that&#39;s going
[8895.60 - 8901.12] to help to actually extract Reddit
[8898.48 - 8903.72] comments from Dom so that&#39;s our function
[8901.12 - 8905.72] extract redit comments from Dom and it
[8903.72 - 8907.88] will took or it will return return like
[8905.72 - 8910.60] I commment array type that&#39;s mean we are
[8907.88 - 8912.24] going to return this kind of array of
[8910.60 - 8913.96] object so that&#39;s why I just added the
[8912.24 - 8916.56] type and let&#39;s just see the
[8913.96 - 8919.60] implementation so it&#39;s just it&#39;s kind of
[8916.56 - 8921.76] the same as we did on the post you can
[8919.60 - 8925.52] you can see that in the post where query
[8921.76 - 8927.72] selector all sh R post so now for the
[8925.52 - 8930.40] comment we have to use like sh rdit
[8927.72 - 8933.00] comment and this going to give all all
[8930.40 - 8934.92] the comments in a list and we are
[8933.00 - 8937.80] storing it in the comments elements
[8934.92 - 8940.44] variable and I also added a variable for
[8937.80 - 8942.60] uh using or like making our data set
[8940.44 - 8944.76] from looping through the main element
[8942.60 - 8946.88] list or the node list and as you can see
[8944.76 - 8949.28] the same thing I did I took the HTML
[8946.88 - 8951.20] element and I sent that to gbt or gini
[8949.28 - 8953.28] to actually give me the code like how I
[8951.20 - 8955.16] can get those information you can also
[8953.28 - 8957.12] ask like give me this this information
[8955.16 - 8959.56] like title Vote or something like that
[8957.12 - 8962.04] so it will give you more less code so
[8959.56 - 8963.64] that wasse like really fun so the same
[8962.04 - 8966.08] thing it&#39;s actually retrieving the
[8963.64 - 8968.28] author it can easily get the author name
[8966.08 - 8971.32] from the attribute get attribute. author
[8968.28 - 8974.00] then peral link then we have the ID so
[8971.32 - 8976.20] it&#39;s kind of like the ID for actually
[8974.00 - 8978.40] the content uh or the description of
[8976.20 - 8980.52] that comment so it&#39;s kind of uh it was
[8978.40 - 8983.56] kind of trickier because uh if I just
[8980.52 - 8985.40] show you a single comment so you can
[8983.56 - 8988.20] understand what&#39;s happening so if you
[8985.40 - 8990.28] click on that then you will see that in
[8988.20 - 8993.36] the P tag we have that particular
[8990.28 - 8997.08] comment but in the de it was have the ID
[8993.36 - 9000.40] with like T1 then a random ID number or
[8997.08 - 9003.24] like string and then post RT Jon content
[9000.40 - 9005.28] so this is kind of like Dynamic value
[9003.24 - 9007.44] that&#39;s displaying every time for every
[9005.28 - 9009.68] single comment and it is really hard to
[9007.44 - 9011.56] actually grab that particular data
[9009.68 - 9013.36] directly from the Dom so that&#39;s why we
[9011.56 - 9015.48] have to apply the trick as well as so
[9013.36 - 9017.08] you can just do the thing by prompting
[9015.48 - 9019.56] with Jim let&#39;s say you are going to
[9017.08 - 9022.04] fetch uh the description you can give a
[9019.56 - 9024.52] bunch of element and ask gimini to you
[9022.04 - 9026.52] can see that we have some Dynamic ID or
[9024.52 - 9028.16] the content is dynamic so we need a
[9026.52 - 9030.40] function that&#39;s going to help to
[9028.16 - 9033.16] retrieve those data dynamically so what
[9030.40 - 9035.32] it did actually it checked that what is
[9033.16 - 9037.08] the ID or something like that is there
[9035.32 - 9040.24] anything available in the Dom which is
[9037.08 - 9043.28] actually helping to make this kind of ID
[9040.24 - 9045.84] and it found that in the sh Reddit
[9043.28 - 9049.52] comment element we have a property
[9045.84 - 9052.64] called thing ID equal to T1 MK D1 kind
[9049.52 - 9054.92] of like that so that&#39;s the ID from uh in
[9052.64 - 9056.96] the div element that we are using here
[9054.92 - 9059.16] that&#39;s mean if we just that ID fast then
[9056.96 - 9062.00] we can just simply make that particular
[9059.16 - 9064.12] um ID by ourself so we just need post RT
[9062.00 - 9066.00] Json content manually and this
[9064.12 - 9068.92] particular ID we need to fetch it from
[9066.00 - 9071.64] our wrapper attribute so that&#39;s what we
[9068.92 - 9074.04] did here I just uh fetch that ID that&#39;s
[9071.64 - 9076.92] called thing ID and we can just get it
[9074.04 - 9079.64] from the attribute and then I use uh
[9076.92 - 9082.00] like get element by ID I am just putting
[9079.64 - 9084.24] this ID here and then I added like post
[9082.00 - 9086.08] Artic content that&#39;s the sem string as
[9084.24 - 9088.80] we saw and with that case we will get
[9086.08 - 9091.24] the ID and with this ID we can simply
[9088.80 - 9093.48] get the main element like the div like
[9091.24 - 9095.88] this one so this particular div and
[9093.48 - 9097.96] inside the div we have the content of
[9095.88 - 9100.80] the particular comment so that&#39;s how I
[9097.96 - 9102.92] just fet the whole component and here
[9100.80 - 9105.48] you can see if we have the div then we
[9102.92 - 9108.00] are retrieving the inner text for the
[9105.48 - 9110.60] commment text and then I just added a
[9108.00 - 9113.16] object which actually storing the author
[9110.60 - 9116.00] then the link and the comment text from
[9113.16 - 9118.48] our dynamically selection and then the
[9116.00 - 9121.12] link and the for the ID we just using
[9118.48 - 9122.68] the thing ID or if we don&#39;t have that
[9121.12 - 9124.60] then we are using the key that we are
[9122.68 - 9127.44] using from the for each and then we have
[9124.60 - 9129.88] that score as like as we did for our
[9127.44 - 9132.36] post function and I also handle a uh H
[9129.88 - 9135.52] case if we don&#39;t have any data let&#39;s say
[9132.36 - 9137.36] in the future if redit uh replace or
[9135.52 - 9139.28] change the element name or something
[9137.36 - 9141.56] like that then we can also debug that by
[9139.28 - 9143.96] adding a vager here so that&#39;s why I just
[9141.56 - 9146.08] added a dagger so whenever our feature
[9143.96 - 9148.08] not working well then I can see that the
[9146.08 - 9150.24] function is broken or not because it&#39;s
[9148.08 - 9153.00] kind of like UI related thing so there
[9150.24 - 9155.16] is a high chance it will be changed
[9153.00 - 9158.48] frequently so we have to update the code
[9155.16 - 9161.76] as well as so that&#39;s our um function for
[9158.48 - 9164.04] fetching or scrapping or selecting all
[9161.76 - 9166.72] the comments from the Dom so let&#39;s try
[9164.04 - 9168.52] to use that so for using that we also
[9166.72 - 9170.88] have to do the same thing here we are
[9168.52 - 9173.92] fetching the post but but now in the
[9170.88 - 9175.76] comment we can also fetch our comment as
[9173.92 - 9177.88] well as so what I&#39;m going to do is call
[9175.76 - 9180.24] the same function so it will be
[9177.88 - 9182.28] something like this and we have to
[9180.24 - 9184.40] import that and we have to make it like
[9182.28 - 9187.32] comments and then we can just simply
[9184.40 - 9190.16] pass the comments as well as whenever uh
[9187.32 - 9192.00] our function create UI will be called it
[9190.16 - 9194.08] will also try to fetch the post as well
[9192.00 - 9196.28] as and we also need the post so what we
[9194.08 - 9198.24] can do is simply pass the post but we
[9196.28 - 9199.88] need to pass the first post so I&#39;m going
[9198.24 - 9201.20] to explain that a little bit later that
[9199.88 - 9203.16] what&#39;s happening here like how I&#39;m
[9201.20 - 9206.28] getting the post uh okay let&#39;s just
[9203.16 - 9209.04] explain it right now so whenever we call
[9206.28 - 9211.52] or go to a details of a particular post
[9209.04 - 9213.32] let&#39;s say I want to go to this
[9211.52 - 9215.80] particular post details so whenever I
[9213.32 - 9218.16] click then you can see that this is the
[9215.80 - 9221.20] post and this is the same post with the
[9218.16 - 9223.32] same element that we found on our uh
[9221.20 - 9226.12] post list so you will get the same uh
[9223.32 - 9228.28] sort of uh element so like subredit post
[9226.12 - 9230.60] that&#39;s mean whenever we come and try to
[9228.28 - 9232.52] click on the comment inside side then we
[9230.60 - 9236.20] can also fetch this post data and that&#39;s
[9232.52 - 9237.92] what we need so whenever we call the API
[9236.20 - 9239.28] like the llm API we&#39;re going to fetch
[9237.92 - 9241.44] those post data as well as all the
[9239.28 - 9243.52] comments then we are going to give both
[9241.44 - 9245.52] data to the API to actually re better
[9243.52 - 9247.44] result so that was the purpose and this
[9245.52 - 9250.00] means whenever this function will call
[9247.44 - 9252.20] we can just F the post every time and
[9250.00 - 9253.84] that&#39;s why it&#39;s become really easy and
[9252.20 - 9255.96] sometimes this function will not give
[9253.84 - 9257.52] error because every time whenever we go
[9255.96 - 9260.36] this particular page we already have the
[9257.52 - 9262.60] post and that&#39;s why I added post G so
[9260.36 - 9265.36] that we just need that first post
[9262.60 - 9267.12] information to pass in our comment model
[9265.36 - 9269.60] and for the comments yeah we already
[9267.12 - 9271.84] need need all the list of information so
[9269.60 - 9275.08] whenever I go to the comment model and
[9271.84 - 9277.36] we have those uh already used so I just
[9275.08 - 9280.52] have to declare the type so it will be I
[9277.36 - 9282.76] poost and of course it will be array or
[9280.52 - 9284.56] I think it will be kind of object yeah
[9282.76 - 9286.92] because we are passing the object from
[9284.56 - 9289.84] there not the array but for the comment
[9286.92 - 9291.64] we are passing uh the whole array so we
[9289.84 - 9293.92] need to make it like I commment
[9291.64 - 9295.76] something like this array and we have to
[9293.92 - 9298.12] remove the custom data so let&#39;s just
[9295.76 - 9300.80] remove it and let&#39;s just make it kind of
[9298.12 - 9303.72] dynamic to see what&#39;s going on and also
[9300.80 - 9306.44] the length will be changed and this data
[9303.72 - 9309.48] set will be also changed so and if you
[9306.44 - 9312.08] want to console the post we can also do
[9309.48 - 9313.96] that as well as so let&#39;s just console it
[9312.08 - 9315.76] and I want to console like the post not
[9313.96 - 9318.16] the form data so let&#39;s just make it
[9315.76 - 9321.36] something like this and that&#39;s our
[9318.16 - 9324.24] dynamically B so let&#39;s just see what&#39;s
[9321.36 - 9327.76] happening so we must have to go to in
[9324.24 - 9329.88] the details of any page like any post
[9327.76 - 9331.56] and then if I just click post inside
[9329.88 - 9333.92] then you can see there are only one post
[9331.56 - 9336.28] because I said already the same post is
[9333.92 - 9338.08] binding uh here as well as the element
[9336.28 - 9339.96] so that&#39;s why we only see the one post
[9338.08 - 9342.04] when we click on the post inside and if
[9339.96 - 9344.72] I click now on the comment inside then
[9342.04 - 9347.20] you can see that we have 10 comments and
[9344.72 - 9349.52] all of it comment is kind of like this
[9347.20 - 9351.36] so you can see uh all of it comment like
[9349.52 - 9353.44] this this and if there are more reply we
[9351.36 - 9355.32] also have to open those reply you can
[9353.44 - 9357.84] see that we have two reply here we have
[9355.32 - 9360.72] two more reply one more reply as well as
[9357.84 - 9362.56] so all the reply we need to open you can
[9360.72 - 9364.48] also not open that you can do that
[9362.56 - 9366.52] dynamically but I want to make something
[9364.48 - 9368.56] like more simple and straightforward
[9366.52 - 9370.08] that&#39;s why I added that for manually
[9368.56 - 9371.84] handling so if I now click on the
[9370.08 - 9373.68] comment inside then you can see that the
[9371.84 - 9376.16] comment count increased because uh the
[9373.68 - 9377.76] reply was uh in the accordion so when
[9376.16 - 9379.80] the accordion open the more element
[9377.76 - 9381.80] actually open and then when we scrap we
[9379.80 - 9383.80] get more data so that&#39;s kind of like a
[9381.80 - 9385.64] simple thing so if I just click now
[9383.80 - 9387.92] right now nothing happening so we also
[9385.64 - 9389.88] have to handle the click event and
[9387.92 - 9391.36] because we are getting the URL so
[9389.88 - 9393.84] whenever we click on that particular
[9391.36 - 9397.12] comment we should R take to uh that
[9393.84 - 9398.88] particular comment uh URL so right now
[9397.12 - 9401.36] let&#39;s just make that things happen as
[9398.88 - 9403.72] well as for the post so when I go to the
[9401.36 - 9405.28] Post list and try to fetch all the post
[9403.72 - 9407.44] and I should click and it should open
[9405.28 - 9409.72] the PO post so let&#39;s just make it
[9407.44 - 9412.48] working so for that case we have to go
[9409.72 - 9414.56] to our post list and here we have to add
[9412.48 - 9417.28] the Handler so let&#39;s just make a
[9414.56 - 9420.36] function so I think uh this kind of
[9417.28 - 9422.12] function and it will took the post and
[9420.36 - 9423.88] the post will be kind of like I poost
[9422.12 - 9427.12] the type we already declared and as you
[9423.88 - 9428.92] can see the benefit of reusable type so
[9427.12 - 9431.48] now we can get if there are post. link
[9428.92 - 9433.80] then we&#39;re going to open it with a new
[9431.48 - 9436.20] tab that&#39;s why you can just use simply
[9433.80 - 9438.08] window. open and post. Link we&#39;re
[9436.20 - 9440.48] passing and we need a blank window and
[9438.08 - 9442.64] we need uh this attribute there so when
[9440.48 - 9445.44] you do so now we just have to use this
[9442.64 - 9447.48] particular function in our card click so
[9445.44 - 9449.52] I&#39;m going to add that Handler here
[9447.48 - 9451.76] because we already have the ID post ID
[9449.52 - 9453.80] is this is the wrapper C of that card so
[9451.76 - 9455.80] I can just simply use the on click and I
[9453.80 - 9457.64] can just simply call this function and I
[9455.80 - 9459.88] can pass the post that we are getting
[9457.64 - 9461.52] from uh throughout the map so when I
[9459.88 - 9463.32] save that it&#39;s going to work for the
[9461.52 - 9465.76] Post let&#39;s just add for the comment as
[9463.32 - 9467.92] well as so for our comment that&#39;s going
[9465.76 - 9469.88] to be the function and that&#39;s going to
[9467.92 - 9471.64] be the on click method so for the
[9469.88 - 9473.68] function is the kind of same we will get
[9471.64 - 9476.16] the comment object and it will be I
[9473.68 - 9478.04] commment and if there are a field called
[9476.16 - 9480.16] Perma link because we already added the
[9478.04 - 9483.08] link in this property so we should get
[9480.16 - 9484.48] that here so uh we&#39;ll get that per link
[9483.08 - 9486.52] here if we have the link then we are
[9484.48 - 9489.36] going to open that particular link there
[9486.52 - 9491.72] and let&#39;s just find out our rapper so
[9489.36 - 9493.32] this is where we just added that ID and
[9491.72 - 9496.00] then here I can just simply add that
[9493.32 - 9498.28] particular onclick methods to actually
[9496.00 - 9501.16] perform our functionality so let&#39;s just
[9498.28 - 9503.44] check and let&#39;s just try to fetch some
[9501.16 - 9505.52] post I think that&#39;s enough so I should
[9503.44 - 9507.80] get like 10 to 20 post and let&#39;s just
[9505.52 - 9510.72] click on the post T inside and you can
[9507.80 - 9513.40] see we have 78 post and now if I want to
[9510.72 - 9515.80] go any post details so I just have to
[9513.40 - 9518.16] click so let&#39;s just find a post that
[9515.80 - 9520.24] have lots of comments so I think this
[9518.16 - 9521.68] one it have 14 comments so let&#39;s just
[9520.24 - 9525.12] click on that and you can see it&#39;s
[9521.68 - 9527.52] working fine and as well as uh it has
[9525.12 - 9530.20] some sort of uh comments so let&#39;s just
[9527.52 - 9532.08] try to open our comments inside to see
[9530.20 - 9535.04] that it has 10 comments showing because
[9532.08 - 9537.72] some of the comments are hiding inside
[9535.04 - 9540.16] of this particular section so we have to
[9537.72 - 9542.24] unwrap that when we do so then we will
[9540.16 - 9545.00] get more comment you can see we will get
[9542.24 - 9549.20] more comment so we have to unwrap those
[9545.00 - 9550.72] reply section so now if I just click and
[9549.20 - 9553.88] the comment section you can see that we
[9550.72 - 9556.00] have 12 and if I just click on a
[9553.88 - 9558.28] particular comment let&#39;s say this one
[9556.00 - 9560.00] then I should open that comment as well
[9558.28 - 9563.12] as so you can see the post then you can
[9560.00 - 9565.60] see the comment if there are multiple uh
[9563.12 - 9568.76] reply then you will also find them here
[9565.60 - 9572.36] so that&#39;s how we can simply list down
[9568.76 - 9574.32] all the comment as our Desir UI as well
[9572.36 - 9576.88] as we can also play the same thing with
[9574.32 - 9580.36] the post for getting all the post
[9576.88 - 9582.88] informations easily and now we can just
[9580.36 - 9585.72] add the search input UI to actually
[9582.88 - 9588.32] perform our prompting logic to actually
[9585.72 - 9590.56] work with the AI to generate response
[9588.32 - 9592.56] generate all of our data so that&#39;s how
[9590.56 - 9594.60] cool it is and I believe you are
[9592.56 - 9596.56] enjoying this video by watching all the
[9594.60 - 9598.64] step how I am doing it how I am
[9596.56 - 9601.64] implementing it and also give me some
[9598.64 - 9604.12] feedback about my explanation that is my
[9601.64 - 9606.04] explanation is well or not if I need to
[9604.12 - 9607.80] explain more details or like uh you
[9606.04 - 9611.08] might ask like why I&#39;m not showing you
[9607.80 - 9612.44] that styling um explanation because it&#39;s
[9611.08 - 9615.24] I don&#39;t think that&#39;s like productive
[9612.44 - 9618.24] there are lots of logic we write uh
[9615.24 - 9620.24] above the designing so I think showing
[9618.24 - 9622.08] you all the design by by writing those
[9620.24 - 9624.44] code is not going to be productive you
[9622.08 - 9626.64] can design it by your own or if I share
[9624.44 - 9628.44] my code you can just get that code but
[9626.64 - 9630.40] for understanding the logic is really
[9628.44 - 9632.96] the important part so that&#39;s why I am
[9630.40 - 9634.84] showing uh the main thing like all the
[9632.96 - 9637.00] logic how all the things work like if
[9634.84 - 9639.56] you just uh was the previous section
[9637.00 - 9641.48] kind of like the common function that I
[9639.56 - 9643.64] have created to actually manage the
[9641.48 - 9645.16] rendering uh things then I think you
[9643.64 - 9647.20] will understand the whole thing and you
[9645.16 - 9649.56] can easily Implement any Chrome
[9647.20 - 9652.44] extension and you will not get confused
[9649.56 - 9654.68] anytime uh and also when I just try to
[9652.44 - 9656.24] implement these things by myself it was
[9654.68 - 9658.28] take some time to actually understand
[9656.24 - 9660.84] how I can just implement or make it like
[9658.28 - 9663.24] common uh thing so that I can render any
[9660.84 - 9664.88] react component so that&#39;s why
[9663.24 - 9666.84] understanding the main logic of the core
[9664.88 - 9669.60] part is really important and that&#39;s what
[9666.84 - 9671.60] I always try to make thing out on my
[9669.60 - 9674.20] every video I don&#39;t show you all the
[9671.60 - 9676.08] smallest step I would show the main
[9674.20 - 9677.96] logic as well as the step-by-step
[9676.08 - 9679.96] process and I will also show you that
[9677.96 - 9681.76] how you can generate the UI so UI part
[9679.96 - 9684.32] you can just generate it nowadays on the
[9681.76 - 9686.60] chat GPT or if you know HTML CSS you can
[9684.32 - 9689.24] just design by yourself and if you want
[9686.60 - 9691.92] like video like in the HTML CSS or twine
[9689.24 - 9694.24] CSS something some sort of AI related
[9691.92 - 9696.24] stuff then let&#39;s just uh comment down
[9694.24 - 9699.16] this videos so that I can just make that
[9696.24 - 9702.24] into my too list as well as so that&#39;s
[9699.16 - 9704.12] the part for now so now I have to uh you
[9702.24 - 9706.12] know do the next task which is we have
[9704.12 - 9708.20] need a search input box and we need the
[9706.12 - 9710.44] functionality how we can handle the
[9708.20 - 9712.08] prompting how we can send all these data
[9710.44 - 9714.16] to the API and how we can get the
[9712.08 - 9716.28] response how we can show all those data
[9714.16 - 9719.24] as well as so that&#39;s going to our next
[9716.28 - 9722.16] step so let&#39;s create a search component
[9719.24 - 9723.96] and make it common and use it in our
[9722.16 - 9725.60] post model and comment model and I&#39;m
[9723.96 - 9728.28] going to create the search component
[9725.60 - 9730.52] inside of the common directory so here
[9728.28 - 9733.12] is our search component I&#39;m using search
[9730.52 - 9735.76] icon from Lucid react and some sort of
[9733.12 - 9737.40] uh type like jsx type from react and
[9735.76 - 9739.56] this search component will be returned
[9737.40 - 9742.44] like a jsx element so that&#39;s why you can
[9739.56 - 9745.16] see the return type and in this search
[9742.44 - 9747.60] component I will accept a function and
[9745.16 - 9749.84] this function will take the search query
[9747.60 - 9751.40] kind of like a string and it will n
[9749.84 - 9753.32] nothing so that&#39;s a function that mean
[9751.40 - 9756.44] it&#39;s kind of like a handle search
[9753.32 - 9758.52] function that we can use that in the
[9756.44 - 9761.20] parent component so that&#39;s why we need
[9758.52 - 9763.76] that and we have a state that will
[9761.20 - 9766.28] handle the state of the search input and
[9763.76 - 9768.00] then we have the button click Handler
[9766.28 - 9769.88] that&#39;s going to handle when we click on
[9768.00 - 9771.76] the search button so we have a search
[9769.88 - 9773.76] input we have a search button and when
[9771.76 - 9776.40] we click on the search button it should
[9773.76 - 9779.56] give the text that we type in the input
[9776.40 - 9781.64] field and it should handle or call or
[9779.56 - 9783.76] trigger the handle search function that
[9781.64 - 9787.12] we already declare when we call the
[9783.76 - 9788.80] search component and if I talk about the
[9787.12 - 9791.20] component then it&#39;s pretty simple we
[9788.80 - 9793.44] have the border and we have like full
[9791.20 - 9796.44] width and a input field with the text
[9793.44 - 9799.24] type and uh the value will come from the
[9796.44 - 9800.84] state value that we are created by state
[9799.24 - 9803.44] and in the one change we are actually
[9800.84 - 9805.84] calling uh this set search query method
[9803.44 - 9808.52] to actually update the value real time
[9805.84 - 9811.12] value and we have Onkey down event
[9808.52 - 9813.04] that&#39;s mean if we want to press enter on
[9811.12 - 9815.64] the input field we want to also perform
[9813.04 - 9818.92] the submission that&#39;s why I added the on
[9815.64 - 9821.76] key down event and I uh grab the enter
[9818.92 - 9823.60] event and click or trigger the function
[9821.76 - 9825.80] that I have created for handling the
[9823.60 - 9828.08] search so that&#39;s the same we actually
[9825.80 - 9830.48] called in the button as well as so the
[9828.08 - 9833.00] button has the search icon and uh that&#39;s
[9830.48 - 9835.44] text search so let&#39;s just try to use
[9833.00 - 9838.12] this search component in our post as
[9835.44 - 9840.24] well as in our comment and because uh we
[9838.12 - 9843.12] already have the header so I think it is
[9840.24 - 9846.04] better if we place the search component
[9843.12 - 9849.04] below the header so that&#39;s going to be
[9846.04 - 9851.92] the search component and it will reord
[9849.04 - 9854.72] an handle search function so right now
[9851.92 - 9856.88] I&#39;m just making a empty function and
[9854.72 - 9859.24] that&#39;s it let&#39;s just save it it&#39;s for
[9856.88 - 9862.28] the Post model and let&#39;s just add the
[9859.24 - 9865.56] same thing for our comment model as well
[9862.28 - 9868.48] as below the header component so that&#39;s
[9865.56 - 9871.44] the search component and that&#39;s it now
[9868.48 - 9873.92] let&#39;s just see from the UI so if I just
[9871.44 - 9876.56] right click and open the post inside
[9873.92 - 9878.28] then you can see that&#39;s the search input
[9876.56 - 9880.64] and there&#39;s the button so if I just
[9878.28 - 9883.08] click nothing happen if I just type
[9880.64 - 9885.16] nothing happen and the Onkey down even
[9883.08 - 9887.40] should work when we are going to handle
[9885.16 - 9889.56] the input and let&#39;s see it&#39;s also
[9887.40 - 9891.68] working on the commment inside on or not
[9889.56 - 9893.68] yes the search input is also here we can
[9891.68 - 9895.24] see and you can see that I can&#39;t see all
[9893.68 - 9897.64] the comment because right now I am in
[9895.24 - 9899.76] the post list so for getting all the
[9897.64 - 9902.68] comments informations then I have to
[9899.76 - 9905.72] navigate to any particular course uh any
[9902.68 - 9908.16] particular um post details to fetch all
[9905.72 - 9910.76] the comments and then render them so if
[9908.16 - 9912.40] I just come here and try to open the
[9910.76 - 9914.72] comment inside then now you can see we
[9912.40 - 9917.48] have 30 commment and all of it&#39;s here
[9914.72 - 9921.24] and here we can show the response from
[9917.48 - 9923.20] the markdown um output from the llm so
[9921.24 - 9926.28] that&#39;s it now let&#39;s add the main
[9923.20 - 9929.12] functionality so for doing our main
[9926.28 - 9931.84] functionality we have to add the
[9929.12 - 9934.08] function in like comment model and the
[9931.84 - 9936.96] post model so let&#39;s start with the post
[9934.08 - 9939.72] model so we need a Handler that&#39;s going
[9936.96 - 9941.36] to handle the search on change because
[9939.72 - 9943.56] we already have the handle search so
[9941.36 - 9945.08] whenever we click on submit button or
[9943.56 - 9946.68] whenever we press enter then this
[9945.08 - 9948.28] function will be invoked so we need a
[9946.68 - 9950.64] function that&#39;s going to handle all the
[9948.28 - 9952.72] all of that so here is the function
[9950.64 - 9955.92] called handle search which is going to
[9952.72 - 9958.84] handle our prompting or like whenever we
[9955.92 - 9961.80] type anything in my input field and if
[9958.84 - 9963.88] we search for it or ask for it then this
[9961.80 - 9966.92] function will be triggered and I also
[9963.88 - 9970.20] declared an State as I also declared a
[9966.92 - 9973.20] state called gini response because uh my
[9970.20 - 9975.28] initial Target was to use Gemini API to
[9973.20 - 9977.68] actually build a project and that&#39;s why
[9975.28 - 9980.20] I just added like gin response later if
[9977.68 - 9981.88] I added GPT or any sort of llm then
[9980.20 - 9983.36] maybe there will be multiple state or
[9981.88 - 9985.04] maybe there will be object or something
[9983.36 - 9986.88] like that for understanding purpose I
[9985.04 - 9989.80] just added the state name called like
[9986.88 - 9992.96] Gemini response so initially this
[9989.80 - 9995.44] function will be triggered when we will
[9992.96 - 9998.68] actually click on the search button or
[9995.44 - 10000.40] maybe the when we press the enter key
[9998.68 - 10002.40] from the keyboard so that&#39;s why we have
[10000.40 - 10004.68] to add that handle search here and then
[10002.40 - 10007.72] it will trigger and the first line it
[10004.68 - 10009.60] will make our loading State become true
[10007.72 - 10012.32] initially it was false now you can see
[10009.60 - 10014.96] that we are using that state and then we
[10012.32 - 10017.52] actually cleared our older data so let&#39;s
[10014.96 - 10019.44] say if there are any data in this state
[10017.52 - 10022.24] then we are going to make it empty
[10019.44 - 10025.88] because this should be our post list so
[10022.24 - 10028.80] the basic plan is now is when we open
[10025.88 - 10031.48] this and when we type something on here
[10028.80 - 10033.52] that mean we have the query text and
[10031.48 - 10036.84] then we have all the post so what my
[10033.52 - 10040.00] plan is I will send this prompt like the
[10036.84 - 10042.96] query text as well as the list of all
[10040.00 - 10045.24] the data like what we generated or scrap
[10042.96 - 10048.12] from the web page so I will make a
[10045.24 - 10050.96] prompt and then I will call the Gemini
[10048.12 - 10053.00] endpoint llm endpoint with all this data
[10050.96 - 10054.92] as a payload and I&#39;m I&#39;m going to ask to
[10053.00 - 10057.24] give me the response with the Json
[10054.92 - 10060.16] format or whatever that&#39;s actually good
[10057.24 - 10062.88] for me to show all the list that&#39;s mean
[10060.16 - 10065.24] uh let&#39;s say if I just uh go for like
[10062.88 - 10067.08] give me typ script related post then the
[10065.24 - 10068.92] prompt will be give me typ script
[10067.08 - 10072.36] related post and all the data will will
[10068.92 - 10074.56] be like 28 post and then I will prepare
[10072.36 - 10077.20] the payload and then when I click the
[10074.56 - 10079.24] search then it will call the API and it
[10077.20 - 10081.16] will give the response in markdown
[10079.24 - 10083.24] format then we have to take that
[10081.16 - 10085.92] markdown format and we have to retrieve
[10083.24 - 10089.24] all the Json list because I also need
[10085.92 - 10091.32] the list of those data why because if it
[10089.24 - 10093.52] gives the response then I will not know
[10091.32 - 10095.64] that which are the post actually that
[10093.52 - 10097.44] related to my prompt so I must need the
[10095.64 - 10100.84] list as well as so I&#39;m going to give the
[10097.44 - 10103.84] list of the data object uh like array of
[10100.84 - 10105.76] object uh to the payload and also in
[10103.84 - 10108.00] return in the response of the markdown I
[10105.76 - 10111.56] also expecting to give me the Json or
[10108.00 - 10113.76] like the list of the post and then in
[10111.56 - 10116.24] the response it will give you in
[10113.76 - 10118.64] markdown format then we have to retrieve
[10116.24 - 10120.04] or extract that Json list from that
[10118.64 - 10121.80] markdown format so we need another
[10120.04 - 10124.24] function to actually handle that things
[10121.80 - 10127.24] so that&#39;s what I actually handled uh in
[10124.24 - 10129.96] the handle search function so first I
[10127.24 - 10132.32] have created the URL the URL will come
[10129.96 - 10135.20] from our from data so as you can see
[10132.32 - 10137.80] that&#39;s the hook that we was created when
[10135.20 - 10139.64] we created the popup so this hook work
[10137.80 - 10141.20] on the popup and now this is also
[10139.64 - 10142.76] working in our content descript and
[10141.20 - 10144.60] whenever we call this hook you saw
[10142.76 - 10146.92] earlier that it console log the data
[10144.60 - 10149.48] from the Chrome storage and here with
[10146.92 - 10152.60] this form data I can create the URL and
[10149.48 - 10154.72] as you can see in our form popup we have
[10152.60 - 10157.40] the endpoint which is the URL and the
[10154.72 - 10159.28] key which is the key so the URL will be
[10157.40 - 10162.64] kind of like from data endpoint Co then
[10159.28 - 10166.00] key then from data. API key so if you
[10162.64 - 10168.88] use uh Google AI Studio AI studio.
[10166.00 - 10170.68] google.com API key if you go to get API
[10168.88 - 10172.80] key then you will come to this page and
[10170.68 - 10174.68] here you can create new API key you can
[10172.80 - 10177.20] also find your existing API Key by
[10174.68 - 10179.32] clicking that AP key and if you look
[10177.20 - 10182.28] into the upper section then you can see
[10179.32 - 10186.04] there is a URL like this and that&#39;s the
[10182.28 - 10188.12] URL we need to actually request the API
[10186.04 - 10189.88] and it&#39;s not only the URL but also it
[10188.12 - 10191.96] include the key you can see that key
[10189.88 - 10194.88] equal to jimin API key that mean if we
[10191.96 - 10198.08] just uh took the whole thing and if we
[10194.88 - 10201.12] add the key and then if we add the data
[10198.08 - 10203.64] in as a body as a payload then we can
[10201.12 - 10206.04] just send that request to the jimmini AI
[10203.64 - 10208.36] Studio API and it will give us response
[10206.04 - 10211.08] back that mean the key and the URL is
[10208.36 - 10214.12] important here so that&#39;s why whenever we
[10211.08 - 10215.92] add any key here and save it that it
[10214.12 - 10218.72] will store in the Chrome storage and
[10215.92 - 10220.80] later when we open our posst inside
[10218.72 - 10222.92] model and ask something and go for
[10220.80 - 10224.68] search then we can ret those information
[10222.92 - 10226.92] and call the API so that&#39;s why this is
[10224.68 - 10228.72] the API I have built and now the thing
[10226.92 - 10231.00] is we have to build the payload and the
[10228.72 - 10233.20] payload is kind of like an object and
[10231.00 - 10236.28] inside that object it will record like
[10233.20 - 10238.48] an content like a Content property if
[10236.28 - 10241.68] you see here that it will give you a
[10238.48 - 10243.60] simple example which is it&#39;s an object
[10241.68 - 10246.08] and then uh of course you have to be
[10243.60 - 10247.76] like it could be like the chesson so
[10246.08 - 10249.64] it&#39;s the contents property and the
[10247.76 - 10251.84] contents property will will contain a
[10249.64 - 10254.52] list and in the list there will be an
[10251.84 - 10256.88] object of Parts property and then this
[10254.52 - 10259.04] object will took another list which has
[10256.88 - 10260.88] the text and in the text that&#39;s your
[10259.04 - 10263.44] prompt you can see explain how way works
[10260.88 - 10266.44] that&#39;s the prompt so I just grab that
[10263.44 - 10269.12] format and I past that the same format
[10266.44 - 10271.48] and in the parts I have the array and in
[10269.12 - 10273.52] the array I have the object and in the
[10271.48 - 10275.48] object I have the property called X I
[10273.52 - 10278.00] have the property called text and the
[10275.48 - 10280.48] text here that&#39;s our prompt so you can
[10278.00 - 10282.48] see the prompt is this is the prompt
[10280.48 - 10285.16] where I just mention the search query
[10282.48 - 10287.84] which I will get from uh when I just
[10285.16 - 10289.72] declare this function so whenever I
[10287.84 - 10291.36] declare this function here so whenever
[10289.72 - 10294.04] that triggered I will get the search
[10291.36 - 10296.16] query now I can add that in my prom so
[10294.04 - 10299.36] this is the promt search query this is
[10296.16 - 10302.04] the data sets of post injs array so I
[10299.36 - 10304.36] just added the post list so I get the
[10302.04 - 10307.44] post list from it props that mean I can
[10304.36 - 10309.80] get the list so the list that I am
[10307.44 - 10312.52] showing or dis playing here like mapping
[10309.80 - 10315.56] through so that&#39;s our post I am just
[10312.52 - 10317.64] adding the post with json. stringify to
[10315.56 - 10320.04] make it like Json type things from the
[10317.64 - 10322.00] string so that it understands so I have
[10320.04 - 10324.12] two input one is the prompt and the
[10322.00 - 10325.48] second one is the post list and I&#39;m just
[10324.12 - 10327.48] giving it like this so This Is The
[10325.48 - 10330.44] Prompt and this is the data set of post
[10327.48 - 10333.12] in the JS array and now based on this
[10330.44 - 10335.96] post data set and the prompt give me all
[10333.12 - 10339.72] the related post match with that prompt
[10335.96 - 10342.04] asked use description title tag score
[10339.72 - 10344.88] comments for matching most relevant post
[10342.04 - 10347.48] give me the list of posts with the same
[10344.88 - 10350.72] format as I have given you don&#39;t give me
[10347.48 - 10354.48] any extra text even if you fail to find
[10350.72 - 10357.64] any post just give me an empty array if
[10354.48 - 10359.88] not match found and if found give me the
[10357.64 - 10362.68] list of the post with the same data
[10359.88 - 10364.96] format so the summary is I am giving the
[10362.68 - 10367.72] prompt and the data set like the post
[10364.96 - 10371.08] list and I&#39;m asking to give me or like
[10367.72 - 10374.64] to use the prome to filter or find the
[10371.08 - 10377.40] related data from the array and give me
[10374.64 - 10380.12] return back the array and if you don&#39;t
[10377.40 - 10382.76] find any match then then just don&#39;t give
[10380.12 - 10384.96] me anything just give me a empty empty
[10382.76 - 10387.88] array and not any extra text so you have
[10384.96 - 10390.20] to specifically mention uh in the prom
[10387.88 - 10392.96] that what you are asking and what you
[10390.20 - 10395.12] need if you say okay if you don&#39;t if you
[10392.96 - 10396.92] just remove this line like don&#39;t give me
[10395.12 - 10399.88] any extra text then it will give you
[10396.92 - 10402.64] let&#39;s say some initial and the final
[10399.88 - 10405.40] text from the response which I wasn&#39;t
[10402.64 - 10407.52] expecting so I need to specifically
[10405.40 - 10409.48] mention in the prom that I need this
[10407.52 - 10412.44] this this and you should give me this
[10409.48 - 10414.96] this this and most of the time like 90%
[10412.44 - 10417.32] of the time it gives you the desire or
[10414.96 - 10420.08] expected result sometimes it might uh
[10417.32 - 10422.44] cause issue then you also have have to
[10420.08 - 10425.12] handle that uh from your end because we
[10422.44 - 10427.60] are raying on the llm to give the
[10425.12 - 10429.56] response of our array let&#39;s say if the
[10427.60 - 10432.40] array is in our code we can manipulate
[10429.56 - 10434.08] it you can get our desired result but
[10432.40 - 10437.80] the problem is we&#39;re sending the array
[10434.08 - 10440.28] to an llm we&#39;re sending the array to a
[10437.80 - 10442.80] llm model and we are expecting to give
[10440.28 - 10445.16] me give us like different sort of array
[10442.80 - 10447.52] or like the same array but filtered data
[10445.16 - 10449.24] set so which is sometimes will not be
[10447.52 - 10451.44] accurate so we have to handle that as
[10449.24 - 10453.60] well as but for now I&#39;m just kind of I
[10451.44 - 10455.76] tried with several times but it gives me
[10453.60 - 10457.80] all the list so I don&#39;t have to handle
[10455.76 - 10460.04] that here so that&#39;s our payload and
[10457.80 - 10462.04] that&#39;s our URL so we have to call the
[10460.04 - 10464.52] API because we have the URL so we have
[10462.04 - 10466.40] to call the URL with this payload so
[10464.52 - 10467.96] that we can get the response and when we
[10466.40 - 10470.56] get that response we are going to set
[10467.96 - 10473.60] that response as like we did here like
[10470.56 - 10475.28] we got the uh post data set like a list
[10473.60 - 10478.04] so that&#39;s mean we also have to set that
[10475.28 - 10480.84] list here but the thing is when we call
[10478.04 - 10482.72] the API it doesn&#39;t give you the list in
[10480.84 - 10485.16] direct JavaScript format or the Json
[10482.72 - 10487.80] format it actually give you a markdown
[10485.16 - 10490.60] format text and it&#39;s kind of string so
[10487.80 - 10492.20] you have to to retrieve your Json or
[10490.60 - 10494.48] like the array from that particular
[10492.20 - 10496.48] string that mean we need kind of a
[10494.48 - 10498.56] converter or kind of a compiler that
[10496.48 - 10501.28] actually compile the text and give us
[10498.56 - 10503.52] the desire Json array that we are
[10501.28 - 10506.08] looking for but before that let&#39;s just
[10503.52 - 10509.52] install exos to actually fetching or
[10506.08 - 10512.88] calling API so we have to use exos for
[10509.52 - 10515.08] actually API calling it has installed so
[10512.88 - 10518.08] then you can see we have to import the
[10515.08 - 10520.56] exos and now in the exos dopost is going
[10518.08 - 10523.16] to do the post request and we have the
[10520.56 - 10525.76] URL here as well as the payload and in
[10523.16 - 10528.16] the third parameter we have to pass the
[10525.76 - 10531.96] headers with content type application.
[10528.16 - 10534.40] Json so if you go to the AI Studio then
[10531.96 - 10536.72] it will refer you to pass content type
[10534.40 - 10539.08] application sljs so that&#39;s important you
[10536.72 - 10541.72] have to pass that with the payload so
[10539.08 - 10543.56] that&#39;s uh the AP request and we are
[10541.72 - 10546.28] going to because it&#39;s AP request is
[10543.56 - 10547.76] going to return promise we have to avoid
[10546.28 - 10548.80] that promise and here we&#39;re going to get
[10547.76 - 10551.12] the response
[10548.80 - 10552.68] and the cool thing is when you get that
[10551.12 - 10555.68] respon you will not directly get the
[10552.68 - 10557.56] data like in the response response. data
[10555.68 - 10559.24] we usually get that exact data from the
[10557.56 - 10561.68] response but because we are using the
[10559.24 - 10563.44] model uh from Google so they have some
[10561.68 - 10566.28] other property as well as so the
[10563.44 - 10568.48] property is like response. data.
[10566.28 - 10571.08] candidates so there is an array of
[10568.48 - 10574.24] candidates and in that candidates array
[10571.08 - 10576.96] there are M uh the first index we will
[10574.24 - 10578.72] get that particular object and inside
[10576.96 - 10581.44] that object we have a property called
[10578.72 - 10583.44] content and inside that content we have
[10581.44 - 10585.68] another property called parts and the
[10583.44 - 10588.72] parts is kind of like an array is the
[10585.68 - 10590.72] same we saw in the kind of like this
[10588.72 - 10593.32] here so basically it&#39;s kind of like the
[10590.72 - 10595.96] same type of payload that&#39;s mean if you
[10593.32 - 10598.56] see content do Parts zero text that&#39;s
[10595.96 - 10600.60] mean in the contents array we have the
[10598.56 - 10602.48] part parts property and in that part
[10600.60 - 10605.36] property Parts property we have the
[10602.48 - 10607.24] array and in the array first item we are
[10605.36 - 10610.28] going to get the text and the text is
[10607.24 - 10612.88] actual response from from Gemini so you
[10610.28 - 10615.28] have to deep dig into this particular
[10612.88 - 10617.80] nested property so that you can find
[10615.28 - 10620.68] that where your data is so sometimes uh
[10617.80 - 10624.20] it will be changed so I&#39;m using Gemini
[10620.68 - 10626.60] uh flash 2.0 so maybe in the later
[10624.20 - 10628.40] future is going to change or whatever
[10626.60 - 10630.84] that should be implemented so you have
[10628.40 - 10634.52] to make sure that you added that
[10630.84 - 10637.44] response from the latest uh property so
[10634.52 - 10640.20] that&#39;s uh exactly the response is and
[10637.44 - 10642.40] now we got the data like the response in
[10640.20 - 10645.60] a Str string format so we have to
[10642.40 - 10647.44] extract our array from that particular
[10645.60 - 10651.00] string format because you know that
[10647.44 - 10653.88] whenever we call Api like any llm model
[10651.00 - 10657.08] API then we get the response in markdown
[10653.88 - 10660.12] format and and if I got that response in
[10657.08 - 10661.92] markdown format I can&#39;t show that format
[10660.12 - 10664.96] or like I can&#39;t show the list here
[10661.92 - 10667.12] because this UI required a JavaScript
[10664.96 - 10669.56] array so we must need an JavaScript
[10667.12 - 10671.36] array to show all the data with the same
[10669.56 - 10673.84] format because if I just change the
[10671.36 - 10675.88] format of my post data then it&#39;s not
[10673.84 - 10678.00] going to work so I have to maintain the
[10675.88 - 10679.96] format as well as and I also have to
[10678.00 - 10682.08] show that so that&#39;s why I need a
[10679.96 - 10684.88] function that&#39;s actually going to do our
[10682.08 - 10688.92] work so what I did let&#39;s just create a
[10684.88 - 10691.20] function in our script SL scrap.tf file
[10688.92 - 10693.96] as I said earlier this file will be
[10691.20 - 10695.84] contain all the script related code
[10693.96 - 10698.12] that&#39;s we are going to reuse everywhere
[10695.84 - 10700.72] so that&#39;s our function it&#39;s called
[10698.12 - 10703.44] extract Json list from markdown and it
[10700.72 - 10705.96] will reord a argument called markdown
[10703.44 - 10708.04] text and it&#39;s string and then it should
[10705.96 - 10710.28] return iost then you can see that that&#39;s
[10708.04 - 10712.80] the return formation that I want to
[10710.28 - 10716.60] return it from this particular function
[10712.80 - 10718.92] so let&#39;s say if I just go here so so
[10716.60 - 10721.36] this one function is start with a
[10718.92 - 10724.88] regular expression so this expression
[10721.36 - 10727.12] will find all the text related to Json
[10724.88 - 10729.72] or JavaScript Cod is snippes let&#39;s say
[10727.12 - 10732.36] for example I I have a let&#39;s say I just
[10729.72 - 10734.52] make a string like this and this is our
[10732.36 - 10737.68] markdown so it&#39;s like this is a strike
[10734.52 - 10740.40] Json data and we have this one and then
[10737.68 - 10742.80] we have a cation we have a code section
[10740.40 - 10746.08] so the code section actually show like
[10742.80 - 10748.00] this so we have code like Json and then
[10746.08 - 10750.12] it actually close like this and inside
[10748.00 - 10752.84] of that we have that particular Json
[10750.12 - 10755.28] that&#39;s mean uh it actually give the data
[10752.84 - 10758.16] format like this so if I just add like
[10755.28 - 10759.88] name so it&#39;s like Hassan so that&#39;s uh
[10758.16 - 10762.36] how it actually give the data for the
[10759.88 - 10764.32] array it also give you like this so
[10762.36 - 10766.44] sometimes it will be like this and
[10764.32 - 10768.68] sometimes uh it will become like
[10766.44 - 10771.32] JavaScript if you ask JavaScript is
[10768.68 - 10773.80] string uh if you ask JavaScript array if
[10771.32 - 10775.88] you ask like the array in maybe another
[10773.80 - 10778.88] language like python then it might be
[10775.88 - 10781.24] changed to python so mainly I will get
[10778.88 - 10784.32] like JavaScript and Json that&#39;s why what
[10781.24 - 10787.60] I did I added a regular expression which
[10784.32 - 10789.60] will help to retrieve the text from this
[10787.60 - 10792.36] particular quotation so you can see this
[10789.60 - 10794.72] is uh like three black slash which will
[10792.36 - 10796.96] start the quote section and it will end
[10794.72 - 10799.28] with again the same pattern so we will
[10796.96 - 10802.32] get the data inside of the JavaScript uh
[10799.28 - 10805.08] code section or or it could be like Json
[10802.32 - 10807.64] code section so that&#39;s why this juston
[10805.08 - 10810.00] AR regular expression is so it&#39;s
[10807.64 - 10812.40] actually retrieving this particular
[10810.00 - 10815.44] array from the whole markdown text that
[10812.40 - 10817.76] mean any text you give on the markdown
[10815.44 - 10821.24] it will not care it will only care the
[10817.76 - 10823.16] text X that use the pattern like this or
[10821.24 - 10825.40] maybe this and of course that should be
[10823.16 - 10827.40] closed with uh the same pattern like
[10825.40 - 10829.36] this so that&#39;s the regular expression
[10827.40 - 10832.20] which uh I&#39;m going to match with my
[10829.36 - 10835.04] markdown text and let&#39;s just remove this
[10832.20 - 10836.76] and I have created a Jon list which will
[10835.04 - 10839.52] be kind of like ipost list where I&#39;m
[10836.76 - 10841.76] going to retrieve the text and put that
[10839.52 - 10844.52] text inside here and then you can see I
[10841.76 - 10847.60] just uh added a loop to the markdown
[10844.52 - 10849.76] text that mean I am just um executing
[10847.60 - 10852.52] the regular expression with the whole
[10849.76 - 10855.00] text and if I and if it&#39;s matching with
[10852.52 - 10857.92] our regular expression pattern I&#39;m just
[10855.00 - 10859.92] inserting the data into the Json list
[10857.92 - 10863.36] you can see that I&#39;m just inserting the
[10859.92 - 10865.76] whole data in in the Json list array so
[10863.36 - 10868.08] but the summary is all about I just
[10865.76 - 10869.68] asked to Gemini to give me a function a
[10868.08 - 10872.72] proper function that&#39;s going to handle
[10869.68 - 10875.00] our feature I give a markdown text as a
[10872.72 - 10878.40] input and I ask to give me an array and
[10875.00 - 10880.88] I then ask to give me the function to
[10878.40 - 10882.96] perform the whole action and it give me
[10880.88 - 10885.12] the function like this so if you need
[10882.96 - 10887.36] more explanation you can just ask to
[10885.12 - 10889.56] give me the function and ask the
[10887.36 - 10891.48] explanation in your format to understand
[10889.56 - 10893.72] the whole thing but right now here we&#39;re
[10891.48 - 10896.24] just taking the whole string and trying
[10893.72 - 10897.84] to retrieve or matching the format of
[10896.24 - 10900.40] the regular expression and we are
[10897.84 - 10903.12] pushing the string uh into the J list to
[10900.40 - 10905.80] make the whole array working and later
[10903.12 - 10908.08] that I&#39;m actually returning the whole J
[10905.80 - 10911.60] list and of course I&#39;m returning the
[10908.08 - 10914.56] first item from that list because um
[10911.60 - 10917.04] this could give like multiple array
[10914.56 - 10919.68] let&#39;s say in the example as I showed you
[10917.04 - 10922.08] if there are something like JavaScript
[10919.68 - 10924.16] like this if there are two or many like
[10922.08 - 10926.08] this if there are two or many format
[10924.16 - 10928.52] like this then there will be Multiple
[10926.08 - 10930.72] List so what we need we need the first
[10928.52 - 10933.32] list we don&#39;t need the mult other list
[10930.72 - 10936.16] but uh in the response it always give
[10933.32 - 10937.68] you one list but in the code we must
[10936.16 - 10939.80] have to Loop through the patterns that&#39;s
[10937.68 - 10941.76] means is checking with the pattern so if
[10939.80 - 10943.96] it found one pattern then it&#39;s going to
[10941.76 - 10945.96] create an string it&#39;s going to try to
[10943.96 - 10948.24] match if that match then it&#39;s going to
[10945.96 - 10950.24] push that code block let&#39;s say the array
[10948.24 - 10952.48] into that Json list that&#39;s mean if there
[10950.24 - 10954.52] are multiple uh pattern like this then
[10952.48 - 10956.20] it&#39;s going to f all the pattern and then
[10954.52 - 10958.36] it&#39;s going to retrieve all the text
[10956.20 - 10960.68] inside uh of that code block and then
[10958.36 - 10964.24] it&#39;s going to push that digestion list
[10960.68 - 10967.12] so I am Ure that uh it&#39;s going to give
[10964.24 - 10969.24] only one array so that&#39;s why I can just
[10967.12 - 10971.32] say return return the first item from
[10969.24 - 10973.92] that array so that&#39;s uh what happening
[10971.32 - 10976.36] here and it will give the whole array
[10973.92 - 10979.20] that&#39;s mean it will return like I poost
[10976.36 - 10982.20] array not uh something like uh the
[10979.20 - 10984.40] object you can see because uh whenever
[10982.20 - 10986.40] we are retrieving the array from the
[10984.40 - 10988.40] text as I explained that there could be
[10986.40 - 10990.36] multiple code block so if there are
[10988.40 - 10992.08] multiple code block that mean we have to
[10990.36 - 10994.12] make it like a list so that&#39;s why we&#39;re
[10992.08 - 10996.76] just returning the first item and it is
[10994.12 - 10999.04] giving us the list of the first code
[10996.76 - 11001.28] block and now let&#39;s just use this
[10999.04 - 11002.88] function here so I just have to import
[11001.28 - 11005.20] that and that&#39;s it that&#39;s mean whenever
[11002.88 - 11006.92] we got the data we&#39;ll get the data here
[11005.20 - 11009.40] and then we will pass the data as a
[11006.92 - 11012.68] string from uh these functions
[11009.40 - 11014.92] parameters and we are expecting the data
[11012.68 - 11017.88] will be similar formation type like
[11014.92 - 11020.44] ipost and list as well as and if I just
[11017.88 - 11022.92] console the data I can also console it
[11020.44 - 11025.20] and then I&#39;m just simply setting uh the
[11022.92 - 11027.40] local state data with the extracted data
[11025.20 - 11029.80] that mean here I can expect it will come
[11027.40 - 11032.44] like I poost data type so that&#39;s our
[11029.80 - 11034.60] state where I&#39;m just uh updating the
[11032.44 - 11037.84] state here whenever I got the response
[11034.60 - 11040.16] I&#39;m just updating the result and before
[11037.84 - 11043.24] that I&#39;m extracting the array from the
[11040.16 - 11045.88] markdown so that&#39;s uh how the logic of
[11043.24 - 11047.92] when the API got successfully returned
[11045.88 - 11049.92] and let&#39;s say the API got error maybe
[11047.92 - 11052.36] the token error maybe the payload have
[11049.92 - 11054.12] some issue maybe uh some like random
[11052.36 - 11056.16] error so we also have to handle the
[11054.12 - 11058.04] error and as you can see I added like a
[11056.16 - 11060.36] custom toast I&#39;m going to explaining it
[11058.04 - 11062.60] later so here you can see if I got any
[11060.36 - 11065.84] error then I&#39;m going to set the state to
[11062.60 - 11068.60] the empty array so that the UI will not
[11065.84 - 11070.72] show anything other than that so that&#39;s
[11068.60 - 11073.12] why you have to also clean up the array
[11070.72 - 11075.84] and in the finally section I just make
[11073.12 - 11078.64] my set loading or the loading state to
[11075.84 - 11081.72] false to actually turn off the loading
[11078.64 - 11085.16] visually so now let&#39;s understand the
[11081.72 - 11087.72] custom tool that uh what it is so as I
[11085.16 - 11090.88] showed you earlier that we are rendering
[11087.72 - 11093.68] react component in content script so uh
[11090.88 - 11095.68] when I tried to use react hot toast as
[11093.68 - 11097.92] you can see the toaster I have also
[11095.68 - 11099.60] added before the call back that&#39;s mean I
[11097.92 - 11101.84] can use the toaster in anywhere in the
[11099.60 - 11104.20] content Des script but the thing is I
[11101.84 - 11107.44] was not able to get that style default
[11104.20 - 11109.40] style from react um hot toast the toast
[11107.44 - 11112.04] was rendering perfectly but I was not
[11109.40 - 11115.12] getting the style so that time I have to
[11112.04 - 11116.96] create a custom toast to render uh on my
[11115.12 - 11119.08] content script so that&#39;s why you can see
[11116.96 - 11120.68] that uh this is the custom tost so let&#39;s
[11119.08 - 11123.16] just create the custom toast here and
[11120.68 - 11125.00] explain what I actually did there so
[11123.16 - 11127.44] that&#39;s our custom toast function so what
[11125.00 - 11130.04] I did I just asked to Gemini to give me
[11127.44 - 11132.76] a custom toast based on some props like
[11130.04 - 11135.36] message is loading status so I want to
[11132.76 - 11137.52] handle uh some sort of uh different
[11135.36 - 11139.56] state like whenever I also want to
[11137.52 - 11141.00] handle the toast and then the status
[11139.56 - 11143.84] there should be multiple status like
[11141.00 - 11146.36] error info success so I just asked Jim I
[11143.84 - 11149.28] to give me a kind of custom toast
[11146.36 - 11152.00] message using the toast to. custom from
[11149.28 - 11154.36] uh react hot toast to actually give a
[11152.00 - 11157.12] different UI as well as which should
[11154.36 - 11159.84] work in our content script and as you
[11157.12 - 11162.40] can see I also use Tailwind CSS and as
[11159.84 - 11166.28] you saw the first part uh we also added
[11162.40 - 11168.24] the Tailwind CSS style in our main
[11166.28 - 11170.80] render function that&#39;s mean we can use
[11168.24 - 11173.96] Twi CSS so what I did for the custom
[11170.80 - 11176.84] toast I just uh asked to give me a toast
[11173.96 - 11179.12] with tawi CSS in style and with all the
[11176.84 - 11181.60] formation I need and let&#39;s say for the
[11179.12 - 11183.36] icon I use the Lucid Circle icon and
[11181.60 - 11185.28] then all that stuff so that&#39;s like a
[11183.36 - 11187.84] simple function so I just have to call
[11185.28 - 11189.72] this function anywhere and I can pass
[11187.84 - 11192.08] those property and it will give me the
[11189.72 - 11194.64] toast so that&#39;s what just happened so
[11192.08 - 11196.88] let&#39;s just uh try to import this one so
[11194.64 - 11199.16] I can just simply import this say custom
[11196.88 - 11201.16] toast like this and the whole thing
[11199.16 - 11202.60] should work now I should see the toast
[11201.16 - 11205.08] with the style I have given with
[11202.60 - 11207.60] Tailwind CSS because uh I don&#39;t have to
[11205.08 - 11210.64] do that but uh I didn&#39;t found any
[11207.60 - 11213.20] solution when I try to directly render
[11210.64 - 11215.32] uh toast from react hot toast the toast
[11213.20 - 11218.80] actually rendered but the style wasn&#39;t
[11215.32 - 11222.68] there so maybe there are a style path
[11218.80 - 11225.20] which I have to mention in our rendering
[11222.68 - 11228.20] here let&#39;s say in the content script
[11225.20 - 11230.68] index. TSX file as you saw we also
[11228.20 - 11233.04] imported the style that we already have
[11230.68 - 11236.60] in the popup file that&#39;s mean we also
[11233.04 - 11239.12] have to use the style from react hot
[11236.60 - 11241.16] toast that&#39;s mean mean let&#39;s say if I
[11239.12 - 11244.88] found any or not so let&#39;s just say
[11241.16 - 11247.36] import react hot to/ maybe there there
[11244.88 - 11249.56] should be style you can see this one so
[11247.36 - 11252.00] maybe you have to import this one to
[11249.56 - 11254.48] actually get the toast message import
[11252.00 - 11258.40] support so let&#39;s just try it live that
[11254.48 - 11261.84] we can get that or not so we have to use
[11258.40 - 11263.84] like toast. error so let&#39;s just make
[11261.84 - 11266.88] this and we have to use the toast from
[11263.84 - 11269.92] react hot toast like this so and we&#39;re
[11266.88 - 11272.64] not going to use uh for now this custom
[11269.92 - 11274.52] toes because uh in the content I added
[11272.64 - 11276.40] the CSS property and I think it should
[11274.52 - 11279.56] work because now I just directly
[11276.40 - 11282.68] imported the hot toast index. CSS file
[11279.56 - 11285.40] then it should cut the CSS now so let&#39;s
[11282.68 - 11287.64] just change the url or let&#39;s just make
[11285.40 - 11290.00] it like something like this to get the
[11287.64 - 11292.08] API failed so that we can actually catch
[11290.00 - 11296.00] that error and show that response error
[11292.08 - 11297.76] here so let&#39;s just open our subredit and
[11296.00 - 11299.80] if I just go to the Post inside and I
[11297.76 - 11302.24] can now type and if I just click on the
[11299.80 - 11304.28] search that you can see the toast is not
[11302.24 - 11306.48] showing and let&#39;s see the network tab
[11304.28 - 11308.64] that&#39;s what&#39;s happening there so let me
[11306.48 - 11310.12] zoom in and you can see that so if I
[11308.64 - 11312.04] just click on the search nothing
[11310.12 - 11314.36] happening that mean there are an issue
[11312.04 - 11317.12] happening somewhere so okay we are
[11314.36 - 11320.12] getting error here like the custom toast
[11317.12 - 11322.64] so I think uh the code doesn&#39;t get
[11320.12 - 11326.04] updated so we have to rerun the server
[11322.64 - 11329.48] again not the package we have to rerun
[11326.04 - 11331.44] the server like PNP m t so sometimes
[11329.48 - 11333.76] when we change on the content script it
[11331.44 - 11336.52] will not get the latest codes it it
[11333.76 - 11338.92] happen like sometimes uh maybe when we
[11336.52 - 11342.04] change something on here or let&#39;s say if
[11338.92 - 11344.76] we add some asset kind of thing so right
[11342.04 - 11347.20] now we added like the CSS file which
[11344.76 - 11349.32] kind of like external things so we must
[11347.20 - 11351.76] need to restart the server to actually
[11349.32 - 11354.60] get all those latest code and what I can
[11351.76 - 11357.12] see is G giving us error so you can see
[11354.60 - 11359.28] that the error is this particular file
[11357.12 - 11361.48] is missing so that was the issue I was
[11359.28 - 11365.00] also facing that I was not getting the
[11361.48 - 11368.12] style of that react hot toast uh in my
[11365.00 - 11370.24] content. TSX file if I got that style
[11368.12 - 11372.00] then it should directly work but I was
[11370.24 - 11374.88] not getting let&#39;s say is there are any
[11372.00 - 11378.08] other path so if I just say there is a
[11374.88 - 11380.72] headless and it doesn&#39;t have anything so
[11378.08 - 11382.60] let&#39;s say this one let&#39;s just try no we
[11380.72 - 11385.52] are getting the same error kind of uh
[11382.60 - 11388.12] that the style is missing so maybe I
[11385.52 - 11390.44] have to just check some issue from the
[11388.12 - 11392.96] GitHub or maybe I have to check where
[11390.44 - 11395.20] their style file is from the GitHub so
[11392.96 - 11397.32] that I can add that path here and when I
[11395.20 - 11400.24] will add that part I don&#39;t have to
[11397.32 - 11401.96] actually uh make custom toast or
[11400.24 - 11403.80] anything to actually render the toast
[11401.96 - 11405.56] but in this video it will be also
[11403.80 - 11407.84] helpful to learn that&#39;s why I just
[11405.56 - 11410.16] ignore this part to actually not showing
[11407.84 - 11411.80] you the default toast instead how you
[11410.16 - 11414.40] can implement the custom toast in your
[11411.80 - 11417.04] content. script I just try to explain
[11414.40 - 11419.48] that so now let&#39;s back to our custom
[11417.04 - 11421.88] toast to actually render it and see how
[11419.48 - 11424.16] our toast working or not so this one
[11421.88 - 11426.52] will not work so you have to study on
[11424.16 - 11429.64] the their code base to actually found
[11426.52 - 11432.24] find the actual CSS path so that you can
[11429.64 - 11434.68] later use that so what you have to do is
[11432.24 - 11437.40] just simply add that path into your
[11434.68 - 11439.44] index. TSX or like the context. TS file
[11437.40 - 11441.60] that&#39;s it so that&#39;s our custom toast so
[11439.44 - 11443.64] now we should see the toast and of
[11441.60 - 11447.32] course we have to run the server because
[11443.64 - 11450.48] it was got crashed so let&#39;s just try now
[11447.32 - 11454.40] so here is our page and our extension so
[11450.48 - 11457.08] let&#39;s just inspect and open our dep tool
[11454.40 - 11460.32] let&#39;s just zoom in and try to fetch an
[11457.08 - 11462.04] API like this any random text and try to
[11460.32 - 11465.28] search let&#39;s see our search showing or
[11462.04 - 11468.52] not so it&#39;s calling to the API and if I
[11465.28 - 11470.48] just go to the fetch then that&#39;s the API
[11468.52 - 11472.52] that you can see it&#39;s calling like red
[11470.48 - 11473.96] Reddit API so it shouldn&#39;t be calling
[11472.52 - 11476.32] something like that the API should be
[11473.96 - 11478.92] changed so what I have to do maybe we
[11476.32 - 11481.28] didn&#39;t set any end point here that&#39;s why
[11478.92 - 11484.04] because uh right now it was getting a a
[11481.28 - 11486.44] string from the Chrome storage so we
[11484.04 - 11488.28] can&#39;t actually getting the response from
[11486.44 - 11491.28] anywhere and it&#39;s calling that by
[11488.28 - 11494.00] default API from like the Reddit API so
[11491.28 - 11497.08] what we have to do is simply took the
[11494.00 - 11499.84] URL first so the URL will be like this
[11497.08 - 11502.36] this one is the URL and here we have to
[11499.84 - 11505.12] just the URL and for the key let&#39;s just
[11502.36 - 11508.48] add a simple key and that&#39;s it now we
[11505.12 - 11511.44] will get the exact URL of the Gemini so
[11508.48 - 11513.84] if I just now go and try to now click
[11511.44 - 11516.56] again then you can see the UI should be
[11513.84 - 11519.24] changed but still is showing like
[11516.56 - 11522.08] ready.com so it&#39;s like kind of weird so
[11519.24 - 11525.20] you also might face the same issue so
[11522.08 - 11527.60] because we&#39;re using exos so the URL is
[11525.20 - 11530.28] not valid we added like a random string
[11527.60 - 11532.28] here so so sometimes it will cause the
[11530.28 - 11534.56] issue so you have to make like a valid
[11532.28 - 11537.52] URL and then you have to request it so
[11534.56 - 11539.56] now let&#39;s try with any text random Tes
[11537.52 - 11541.48] to get that error so when I click on the
[11539.56 - 11543.96] search now you can see that I&#39;m calling
[11541.48 - 11547.12] the J API and there are the toast as
[11543.96 - 11549.48] well as it&#39;s showing so the test the API
[11547.12 - 11552.64] is kind of like this and as you can see
[11549.48 - 11554.72] that&#39;s like model gini 2.0 flash
[11552.64 - 11557.20] generate content and the key after the
[11554.72 - 11559.52] key and what it giving it giving us the
[11557.20 - 11561.76] error of like this in the details you
[11559.52 - 11564.72] will get the error more details and it
[11561.76 - 11567.68] will say that API key not valid please
[11564.72 - 11569.20] pass a valid API key so that&#39;s how we
[11567.68 - 11571.96] will get the error and we&#39;re going to
[11569.20 - 11574.52] handle that here and even if I try
[11571.96 - 11576.32] multiple times I can just simply get
[11574.52 - 11579.48] that error in the toast format so
[11576.32 - 11581.56] anybody uh entered wrong input with like
[11579.48 - 11584.12] wrong API key or something like that
[11581.56 - 11586.08] then it will get error so that&#39;s how
[11584.12 - 11587.56] we&#39;re actually handling it and the same
[11586.08 - 11590.00] thing we also have to handle in the
[11587.56 - 11592.44] comment model as well as because we also
[11590.00 - 11594.68] have to pass the data for the comment we
[11592.44 - 11597.56] also make need to make a prompt for the
[11594.68 - 11600.52] comment as well as so that&#39;s uh from the
[11597.56 - 11602.76] post section and we&#39;re going to removing
[11600.52 - 11605.56] or like cleaning up the state as well as
[11602.76 - 11607.44] and so on we are also adding the custom
[11605.56 - 11609.76] toast and inside that custom toast is
[11607.44 - 11612.56] just like the simple toast I generated
[11609.76 - 11615.80] from Gemini to give me with react hot
[11612.56 - 11618.20] toast so that&#39;s it for like handling the
[11615.80 - 11621.36] toast now here you can see I&#39;m also
[11618.20 - 11623.80] setting the data in like set CH response
[11621.36 - 11626.00] but I&#39;m not using that Gemini response
[11623.80 - 11628.20] because uh in this particular State I
[11626.00 - 11630.20] will get the array the actual array that
[11628.20 - 11633.52] means I must need to use that array to
[11630.20 - 11636.20] render the UI and and as you can see in
[11633.52 - 11638.64] here I&#39;m also rendering not only uh the
[11636.20 - 11641.08] post but also like it&#39;s the post that&#39;s
[11638.64 - 11643.16] coming from uh the post model like the
[11641.08 - 11645.28] parent where we are extracting the post
[11643.16 - 11647.32] from the real Dom so somehow we have to
[11645.28 - 11649.20] render the post here as well as that&#39;s
[11647.32 - 11651.20] mean when we have the response post then
[11649.20 - 11653.16] we are going to show the response post
[11651.20 - 11656.36] and if we don&#39;t have that then we have
[11653.16 - 11657.56] to render our older post so if I just
[11656.36 - 11659.24] add this logic
[11657.56 - 11660.76] sometimes it will not work I think uh
[11659.24 - 11662.64] not sometimes every time it will not
[11660.76 - 11665.08] work because this gini response is kind
[11662.64 - 11667.32] of like an array and when it got like an
[11665.08 - 11668.84] empty array it&#39;s going to pass it will
[11667.32 - 11670.52] because if we just use this pipe
[11668.84 - 11673.76] operator it&#39;s going to pass so we have
[11670.52 - 11676.16] to check strictly that if there are any
[11673.76 - 11679.40] uh item on that array or not so if there
[11676.16 - 11680.84] are any item on the gini response array
[11679.40 - 11682.32] then we&#39;re going to pass the gini
[11680.84 - 11684.84] response array otherwise we&#39;re going to
[11682.32 - 11686.84] pass our older data that we scrapping
[11684.84 - 11688.24] from the Dr Dom and we&#39;re going to map
[11686.84 - 11690.00] through through the whole data now we
[11688.24 - 11692.20] don&#39;t even have to render multiple times
[11690.00 - 11695.00] we&#39;re just changing the state based on
[11692.20 - 11697.28] it data length so whenever we search and
[11695.00 - 11700.16] get failed we&#39;re also cleaning up our
[11697.28 - 11703.40] state that&#39;s mean if we got error then
[11700.16 - 11705.56] the older data will be gone and we will
[11703.40 - 11708.28] show all of our previous data from the
[11705.56 - 11710.52] real Dom so that&#39;s how the logic I have
[11708.28 - 11712.96] added and also you can see in the count
[11710.52 - 11716.12] we are only showing the post. length we
[11712.96 - 11718.16] also have to show the chimini response.
[11716.12 - 11720.56] length so whenever we got the Gemini
[11718.16 - 11723.44] response. length and if it&#39;s greater
[11720.56 - 11725.64] than zero then it will display otherwise
[11723.44 - 11728.20] it will took the length from the post.
[11725.64 - 11730.04] length so that&#39;s uh the logic for uh
[11728.20 - 11733.28] displaying all this stuff so now let&#39;s
[11730.04 - 11735.72] just perform a real uh query with uh the
[11733.28 - 11738.16] real API key and the endpoint so that we
[11735.72 - 11740.48] can understand what&#39;s going on so I just
[11738.16 - 11742.76] copied my API key and I have just pasted
[11740.48 - 11745.04] it here and I just saved that API key
[11742.76 - 11747.88] now because previously it was wrong so
[11745.04 - 11750.44] now let&#39;s just try to do some query with
[11747.88 - 11752.40] some post so I will just already I have
[11750.44 - 11755.80] some post so let&#39;s just see how many
[11752.40 - 11757.80] posts I have see if I just uh go top of
[11755.80 - 11760.60] that page and if I go to post inside
[11757.80 - 11763.64] then you can see I have 53 post so let&#39;s
[11760.60 - 11766.16] see some of the post to actually ask
[11763.64 - 11768.44] some prom so I want to see the post that
[11766.16 - 11770.96] related to web workers so you can see
[11768.44 - 11772.88] that we have a post called Web workers I
[11770.96 - 11775.00] think that will be better but there are
[11772.88 - 11779.60] other post as well as so let&#39;s just ask
[11775.00 - 11781.36] for give me post related to web workers
[11779.60 - 11783.96] so that&#39;s our promt and let&#39;s just
[11781.36 - 11786.96] inspect and deog from the network tab as
[11783.96 - 11789.16] well as and what should we expect we
[11786.96 - 11791.20] should see the API call should be
[11789.16 - 11792.48] finished successfully and it should
[11791.20 - 11795.36] return the markdown and then the
[11792.48 - 11797.68] markdown should uh retrieve and extract
[11795.36 - 11800.04] the data like the Json and render the
[11797.68 - 11802.12] data here so let&#39;s just see and of
[11800.04 - 11804.16] course it will take sometime if you have
[11802.12 - 11807.68] a lots of data and you can see it only
[11804.16 - 11809.56] give one data and if I just open the API
[11807.68 - 11811.16] call it&#39;s showing like 200 success and
[11809.56 - 11813.04] if you go go to the payload then you can
[11811.16 - 11815.44] see in the content in the parts in the
[11813.04 - 11817.80] parts uh you will get the object and in
[11815.44 - 11819.92] that object you&#39;ll get the text text is
[11817.80 - 11822.00] kind of like your text and you can see
[11819.92 - 11824.72] it&#39;s like a text format the array is
[11822.00 - 11827.28] going to like a json. stringify format
[11824.72 - 11830.04] so the the model will understand what
[11827.28 - 11832.84] I&#39;m trying to get and if you got the
[11830.04 - 11834.96] response as I as I explained you earlier
[11832.84 - 11837.20] that the response. data. candidates then
[11834.96 - 11839.12] the zero so that&#39;s what we are getting
[11837.20 - 11841.16] here so if you can see that we have the
[11839.12 - 11843.92] candidate list in the candidate list we
[11841.16 - 11845.76] have many item like the first item we
[11843.92 - 11848.32] will get the content and as you can use
[11845.76 - 11850.72] see you can also find the other property
[11848.32 - 11853.04] that you can use later the token count
[11850.72 - 11855.12] and other stuff but we need the content
[11853.04 - 11857.68] and inside that content we have the
[11855.12 - 11859.68] parts and also you&#39;ll find the model and
[11857.68 - 11862.00] other property and inside that part we
[11859.68 - 11864.32] have that text and the text you can see
[11862.00 - 11866.84] right now it&#39;s giving the quotation of
[11864.32 - 11868.60] like code block with Json not like
[11866.84 - 11870.68] JavaScript so sometimes it gives in
[11868.60 - 11872.80] JavaScript sometimes gives in Json
[11870.68 - 11875.32] that&#39;s why I added both in the regular
[11872.80 - 11878.08] expression of in the regular expression
[11875.32 - 11880.08] of our scrap uh function so here so
[11878.08 - 11881.92] extract Json list from markdown so here
[11880.08 - 11885.28] you can see Json and the JavaScript so
[11881.92 - 11887.68] make sure B on your need you just modify
[11885.28 - 11890.08] the regular expansion and after that
[11887.68 - 11893.16] this text will actually give like the
[11890.08 - 11897.08] markdown format and this markr format
[11893.16 - 11899.52] retrieving the whole text into an aray
[11897.08 - 11901.48] so you can see this is the log console.
[11899.52 - 11903.84] info we are also showing the extract
[11901.48 - 11906.32] data so if I just open that then you can
[11903.84 - 11908.48] see that&#39;s the list that I&#39;m getting and
[11906.32 - 11910.68] it&#39;s also in the same format that I was
[11908.48 - 11912.40] looking for and that&#39;s why we got the
[11910.68 - 11915.16] same format we just pass the same format
[11912.40 - 11917.12] to render that in our older UI and it&#39;s
[11915.16 - 11919.96] just rendering perfectly and if I just
[11917.12 - 11922.48] click on that particular post I can also
[11919.96 - 11925.00] visit that post easily that&#39;s how the
[11922.48 - 11927.88] logic work so next if I just try to
[11925.00 - 11930.84] remove the text and now if I just search
[11927.88 - 11933.28] again like um let&#39;s just uh see any
[11930.84 - 11936.80] other post that I was looking for let&#39;s
[11933.28 - 11938.84] say the same post is kind of like what
[11936.80 - 11941.04] are the post that related to Advanced
[11938.84 - 11944.24] concept of JavaScript so let&#39;s just ask
[11941.04 - 11947.60] the same question so or maybe ask for
[11944.24 - 11951.08] the reverse one so what are the post
[11947.60 - 11953.04] that related to JavaScript beginner
[11951.08 - 11955.44] concept so the in the demo section I
[11953.04 - 11957.32] showed you to search uh what are the
[11955.44 - 11959.32] post that related to JavaScript Advan
[11957.32 - 11961.04] concept now I am searching like what are
[11959.32 - 11963.16] the post that related to JavaScript
[11961.04 - 11965.64] beginner concept that&#39;s mean it requires
[11963.16 - 11967.56] some kind of brainstorm from the llm to
[11965.64 - 11969.80] actually find out what are the post that
[11967.56 - 11971.84] related to beginner and you can see we
[11969.80 - 11973.28] got four post and it&#39;s saying login
[11971.84 - 11975.32] button change yeah it seems like
[11973.28 - 11978.36] beginner stack on JavaScript logic
[11975.32 - 11980.00] problem solving HTML CSS is also found
[11978.36 - 11982.00] that uh in the description like it&#39;s
[11980.00 - 11983.32] mentioning HTML CSS which kind of like
[11982.00 - 11984.92] beginner friendly things like big
[11983.32 - 11986.92] companies that don&#39;t use framework
[11984.92 - 11989.36] that&#39;s also kind of like General begin
[11986.92 - 11991.84] friendly post and then we have this one
[11989.36 - 11994.08] article to purse an integer why does
[11991.84 - 11995.88] JavaScript part integer treat keycap
[11994.08 - 11998.88] Emoji as integer so that&#39;s also like
[11995.88 - 12001.92] kind of a beginner friendly uh post so
[11998.88 - 12005.16] if I just ask for advanced now so
[12001.92 - 12007.12] Advanced concept then now it should give
[12005.16 - 12009.28] all the post that related to Advanced
[12007.12 - 12013.80] concept and as you can see it gives us
[12009.28 - 12016.24] six post and one post is reack EAC reack
[12013.80 - 12018.52] I don&#39;t know what those are so these are
[12016.24 - 12020.24] like seems like Advanced concept and
[12018.52 - 12022.36] then we have lips in JavaScript yeah
[12020.24 - 12024.16] that&#39;s a kind of advanced concept or
[12022.36 - 12026.40] intermediate concept you could say then
[12024.16 - 12028.80] Benchmark related things uh we have
[12026.40 - 12032.20] JavaScript synchronous await M my script
[12028.80 - 12034.36] engine optimization your variables then
[12032.20 - 12036.52] um kind of uh the same post that it
[12034.36 - 12039.28] gives like the for the beginner so yeah
[12036.52 - 12041.60] it&#39;s actually uh working uh the whole
[12039.28 - 12043.36] thing will depend on the LM the model
[12041.60 - 12046.72] that you are using and I&#39;m using right
[12043.36 - 12049.96] now the flash 2.0 and recently gimini
[12046.72 - 12052.16] launch um gimini 2.5 Pro which is also
[12049.96 - 12054.92] fine model not only fine the best model
[12052.16 - 12056.64] and you can also use it free so you can
[12054.92 - 12059.88] just simply use that as well as but
[12056.64 - 12062.48] before using that make sure you try with
[12059.88 - 12065.36] the prom that you are actually added
[12062.48 - 12067.84] into your code so before you added that
[12065.36 - 12069.88] prompt you must need to try that prompt
[12067.84 - 12071.92] here so that you can make sure that okay
[12069.88 - 12074.24] you are getting the actual result with
[12071.92 - 12077.60] that model let&#39;s say if I just use the
[12074.24 - 12079.48] 2.5 Pro from here then it must need to
[12077.60 - 12082.12] be the result must need to be match with
[12079.48 - 12084.04] your desire so that&#39;s why you must have
[12082.12 - 12086.36] to check that here first then you have
[12084.04 - 12088.92] to add that prompt into your code I
[12086.36 - 12091.80] think that will work fine so I think
[12088.92 - 12093.88] that&#39;s all about our post model and I
[12091.80 - 12096.64] believe that&#39;s working fine and the
[12093.88 - 12098.56] loading is also working fine if I want
[12096.64 - 12101.12] some additional feature like there are
[12098.56 - 12103.16] some common prompt I want to add then I
[12101.12 - 12105.96] can add a drop down where I can add some
[12103.16 - 12108.20] common prompt or like um the common
[12105.96 - 12110.68] things that I search for or maybe I can
[12108.20 - 12112.92] create some card to uh get the
[12110.68 - 12115.68] statistics data and there are I can add
[12112.92 - 12118.40] multiple filter and a lot of stuff if I
[12115.68 - 12121.56] want and uh if I want to add improve the
[12118.40 - 12123.28] UI I can also do that uh by just um
[12121.56 - 12125.24] grabbing the loading right now the
[12123.28 - 12128.68] loading is not well so it&#39;s like just
[12125.24 - 12130.76] showing like loading so you can add also
[12128.68 - 12133.00] some uh progress bar or some sort of
[12130.76 - 12135.92] other stuff I think that will be work
[12133.00 - 12138.56] fine so now let&#39;s just uh work on the
[12135.92 - 12141.76] comment and after that we can just
[12138.56 - 12144.00] finish the project easily so the rest
[12141.76 - 12146.20] thing is like the comment functionality
[12144.00 - 12148.72] we need to handled so for the comment we
[12146.20 - 12151.92] also need the similar function to handle
[12148.72 - 12153.44] our comment API call but in that
[12151.92 - 12155.08] function we also require the post
[12153.44 - 12156.40] because uh as I said earlier that we
[12155.08 - 12161.08] also need the post as well as the
[12156.40 - 12163.28] comment to understand llm better on our
[12161.08 - 12164.92] context so that&#39;s why we need post as
[12163.28 - 12167.64] well as the comments and as you can see
[12164.92 - 12170.20] we are getting post and the comment and
[12167.64 - 12172.04] uh because we are using the our search
[12170.20 - 12173.88] component which will give the search
[12172.04 - 12176.16] query when we trigger that function so
[12173.88 - 12178.00] we just have to add that method here in
[12176.16 - 12180.04] the handle search and then we are ready
[12178.00 - 12182.56] to go we are ready to go for call this
[12180.04 - 12185.08] function as like as we did on the post
[12182.56 - 12187.60] and we have we need a state for managing
[12185.08 - 12190.16] the data right now it will not uh need
[12187.60 - 12192.64] the exract function that we did here
[12190.16 - 12194.08] like exract Json list from markdown
[12192.64 - 12197.32] instead we are going to use just the
[12194.08 - 12200.88] simple response that we get from the API
[12197.32 - 12203.00] because if you look into the UI and uh
[12200.88 - 12205.32] if you go to the comment inside then you
[12203.00 - 12207.28] can see that we are rendering a markdown
[12205.32 - 12209.68] text that mean we will see all the
[12207.28 - 12211.48] commment list and when we ask anything
[12209.68 - 12213.20] in the prompt we only want to show the
[12211.48 - 12215.00] response not like all the comment
[12213.20 - 12217.16] because we need answer from those
[12215.00 - 12219.08] comment not like all those comment in
[12217.16 - 12221.80] the list so that&#39;s why we don&#39;t need to
[12219.08 - 12224.56] stack those comment list separately we
[12221.80 - 12227.24] just instead use the response directly
[12224.56 - 12229.52] from the API and this function the same
[12227.24 - 12232.12] thing we are making the loading State
[12229.52 - 12234.40] true then we are making the response
[12232.12 - 12236.20] state to the null you can see the type
[12234.40 - 12239.32] is different now it&#39;s a string and null
[12236.20 - 12241.88] but for the post it was uh like I poost
[12239.32 - 12245.00] array so that&#39;s the difference so but
[12241.88 - 12247.36] that&#39;s name is kind of same yeah and we
[12245.00 - 12249.20] already have the URL so what you can do
[12247.36 - 12251.40] also you can refactor this part like
[12249.20 - 12253.16] handle search because the URL and making
[12251.40 - 12255.68] payload is kind of like common we can
[12253.16 - 12257.60] also refactor this part so I just didn&#39;t
[12255.68 - 12260.32] refactor it I just make it like simple
[12257.60 - 12262.84] to understand so that&#39;s why it look like
[12260.32 - 12265.68] redundant so that&#39;s the URL with the
[12262.84 - 12267.96] same endpoint and the API key because we
[12265.68 - 12269.84] are using this use from data which is
[12267.96 - 12272.12] kind of like the reusable hoop that we
[12269.84 - 12275.00] used uh in the post section as well as
[12272.12 - 12277.08] so that&#39;s making our URL and then the
[12275.00 - 12279.84] payload is kind of different here not
[12277.08 - 12282.12] fully different but uh you can see that
[12279.84 - 12284.88] there are an error like the type error
[12282.12 - 12287.48] so maybe the type of the post was not
[12284.88 - 12290.40] work so that was like only object so it
[12287.48 - 12292.68] should be like the array of object and
[12290.40 - 12295.28] now you can see the error should gone y
[12292.68 - 12298.40] so what I&#39;m doing in the payload is I
[12295.28 - 12300.16] give the prompt as like as I give in the
[12298.40 - 12301.88] post so this is the prompt like the
[12300.16 - 12304.24] search query that&#39;s coming from the
[12301.88 - 12306.24] parameter and then we have the list of
[12304.24 - 12309.04] the comment so this is data set of
[12306.24 - 12310.80] comments in JS array json. stringify
[12309.04 - 12313.24] comment so the same thing happening here
[12310.80 - 12315.64] as well as but now one tweak is we are
[12313.24 - 12318.88] also sending the data set of the post
[12315.64 - 12322.20] that mean if I go to any post details
[12318.88 - 12324.16] let&#39;s say this one then you can see that
[12322.20 - 12326.64] we already have that post as well as
[12324.16 - 12328.64] sometimes we also have description so
[12326.64 - 12331.20] let&#39;s say if I just go there then you
[12328.64 - 12334.40] can see it has some short description so
[12331.20 - 12335.88] for AI or llm a single data is also
[12334.40 - 12338.24] important to actually understand the
[12335.88 - 12340.20] context so sometimes if you doesn&#39;t give
[12338.24 - 12341.88] the description then llm will not
[12340.20 - 12344.40] understand what actually the post is for
[12341.88 - 12346.64] so you must have to give the whole data
[12344.40 - 12348.52] that you got so every data you got that
[12346.64 - 12350.52] will help to improve the context you
[12348.52 - 12352.88] must need to pass that so that&#39;s why I&#39;m
[12350.52 - 12355.16] just passing the data set like the post
[12352.88 - 12357.28] and you can see the post uh from here
[12355.16 - 12359.76] and the post I&#39;m getting and I&#39;m just
[12357.28 - 12362.28] sending the post fast array and that&#39;s
[12359.76 - 12364.12] mean I also have to pass the whole post
[12362.28 - 12366.28] so let&#39;s just see we are passing the
[12364.12 - 12367.80] whole post or not right now we are not
[12366.28 - 12369.76] passing the whole post so we are just
[12367.80 - 12371.32] passing the first element so let&#39;s just
[12369.76 - 12373.16] make it like post that mean we&#39;re
[12371.32 - 12375.08] passing the array of the post and here
[12373.16 - 12378.12] when we are getting the array we&#39;re just
[12375.08 - 12380.20] making uh our first element in the
[12378.12 - 12382.08] string if I format so that the prompt
[12380.20 - 12384.48] become like this is our prompt this is
[12382.08 - 12386.80] our comments and this is the data set of
[12384.48 - 12388.24] the post and now based on this post data
[12386.80 - 12391.08] set and the comment data set and the
[12388.24 - 12392.76] prompt give me what it ask on the prompt
[12391.08 - 12394.84] not any other text that mean it will
[12392.76 - 12397.48] only give what it actually asks from The
[12394.84 - 12399.68] Prompt and that&#39;s actually our main
[12397.48 - 12401.56] prompt so we are just making a prompt
[12399.68 - 12404.32] inside of a prompt so that&#39;s kind of
[12401.56 - 12406.76] like it so yeah it was really fun to
[12404.32 - 12409.92] make the project and I think you will
[12406.76 - 12411.92] also enjoy the video if you watch fully
[12409.92 - 12415.48] and all the things that we are building
[12411.92 - 12417.64] and we also have to import here the X to
[12415.48 - 12420.76] call the API and this is the same logic
[12417.64 - 12422.92] we did on the post section uh here and
[12420.76 - 12424.04] we also have to reest the post because
[12422.92 - 12426.16] this is kind of like the same we can
[12424.04 - 12428.48] also refactor this part like this part
[12426.16 - 12430.68] this part uh here like the whole try
[12428.48 - 12433.20] catch but for now let&#39;s just uh keep it
[12430.68 - 12435.80] simple and um that&#39;s the same uh
[12433.20 - 12438.20] response we will get as like as we get
[12435.80 - 12441.00] from the post so the same will be happen
[12438.20 - 12443.64] here we&#39;ll get that in candidates first
[12441.00 - 12445.92] array then this then we are setting the
[12443.64 - 12448.60] response data in our state like the
[12445.92 - 12451.44] Jiminy response State and we will get
[12448.60 - 12453.68] that response in this particular State
[12451.44 - 12455.24] now we can just simply use that where
[12453.68 - 12456.96] here where we are showing the markdown
[12455.24 - 12459.36] text so we can just simply get rid of
[12456.96 - 12461.56] our static test instead we can show the
[12459.36 - 12464.16] gimin response text and it will come
[12461.56 - 12466.16] like a markdown format string format and
[12464.16 - 12469.00] it&#39;s going to render the whole UI in a
[12466.16 - 12470.52] markdown UI and that&#39;s what I need and
[12469.00 - 12472.96] as well as you can see the custom tools
[12470.52 - 12475.80] need to be imported so let&#39;s just import
[12472.96 - 12478.20] uh it from the common component and also
[12475.80 - 12480.20] added the message as well as the status
[12478.20 - 12482.36] so if I need to add different status
[12480.20 - 12484.44] let&#39;s say success or if I need to add
[12482.36 - 12486.36] loading I can also handle all this stuff
[12484.44 - 12488.68] here so the code is there so I can just
[12486.36 - 12491.08] simply reuse that so that was the logic
[12488.68 - 12493.52] so now let&#39;s just experiment that our
[12491.08 - 12497.12] comment model is working or not so for
[12493.52 - 12499.48] that case I have to go any post details
[12497.12 - 12502.36] so right now I am here let&#39;s just find a
[12499.48 - 12505.44] post which have a lots of comments so I
[12502.36 - 12507.84] think we should uh find with the top
[12505.44 - 12510.56] maybe filter with the top and as you can
[12507.84 - 12513.36] see it has 29 comments and I think that
[12510.56 - 12517.20] will be working fine and what about that
[12513.36 - 12519.40] particular uh post is about in defense
[12517.20 - 12522.32] of typescript enams you are probably
[12519.40 - 12523.84] using it wrong uh okay so I don&#39;t know
[12522.32 - 12527.04] what is the context it&#39;s actually
[12523.84 - 12529.40] referring a Blog and there are so many
[12527.04 - 12532.04] uh comment as well as so let&#39;s just see
[12529.40 - 12534.56] our comment inside working or not and
[12532.04 - 12537.32] yes we found 13 comments I think there
[12534.56 - 12539.60] are several replies on all of these
[12537.32 - 12541.80] comments so I have to open those reply
[12539.60 - 12543.40] as well as so let&#39;s just find out all
[12541.80 - 12545.56] these reply so you can see there are
[12543.40 - 12547.84] lots of text so if you are a human and
[12545.56 - 12550.36] try to read all these text it&#39;s really
[12547.84 - 12552.88] hard and unproductive to you know
[12550.36 - 12555.12] understand those concept or like study
[12552.88 - 12557.48] those comment which is not efficient so
[12555.12 - 12559.80] that&#39;s why we somehow need uh some sort
[12557.48 - 12561.68] of um automated task to actually give me
[12559.80 - 12564.24] all the results so you can see I just
[12561.68 - 12566.60] wrap up all those comments here so now I
[12564.24 - 12569.56] can just uh see the comment inside I
[12566.60 - 12572.76] have 20 comment so now I can just ask
[12569.56 - 12575.32] anything from the comment so let&#39;s ask
[12572.76 - 12579.08] like what are the idea people sharing so
[12575.32 - 12580.92] what are the main idea people sharing so
[12579.08 - 12583.16] I just need to get the summarized
[12580.92 - 12584.80] version so that mean uh I can just ask
[12583.16 - 12586.12] this prom to actually get the result and
[12584.80 - 12588.24] you can see that people are sharing
[12586.12 - 12590.76] ideas about the use of typescript enam
[12588.24 - 12593.52] specifically whether typescript enam are
[12590.76 - 12596.88] useful or problematic many believe they
[12593.52 - 12598.76] are often misused that&#39;s mean some of uh
[12596.88 - 12601.12] the most people are believing believe
[12598.76 - 12604.04] most people believe that some of them
[12601.12 - 12606.48] are misused okay that&#39;s people opinion
[12604.04 - 12608.68] then the drawback of typescript enam is
[12606.48 - 12610.40] like code generation tree shaking issue
[12608.68 - 12613.12] and a lot of stuff people are mentioning
[12610.40 - 12615.24] then proper use case historical contents
[12613.12 - 12617.16] and so on so people are actually um
[12615.24 - 12619.76] putting their opinion here so that&#39;s
[12617.16 - 12622.32] mean uh the whole comments is kind of
[12619.76 - 12624.40] like sharing their opinion so I think
[12622.32 - 12626.72] that will not what I was looking for
[12624.40 - 12628.68] let&#39;s just find out something else and I
[12626.72 - 12631.84] have to find out with this month that&#39;s
[12628.68 - 12634.32] mean in this JavaScript subreddit what
[12631.84 - 12637.36] is the post that actually got super
[12634.32 - 12639.16] viral so I think this one got 71 comment
[12637.36 - 12641.16] which is a 10x faster which I already
[12639.16 - 12643.80] showed you on the demo so let&#39;s just
[12641.16 - 12646.08] find another one so this is kind of uh
[12643.80 - 12648.60] another one which is kind of like by
[12646.08 - 12652.72] plus so the cargo for JavaScript V so
[12648.60 - 12654.56] some sort of like that so 10 Tech forms
[12652.72 - 12657.40] great I think this one could be
[12654.56 - 12659.24] beneficial for me so patterns for memory
[12657.40 - 12661.12] efficient Dom manipulation with modern
[12659.24 - 12663.36] vanilla JavaScript that&#39;s mean it&#39;s kind
[12661.12 - 12666.20] of like uh new thing you can learn so
[12663.36 - 12669.08] now I can apply my comment inside here
[12666.20 - 12671.40] so there are too many rep so let&#39;s just
[12669.08 - 12673.88] open some of the Hidden reply from the
[12671.40 - 12676.28] accordion and try to prompt with our
[12673.88 - 12680.36] comment so we have 14 so I I want to
[12676.28 - 12682.16] know what uh what are the concept people
[12680.36 - 12684.60] people sharing so let&#39;s see what are the
[12682.16 - 12687.48] concept people sharing about that so
[12684.60 - 12689.48] efficient Dom manipulation with vanilla
[12687.48 - 12692.76] JavaScript so it is showing like text
[12689.48 - 12695.28] content versus inner text then uh it&#39;s
[12692.76 - 12697.40] mentioning weak maps for data binding
[12695.28 - 12699.40] garbage collection create document
[12697.40 - 12702.12] fragment that&#39;s another one then
[12699.40 - 12704.08] finalization registry uh for garbage
[12702.12 - 12706.52] collection call that mean these are the
[12704.08 - 12709.08] core Point people mentioning and you can
[12706.52 - 12711.20] see that how easy it is to play with all
[12709.08 - 12712.52] the comments I don&#39;t even have to
[12711.20 - 12715.08] actually read all those comment I can
[12712.52 - 12718.80] just simply ask anything here so let&#39;s
[12715.08 - 12721.40] ask uh something else let&#39;s say about uh
[12718.80 - 12726.00] the create document fragment so let&#39;s
[12721.40 - 12728.72] just ask why we need to use fragment for
[12726.00 - 12731.44] optimization based on the comment or
[12728.72 - 12734.56] your knowledge that&#39;s mean now gimin
[12731.44 - 12736.88] will use its knowledge to get this
[12734.56 - 12739.04] particular keyword to find out and also
[12736.88 - 12741.04] it will took that comment as well as to
[12739.04 - 12742.96] give me the explanation that I was
[12741.04 - 12744.84] looking for let&#39;s see what it gives so
[12742.96 - 12747.16] is like used for optimization because
[12744.84 - 12750.72] directly manipulation the Dom repeatedly
[12747.16 - 12752.80] can be slow and yeah I think this is the
[12750.72 - 12755.40] result or the response that come from
[12752.80 - 12757.40] Gemini and it analyzes the comment first
[12755.40 - 12759.60] then it actually give the response and
[12757.40 - 12762.68] if I just ask to give me the actual
[12759.60 - 12765.88] comment so let&#39;s just ask give me the
[12762.68 - 12768.16] actual comment related to this I think
[12765.88 - 12770.80] think it will be like comments so let&#39;s
[12768.16 - 12772.80] see this is I&#39;m just assuming this is
[12770.80 - 12775.00] not from the comments this is from the
[12772.80 - 12777.48] llm and if I just search with this
[12775.00 - 12780.44] command now I should see this is the
[12777.48 - 12782.80] comment actual so it this was the writer
[12780.44 - 12784.92] and an alternative to using do create
[12782.80 - 12788.00] document fragment and apply child is
[12784.92 - 12790.16] just spread in a JS array into appen it
[12788.00 - 12792.68] has the same behavior of inserting them
[12790.16 - 12796.04] all at once so that was the comment but
[12792.68 - 12798.44] I asked why it&#39;s beneficial to use that
[12796.04 - 12800.84] or like how it&#39;s optimizing or whatever
[12798.44 - 12802.72] so then it actually took that comment it
[12800.84 - 12804.64] took our prompt it took all the comment
[12802.72 - 12808.28] it took the post and then it actually
[12804.64 - 12811.20] return our Desir result brainstorming by
[12808.28 - 12814.08] the model so that&#39;s how we can use this
[12811.20 - 12816.48] tool to actually make us more productive
[12814.08 - 12819.28] when we actually read those comment when
[12816.48 - 12821.36] we find out any sort of post that we are
[12819.28 - 12823.88] looking for let&#39;s say we are interested
[12821.36 - 12826.48] on some sort of JavaScript react post
[12823.88 - 12828.24] every time then we have to play with or
[12826.48 - 12830.80] like we have to add a common prom that
[12828.24 - 12832.80] will always fetch or help to give you
[12830.80 - 12835.04] all the post that related to JavaScript
[12832.80 - 12837.52] or react so that&#39;s how you can directly
[12835.04 - 12839.96] use it your daily basis when you&#39;re
[12837.52 - 12842.20] using Reddit and I think that&#39;s really
[12839.96 - 12845.28] really cool and also Gemini gives you
[12842.20 - 12847.04] like free uh API handling and there are
[12845.28 - 12850.08] some limit but you can also work daily
[12847.04 - 12852.40] basis with no other issue and if you do
[12850.08 - 12855.36] so then you can make you more productive
[12852.40 - 12858.20] on actually uh using Reddit as a social
[12855.36 - 12861.20] media the platform so now if I just uh
[12858.20 - 12864.16] summarize or look up the whole uh Chrome
[12861.20 - 12867.12] extension what we develop what we did so
[12864.16 - 12869.16] first we develop the popup where we have
[12867.12 - 12871.28] the form endpoint and the API key then
[12869.16 - 12873.76] we can save we can also show the toast
[12871.28 - 12876.80] as I showed you earlier then after
[12873.76 - 12878.92] saving that we see how we can write the
[12876.80 - 12881.84] code for the menu this is called the
[12878.92 - 12884.24] context menu here and then whenever we
[12881.84 - 12886.76] call the menu we also see how we can do
[12884.24 - 12888.76] the messaging stuff Chrome extension or
[12886.76 - 12890.68] maybe in the any browser extension how
[12888.76 - 12893.20] you can use different plug-in library
[12890.68 - 12896.40] from wxt to uh make those things work
[12893.20 - 12898.28] out so that&#39;s it uh for the menu and
[12896.40 - 12901.24] then when we click on a menu then we
[12898.28 - 12903.56] should render the UI in the shadow rout
[12901.24 - 12906.04] using react that&#39;s also you have learned
[12903.56 - 12908.68] from this video and then uh the same
[12906.04 - 12911.76] thing goes for the comment then we added
[12908.68 - 12914.72] uh the input field as well as like this
[12911.76 - 12917.56] one so here we can type and then we can
[12914.72 - 12920.04] call Api then we also handle the API
[12917.56 - 12923.08] error with showing the toast and then
[12920.04 - 12926.76] also you show that you also learned that
[12923.08 - 12928.60] how we can um convert our markdown text
[12926.76 - 12930.76] into our Desir result or like there
[12928.60 - 12932.80] should be a compiler type functionality
[12930.76 - 12934.04] that&#39;s going to handle our compilation
[12932.80 - 12936.08] that&#39;s going to take a string of
[12934.04 - 12938.84] markdown then it gives uh some other
[12936.08 - 12941.00] text that you are looking for so I also
[12938.84 - 12943.80] try to show you all the steps that
[12941.00 - 12946.00] actually helpful for uh performing this
[12943.80 - 12948.08] kind of functionality so you can just uh
[12946.00 - 12950.16] grab this concept you can use it to any
[12948.08 - 12952.44] other social media platform to use it
[12950.16 - 12955.04] better you can add uh kind of like
[12952.44 - 12957.68] multiple functionality to make the whole
[12955.04 - 12960.04] project like more efficient or more
[12957.68 - 12962.44] productive so I believe you understand
[12960.04 - 12964.32] uh the whole logical part so if I just
[12962.44 - 12966.72] explain you a little bit about the code
[12964.32 - 12968.76] structure we have the entrypoint folder
[12966.72 - 12970.40] where we have the popup codes and inside
[12968.76 - 12973.28] the popup code is kind of like a whole
[12970.40 - 12975.40] react app where we just uh render the
[12973.28 - 12976.60] from component and then we have hooks
[12975.40 - 12978.96] which which is kind of like a common
[12976.60 - 12980.96] hooks which will return some data from
[12978.96 - 12983.48] the Chrome storage as well as we have
[12980.96 - 12985.72] this state from the react user State
[12983.48 - 12987.68] that&#39;s going to handle our from data and
[12985.72 - 12989.32] then we have the content folder as well
[12987.68 - 12990.96] as the background folder and the
[12989.32 - 12992.96] background folder is helping us to
[12990.96 - 12995.36] create all the menus the context menus
[12992.96 - 12997.56] and the content folder is kind of like a
[12995.36 - 12999.32] mix with multiple react component as
[12997.56 - 13002.36] well as some script that actually help
[12999.32 - 13005.16] us to render all the model and all the
[13002.36 - 13007.52] logic that is doing and inside all those
[13005.16 - 13009.56] model you can see that in react raw
[13007.52 - 13011.28] react we are actually calling the API we
[13009.56 - 13014.08] are actually getting the response from
[13011.28 - 13015.72] the API and API and we are manipulating
[13014.08 - 13018.08] the response and we are actually getting
[13015.72 - 13020.00] the desired result from the whole uh
[13018.08 - 13022.04] process so that&#39;s how the whole thing
[13020.00 - 13023.56] work and we also created like a common
[13022.04 - 13026.00] folder where we are managing some of the
[13023.56 - 13028.16] common components like header then the
[13026.00 - 13030.84] uh index file that&#39;s like one of the
[13028.16 - 13033.36] important one which actually help to re
[13030.84 - 13035.08] usably create multiple react element and
[13033.36 - 13037.12] you can insert that into your Shadow
[13035.08 - 13038.96] rout so that part is really important so
[13037.12 - 13040.72] I would highly recommend watch multiple
[13038.96 - 13042.80] time if you don&#39;t understand the whole
[13040.72 - 13044.44] part and then we have the search
[13042.80 - 13046.80] component that&#39;s going to handle uh the
[13044.44 - 13049.64] search separately we can just reuse that
[13046.80 - 13051.76] anywhere and uh then in the content
[13049.64 - 13053.88] folder we have the main content file
[13051.76 - 13056.80] which is called the index. TSX which
[13053.88 - 13059.32] actually um helping us to define the
[13056.80 - 13061.12] content script with the main function
[13059.32 - 13062.76] and where we are receiving the message
[13061.12 - 13065.72] from the background script then we are
[13062.76 - 13067.80] added switch case to actually um WR
[13065.72 - 13069.64] render multiple UI we can name it
[13067.80 - 13071.76] anything right now it&#39;s like not good
[13069.64 - 13073.32] name variable name so we can just change
[13071.76 - 13075.84] it then you can see we are passing
[13073.32 - 13077.84] different type as well as uh here we
[13075.84 - 13080.12] have that function that&#39;s actually uh
[13077.84 - 13082.76] processing all the model uh with the
[13080.12 - 13084.88] type as well as uh we are extracting
[13082.76 - 13086.60] data from the real Dom with these
[13084.88 - 13089.32] functions where you can see that we are
[13086.60 - 13090.92] selecting like SSH r- post we are
[13089.32 - 13093.28] getting those information from the get
[13090.92 - 13094.84] attribute method and the same thing we
[13093.28 - 13097.64] are happening uh the same thing we&#39;re
[13094.84 - 13100.04] doing with like the comments and as well
[13097.64 - 13101.88] as we have the exract Json list from
[13100.04 - 13103.72] markdown function that&#39;s actually
[13101.88 - 13105.60] parsing the markdown and then it&#39;s
[13103.72 - 13107.88] actually Distributing the array from
[13105.60 - 13110.16] that markdown so that&#39;s how all the
[13107.88 - 13112.12] logic is working and if you just watch
[13110.16 - 13113.76] this full video you don&#39;t need the whole
[13112.12 - 13116.04] code you can just simply watch my
[13113.76 - 13118.24] process and you can simply just start
[13116.04 - 13120.96] building the same uh project I have
[13118.24 - 13122.60] built or if you have similar idea you
[13120.96 - 13125.08] can just implement the whole thing by
[13122.60 - 13127.16] yourself so before wrapping up the video
[13125.08 - 13129.80] Let&#39;s Talk talk about unit testing uh
[13127.16 - 13132.24] with wxt framework so if you go to the
[13129.80 - 13134.56] dock of wxt you will find the unit
[13132.24 - 13137.36] testing section as well as e2e testing
[13134.56 - 13140.52] section and in my channel I have e2e
[13137.36 - 13143.04] testing video on March with playrite
[13140.52 - 13146.36] Cypress boat so you can use play right
[13143.04 - 13148.72] as well as in wxt framework for actually
[13146.36 - 13150.64] write your Chrome extension un n to end
[13148.72 - 13152.68] test code that&#39;s one and then we have
[13150.64 - 13156.36] the unit testing so for the unit testing
[13152.68 - 13159.52] you can use uh G or uh any library but
[13156.36 - 13161.56] vest is the one that actually wxt
[13159.52 - 13163.12] provide first class support so you don&#39;t
[13161.56 - 13166.24] have to do a lot of stuff you just have
[13163.12 - 13168.76] to install vest and then you can just
[13166.24 - 13170.88] simply write code so let&#39;s install vest
[13168.76 - 13175.04] first so for that case we have to
[13170.88 - 13176.96] install vites with pnpm install vites
[13175.04 - 13178.92] and after successfully installed you
[13176.96 - 13181.72] have to create a file called Vitus
[13178.92 - 13187.32] config so you will get the file code in
[13181.72 - 13187.32] the doc so the file name will be vest do
[13197.84 - 13200.84] config.cfg
[13203.68 - 13208.68] testing uh as the plugin for
[13206.00 - 13210.56] configuration the whole thing so and one
[13208.68 - 13212.80] thing you have to do as well as which is
[13210.56 - 13214.64] like in the script property in the
[13212.80 - 13216.64] package.json you have to Define that
[13214.64 - 13219.28] script for the test test so so we can
[13216.64 - 13221.72] declare two script one will be for test
[13219.28 - 13223.48] that&#39;s like v test it will only run in
[13221.72 - 13226.08] headless mode that&#39;s mean there will not
[13223.48 - 13229.36] be an UI you will see all the result in
[13226.08 - 13232.24] the terminal and then we have test- UI
[13229.36 - 13234.44] which will give you a separate UI kind
[13232.24 - 13236.08] of things that&#39;s also kind of good I
[13234.44 - 13239.64] will show you a little bit later let&#39;s
[13236.08 - 13242.84] just try to write some demo test code in
[13239.64 - 13245.52] our project I think uh not demo I can
[13242.84 - 13248.36] add real test code for our script which
[13245.52 - 13251.16] is in the content uh folder we have the
[13248.36 - 13253.56] script and in the script these are the
[13251.16 - 13255.88] pure function that I can write unit test
[13253.56 - 13259.16] form so let&#39;s just write some test code
[13255.88 - 13261.72] for this file so that&#39;s all our test
[13259.16 - 13264.12] code and you might wondering I write
[13261.72 - 13266.32] those test code no I didn&#39;t write any
[13264.12 - 13269.84] lines of this test code I just generated
[13266.32 - 13272.24] it from J GPT and maybe G so now it is
[13269.84 - 13275.76] writing test code is like ice cream so
[13272.24 - 13278.20] you will find uh or like you will write
[13275.76 - 13281.16] thousand line of test code uh just using
[13278.20 - 13282.72] gemini or maybe GPT so yeah you just
[13281.16 - 13284.64] have to understand the process or like
[13282.72 - 13286.40] the steps that&#39;s happening and also the
[13284.64 - 13288.16] test suits and the case what are the
[13286.40 - 13290.16] test case you are covering so you have
[13288.16 - 13291.76] to actually identifying them and then
[13290.16 - 13293.68] you have to generate a test code for
[13291.76 - 13295.88] them so that&#39;s why I&#39;m not making uh in
[13293.68 - 13298.56] details um explanation for those test
[13295.88 - 13300.60] code so if you dedicatedly want any
[13298.56 - 13302.48] video about v test or any sort of unit
[13300.60 - 13305.28] testing Library just uh comment down
[13302.48 - 13307.04] this video then I can edit that uh
[13305.28 - 13308.56] particular Topic in my video list as
[13307.04 - 13311.04] well as so that you can get also
[13308.56 - 13313.64] benefited because um if you even just
[13311.04 - 13315.48] generate all the test code from gemni
[13313.64 - 13318.08] sometimes the code becomes like thousand
[13315.48 - 13320.76] line or maybe uh maybe 500 line more
[13318.08 - 13322.56] than that so when you divar something on
[13320.76 - 13324.28] those test code you must need the
[13322.56 - 13325.88] knowledge of the understanding of the
[13324.28 - 13328.28] testing so if you don&#39;t have that
[13325.88 - 13330.88] knowledge you just copy the Cod and add
[13328.28 - 13333.64] it uh into your code base then you are
[13330.88 - 13335.56] not going to manage that long term so
[13333.64 - 13337.76] maybe in the short term you can apply
[13335.56 - 13339.84] them you can add some test code cases
[13337.76 - 13341.48] that&#39;s fine but in the long run you must
[13339.84 - 13343.20] need to understand all the steps that&#39;s
[13341.48 - 13345.24] happening in the test code so that you
[13343.20 - 13347.48] can debug or let&#39;s say you change
[13345.24 - 13349.32] something on your code and you want to
[13347.48 - 13351.24] also update your test code if you don&#39;t
[13349.32 - 13353.28] know the basic or the fundamental then
[13351.24 - 13355.44] you are going to get a stock so that&#39;s
[13353.28 - 13357.52] why that&#39;s really important to actually
[13355.44 - 13359.68] understand that how testing unit testing
[13357.52 - 13361.72] and E testing work under the hood and
[13359.68 - 13364.92] then you can generate code and actually
[13361.72 - 13367.32] go beyond everything so again I&#39;m saying
[13364.92 - 13370.00] that if you want to see any video about
[13367.32 - 13372.76] testing just um just let me know so
[13370.00 - 13375.28] that&#39;s the code and uh I have tried to
[13372.76 - 13378.08] cover some of the important test case
[13375.28 - 13380.76] let&#39;s say if I just hide all those uh
[13378.08 - 13384.48] test suits then you will see all the
[13380.76 - 13387.60] test case so let&#39;s just hide all of them
[13384.48 - 13390.12] so these are all the test case so the
[13387.60 - 13392.36] first one should extract post data from
[13390.12 - 13395.12] Dom element so this is for the distract
[13392.36 - 13397.24] Reddit post from Dom so that&#39;s uh the
[13395.12 - 13399.28] the first function that&#39;s this one so
[13397.24 - 13401.00] the test is for this one and we have two
[13399.28 - 13402.60] test case that cover the whole thing so
[13401.00 - 13404.68] should handle missing attributes and
[13402.60 - 13406.72] then should exract post from Dom
[13404.68 - 13408.64] elements so then we have for the
[13406.72 - 13410.60] comments as well as which also have two
[13408.64 - 13412.68] it should handle missing content element
[13410.60 - 13414.36] and also it should extract those data
[13412.68 - 13416.88] from the Dom and you can see all the
[13414.36 - 13419.24] code here and then we have the extract
[13416.88 - 13421.00] Json list from markdown so that&#39;s like a
[13419.24 - 13423.68] pure function we need to be handled
[13421.00 - 13426.40] multiple cases I can add more because uh
[13423.68 - 13428.88] this function could have more a skage so
[13426.40 - 13431.04] this is kind of like a not proper
[13428.88 - 13432.92] function like not uh I would not say
[13431.04 - 13436.08] like standard function you have to make
[13432.92 - 13438.80] more condition here so that it gives you
[13436.08 - 13441.08] very very less error so that&#39;s why you
[13438.80 - 13443.88] also have to add more test case as well
[13441.08 - 13446.56] as but I just added four so that&#39;s uh
[13443.88 - 13448.88] kind of it so that&#39;s our test case and
[13446.56 - 13451.48] you can generate for each uh component
[13448.88 - 13453.96] re component you can also generate for
[13451.48 - 13456.44] uh the hook that uh we already created
[13453.96 - 13458.48] here we can create a test code for that
[13456.44 - 13460.80] as well as uh in the background we have
[13458.48 - 13462.72] some code so let&#39;s just add or write
[13460.80 - 13464.52] test code for this particular file so
[13462.72 - 13467.12] let&#39;s just write uh test code for this
[13464.52 - 13468.80] particular file so in the background uh
[13467.12 - 13471.56] I can just add this uh background
[13468.80 - 13475.84] test.ts so you have to add like fil
[13471.56 - 13478.36] name. test.ts or if it&#39;s like in react
[13475.84 - 13480.64] jsx any component then you have to add
[13478.36 - 13482.44] like background. test. TSX something
[13480.64 - 13483.92] like that so that&#39;s uh the name and
[13482.44 - 13486.48] that&#39;s the test code for actually the
[13483.92 - 13489.24] context menu so it have I think four or
[13486.48 - 13491.44] five test case and one test suit so
[13489.24 - 13493.00] that&#39;s uh our second test case I&#39;m not
[13491.44 - 13495.88] going to cover all the test case because
[13493.00 - 13498.28] you can just generate that uh by uh GPT
[13495.88 - 13500.16] or Gemini so I&#39;m not going to waste your
[13498.28 - 13501.84] time to actually showing all the stuff
[13500.16 - 13504.00] but if you need dedicated video then
[13501.84 - 13506.28] then just let me know so uh these are
[13504.00 - 13509.04] the two test case I have added now let&#39;s
[13506.28 - 13511.92] just try to see how we can run those
[13509.04 - 13515.04] test case and as I showed you earlier
[13511.92 - 13517.32] that you must have to add the script
[13515.04 - 13520.28] property like the test and then you are
[13517.32 - 13522.40] ready to go let&#39;s just try this pnpm
[13520.28 - 13524.52] test and you can see that it starts
[13522.40 - 13527.12] running all the test and it&#39;s showing
[13524.52 - 13529.72] there are two test and there are uh
[13527.12 - 13532.16] total 11 test that have been passed and
[13529.72 - 13534.92] there are two files there and if I just
[13532.16 - 13536.92] try to run the UI mode right now is uh
[13534.92 - 13538.72] run actually on the Headless mode which
[13536.92 - 13541.24] doesn&#39;t have any UI you we&#39;ll see
[13538.72 - 13543.04] everything on the you know headless or
[13541.24 - 13546.08] like in the terminal so you have to run
[13543.04 - 13548.60] like test UI so when we do so then you
[13546.08 - 13551.44] can see it asking to install another
[13548.60 - 13554.24] package and the package is called v/ UI
[13551.44 - 13555.84] so you have to just hit Y for proceed
[13554.24 - 13558.52] further then it will install that
[13555.84 - 13560.64] package now you can actually install the
[13558.52 - 13563.48] whole thing or like see the whole result
[13560.64 - 13567.24] and then you can see that that&#39;s the UI
[13563.48 - 13568.56] uh for the testing so if you go top then
[13567.24 - 13570.40] you can see it&#39;s running on the Local
[13568.56 - 13572.80] Host it&#39;s actually running in a server
[13570.40 - 13574.40] and you can see all the test uh suits as
[13572.80 - 13576.08] well as all the test case and if you
[13574.40 - 13578.44] click on the Run run it&#39;s going to run
[13576.08 - 13580.44] all the test case and you can see the
[13578.44 - 13582.92] result kind of like a statistics things
[13580.44 - 13584.64] here you can see all the time and a lot
[13582.92 - 13586.76] of stuff you can also see individual
[13584.64 - 13590.12] test case you can see the graph as well
[13586.76 - 13592.40] as if you just uh go on a particular uh
[13590.12 - 13594.32] test case then you can see the graph as
[13592.40 - 13596.20] well as you can see the code from here
[13594.32 - 13598.48] you can also maybe modify the code from
[13596.20 - 13600.84] here but I would not recommend you to
[13598.48 - 13602.68] modify here you can also see the console
[13600.84 - 13605.08] and uh in the report you can see all the
[13602.68 - 13606.60] test has been passed so there are a
[13605.08 - 13609.60] filter option as well as the search
[13606.60 - 13611.72] options you can see um expanding all the
[13609.60 - 13614.32] test case then there are some other
[13611.72 - 13616.60] tools that&#39;s like the dashboard we have
[13614.32 - 13619.56] we can also change the mode so there was
[13616.60 - 13622.16] like a lot of functionality uh it will
[13619.56 - 13625.64] give you out of the box if you use the
[13622.16 - 13628.16] vitus U mode and as well as you will see
[13625.64 - 13631.20] the result in the Headless mode in the
[13628.16 - 13633.64] terminal so that&#39;s about the vites and
[13631.20 - 13635.52] how you can run it in your local so I
[13633.64 - 13638.24] would just prefer to use The Headless
[13635.52 - 13640.28] mode sometimes uh if you need a lot of
[13638.24 - 13643.40] test then I would prefer to use the UI
[13640.28 - 13646.12] mode but uh most often the Headless mod
[13643.40 - 13648.24] work really fine so that&#39;s was the you
[13646.12 - 13650.88] know uh the for the testing and let&#39;s
[13648.24 - 13652.84] say you want to add a GitHub workflow
[13650.88 - 13655.76] for the testing so in our package.json
[13652.84 - 13659.40] so if I just clone the repo and install
[13655.76 - 13661.84] pnpm and then just uh run like pnpm test
[13659.40 - 13664.60] then it&#39;s going to run test code in the
[13661.84 - 13667.36] terminal so then the workflow is really
[13664.60 - 13669.24] easy so we have to create a folder
[13667.36 - 13670.60] called GitHub and inside that folder we
[13669.24 - 13672.96] have to create another folder called
[13670.60 - 13675.52] workflows and inside that folder we can
[13672.96 - 13679.44] create uh any name with any name and the
[13675.52 - 13682.68] extension should be w y yml and inside
[13679.44 - 13684.80] that yml you have to generate a script
[13682.68 - 13687.28] that will run in the GitHub or in the
[13684.80 - 13689.28] git so that&#39;s like a simple script that
[13687.28 - 13692.96] you can simply generate it from gemini
[13689.28 - 13696.16] or GPT to ask like I want to uh run this
[13692.96 - 13699.08] particular script like this one you can
[13696.16 - 13701.68] give the package.json script property to
[13699.08 - 13706.12] the gimi to in the prompt and ask like
[13701.68 - 13709.16] give me a wml give me a yml file to
[13706.12 - 13712.60] actually maintain the workflow like
[13709.16 - 13715.88] maintain the CI and I just did the same
[13712.60 - 13718.20] it was previously give me in P npm but I
[13715.88 - 13719.72] asked to give me in pnpm then it
[13718.20 - 13722.76] actually give me this version of code
[13719.72 - 13724.84] that actually set up the pnpm and then
[13722.76 - 13726.64] uh you can see that is showing uh like
[13724.84 - 13730.20] installing the dependency and then it&#39;s
[13726.64 - 13732.88] run like pnpm test or pnpm run test so
[13730.20 - 13735.48] when you just push the folder with the
[13732.88 - 13738.48] file then as the code mentioned like in
[13735.48 - 13740.80] the main branch the CI will be triggered
[13738.48 - 13743.52] and all the P that targeting main branch
[13740.80 - 13745.08] will also triggered for this CLI so
[13743.52 - 13747.72] whenever you put something on the main
[13745.08 - 13750.16] branch or you created a PR against main
[13747.72 - 13752.12] branch then this script or the CI file
[13750.16 - 13755.32] will be run and it will run the test
[13752.12 - 13757.76] file as well as uh we saw directly when
[13755.32 - 13760.08] we run in the terminal so you can see
[13757.76 - 13763.20] the same result that&#39;s running on there
[13760.08 - 13764.60] so that&#39;s like a simple CI script that&#39;s
[13763.20 - 13766.20] going to help you to actually run the
[13764.60 - 13768.44] whole thing in the cloud to check all
[13766.20 - 13770.72] the test codes are running well or not
[13768.44 - 13772.24] and the same thing will go for the E
[13770.72 - 13774.48] testing as well as so let&#39;s say you
[13772.24 - 13776.32] added it testing you just have to
[13774.48 - 13778.60] install playright and you can watch my
[13776.32 - 13782.04] playright video to understand it better
[13778.60 - 13784.80] and then uh you can just add your code
[13782.04 - 13786.44] test coverage and then you have to add a
[13784.80 - 13789.16] another script to actually run all of
[13786.44 - 13791.20] your e testing on the CI on the GitHub
[13789.16 - 13794.36] so that you can perform all the test
[13791.20 - 13796.96] there so I think that&#39;s all about this
[13794.36 - 13799.68] video as a summary we build a project
[13796.96 - 13801.88] first then I try to show you
[13799.68 - 13803.36] step-by-step process that how I am
[13801.88 - 13805.72] actually developing the whole thing how
[13803.36 - 13808.44] we are re refactoring the code how we
[13805.72 - 13811.44] are uh binding the API and all the stuff
[13808.44 - 13812.96] how we are actually rendering the react
[13811.44 - 13815.12] component into the content script I
[13812.96 - 13816.92] think that is the most uh crucial part
[13815.12 - 13819.88] of this video so if you understand how
[13816.92 - 13821.92] you can render react component into the
[13819.88 - 13824.40] content script then you can render any
[13821.92 - 13826.24] sort of framework uh component into your
[13824.40 - 13829.44] content script let&#39;s say you are know
[13826.24 - 13831.60] VJs you know isv so with the help of wxt
[13829.44 - 13834.56] framework you can now just simply
[13831.60 - 13836.80] rendered any UI in your content script
[13834.56 - 13839.44] or popup script based on the framework
[13836.80 - 13841.88] so I think wxt is really really cool
[13839.44 - 13844.36] framework to use for and also for
[13841.88 - 13846.68] building production ready framework and
[13844.36 - 13849.12] uh it&#39;s really open source you can play
[13846.68 - 13852.36] around it with the code Bas you can see
[13849.12 - 13854.80] everything there and uh for our project
[13852.36 - 13857.28] uh the project is pretty straightforward
[13854.80 - 13859.88] and it&#39;s simple right now if I have any
[13857.28 - 13862.08] plan to add more feature I can add that
[13859.88 - 13864.28] later I have some few plan to add more
[13862.08 - 13867.08] feature here because uh I want to add
[13864.28 - 13869.88] like some common prompt drop down where
[13867.08 - 13872.84] I can add my common uh prompt and also I
[13869.88 - 13874.88] can create some option here like uh like
[13872.84 - 13876.84] the common prompt I ask every time so I
[13874.88 - 13879.44] can just create the feature or the
[13876.84 - 13881.52] section where I can add multiple promt
[13879.44 - 13883.84] and I can use those promt as a drop down
[13881.52 - 13885.76] and then I can search those by selecting
[13883.84 - 13888.00] them so I don&#39;t have to type anything so
[13885.76 - 13891.16] I can add multiple feature in this
[13888.00 - 13894.00] particular um extension and uh it could
[13891.16 - 13896.60] be like a micro product which could be
[13894.00 - 13899.20] launched and I think I&#39;m going to uh not
[13896.60 - 13901.68] give you the source code because um my
[13899.20 - 13903.72] plan is to launch it maybe sometimes or
[13901.68 - 13905.04] maybe if you need the whole source code
[13903.72 - 13907.40] I will uh
[13905.04 - 13909.96] add the link but you must need to
[13907.40 - 13912.24] purchase it because uh uh it&#39;s like my
[13909.96 - 13914.44] code I don&#39;t want to sh uh give it like
[13912.24 - 13916.60] open source so why I&#39;m not giving it
[13914.44 - 13918.60] open source because I have a plan to
[13916.60 - 13921.28] make it like more uh you know more
[13918.60 - 13923.40] bigger adding more feature and uh making
[13921.28 - 13925.20] it kind of like a micr product so that&#39;s
[13923.40 - 13927.20] why I&#39;m not giving you the source code
[13925.20 - 13928.92] although you can just watch this whole
[13927.20 - 13931.00] video to understand what&#39;s happening you
[13928.92 - 13933.76] can directly clone uh kind of like
[13931.00 - 13935.36] similar extension I buil so just watch
[13933.76 - 13937.08] this video and and for the learning
[13935.36 - 13939.16] purpose you can learn it you can build
[13937.08 - 13941.32] it by yourself and if you need to use it
[13939.16 - 13943.68] you can also use that but for the source
[13941.32 - 13946.08] code I will provide the link in the
[13943.68 - 13947.40] description uh and I will uh put the
[13946.08 - 13949.32] price really low so that you can
[13947.40 - 13951.24] purchase it and you can play around it
[13949.32 - 13953.36] and if you have some idea you can just
[13951.24 - 13955.16] launch it there will be no issue with
[13953.36 - 13957.72] that source code if you just purchase it
[13955.16 - 13960.96] so that&#39;s going to be all about in this
[13957.72 - 13963.32] video if you love the video then like it
[13960.96 - 13965.60] subscribe my channel and also give me
[13963.32 - 13968.28] feedback about this video that uh are
[13965.60 - 13971.08] you understand fully or not what are the
[13968.28 - 13973.08] area that I can improve on my video as
[13971.08 - 13975.52] well as the explanation is correct or
[13973.08 - 13978.00] not any sort of feedback will be highly
[13975.52 - 13980.16] appreciated from you because I just uh
[13978.00 - 13982.44] started making content and I need
[13980.16 - 13985.12] feedback from you to actually move
[13982.44 - 13987.96] forward and also if you are looking for
[13985.12 - 13989.76] any video that I can cover so let&#39;s just
[13987.96 - 13992.24] uh give the comment in the video section
[13989.76 - 13994.92] so that I can add that into my too list
[13992.24 - 13998.72] so thank you for watching this video and
[13994.92 - 13998.72] I&#39;m going to see you in the next one